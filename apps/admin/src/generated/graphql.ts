import { GraphQLResolveInfo, GraphQLScalarType, GraphQLScalarTypeConfig } from 'graphql';
import gql from 'graphql-tag';
import { GraphQLClient } from 'graphql-request';
import * as Dom from 'graphql-request/dist/types.dom';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type RequireFields<T, K extends keyof T> = { [X in Exclude<keyof T, K>]?: T[X] } & { [P in K]-?: NonNullable<T[P]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: any;
  citext: any;
  float8: any;
  geography: any;
  geometry: any;
  jsonb: any;
  name: any;
  numeric: any;
  timestamp: any;
  timestamptz: any;
  uuid: any;
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']>;
  _gt?: InputMaybe<Scalars['Boolean']>;
  _gte?: InputMaybe<Scalars['Boolean']>;
  _in?: InputMaybe<Array<Scalars['Boolean']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Boolean']>;
  _lte?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Scalars['Boolean']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']>>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']>;
  _gt?: InputMaybe<Scalars['Int']>;
  _gte?: InputMaybe<Scalars['Int']>;
  _in?: InputMaybe<Array<Scalars['Int']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['Int']>;
  _lte?: InputMaybe<Scalars['Int']>;
  _neq?: InputMaybe<Scalars['Int']>;
  _nin?: InputMaybe<Array<Scalars['Int']>>;
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']>;
  _gt?: InputMaybe<Scalars['String']>;
  _gte?: InputMaybe<Scalars['String']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']>;
  _in?: InputMaybe<Array<Scalars['String']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']>;
  _lt?: InputMaybe<Scalars['String']>;
  _lte?: InputMaybe<Scalars['String']>;
  _neq?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']>;
  _nin?: InputMaybe<Array<Scalars['String']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']>;
};

/** columns and relationships of "auth.account_providers" */
export type Auth_Account_Providers = {
  /** An object relationship */
  account: Auth_Accounts;
  account_id: Scalars['uuid'];
  auth_provider: Scalars['String'];
  auth_provider_unique_id: Scalars['String'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  provider: Auth_Providers;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "auth.account_providers" */
export type Auth_Account_Providers_Aggregate = {
  aggregate?: Maybe<Auth_Account_Providers_Aggregate_Fields>;
  nodes: Array<Auth_Account_Providers>;
};

/** aggregate fields of "auth.account_providers" */
export type Auth_Account_Providers_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Account_Providers_Max_Fields>;
  min?: Maybe<Auth_Account_Providers_Min_Fields>;
};


/** aggregate fields of "auth.account_providers" */
export type Auth_Account_Providers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "auth.account_providers" */
export type Auth_Account_Providers_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Auth_Account_Providers_Max_Order_By>;
  min?: InputMaybe<Auth_Account_Providers_Min_Order_By>;
};

/** input type for inserting array relation for remote table "auth.account_providers" */
export type Auth_Account_Providers_Arr_Rel_Insert_Input = {
  data: Array<Auth_Account_Providers_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Account_Providers_On_Conflict>;
};

/** Boolean expression to filter rows from the table "auth.account_providers". All fields are combined with a logical 'AND'. */
export type Auth_Account_Providers_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Account_Providers_Bool_Exp>>;
  _not?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Account_Providers_Bool_Exp>>;
  account?: InputMaybe<Auth_Accounts_Bool_Exp>;
  account_id?: InputMaybe<Uuid_Comparison_Exp>;
  auth_provider?: InputMaybe<String_Comparison_Exp>;
  auth_provider_unique_id?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  provider?: InputMaybe<Auth_Providers_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.account_providers" */
export enum Auth_Account_Providers_Constraint {
  /** unique or primary key constraint */
  AccountProvidersAccountIdAuthProviderKey = 'account_providers_account_id_auth_provider_key',
  /** unique or primary key constraint */
  AccountProvidersAuthProviderAuthProviderUniqueIdKey = 'account_providers_auth_provider_auth_provider_unique_id_key',
  /** unique or primary key constraint */
  AccountProvidersPkey = 'account_providers_pkey'
}

/** input type for inserting data into table "auth.account_providers" */
export type Auth_Account_Providers_Insert_Input = {
  account?: InputMaybe<Auth_Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['uuid']>;
  auth_provider?: InputMaybe<Scalars['String']>;
  auth_provider_unique_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  provider?: InputMaybe<Auth_Providers_Obj_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Auth_Account_Providers_Max_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  auth_provider?: Maybe<Scalars['String']>;
  auth_provider_unique_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "auth.account_providers" */
export type Auth_Account_Providers_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  auth_provider?: InputMaybe<Order_By>;
  auth_provider_unique_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Auth_Account_Providers_Min_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  auth_provider?: Maybe<Scalars['String']>;
  auth_provider_unique_id?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "auth.account_providers" */
export type Auth_Account_Providers_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  auth_provider?: InputMaybe<Order_By>;
  auth_provider_unique_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth.account_providers" */
export type Auth_Account_Providers_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Account_Providers>;
};

/** on_conflict condition type for table "auth.account_providers" */
export type Auth_Account_Providers_On_Conflict = {
  constraint: Auth_Account_Providers_Constraint;
  update_columns?: Array<Auth_Account_Providers_Update_Column>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.account_providers". */
export type Auth_Account_Providers_Order_By = {
  account?: InputMaybe<Auth_Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  auth_provider?: InputMaybe<Order_By>;
  auth_provider_unique_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  provider?: InputMaybe<Auth_Providers_Order_By>;
  updated_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_account_providers */
export type Auth_Account_Providers_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "auth.account_providers" */
export enum Auth_Account_Providers_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  AuthProvider = 'auth_provider',
  /** column name */
  AuthProviderUniqueId = 'auth_provider_unique_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "auth.account_providers" */
export type Auth_Account_Providers_Set_Input = {
  account_id?: InputMaybe<Scalars['uuid']>;
  auth_provider?: InputMaybe<Scalars['String']>;
  auth_provider_unique_id?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "auth.account_providers" */
export enum Auth_Account_Providers_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  AuthProvider = 'auth_provider',
  /** column name */
  AuthProviderUniqueId = 'auth_provider_unique_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "auth.account_roles" */
export type Auth_Account_Roles = {
  /** An object relationship */
  account: Auth_Accounts;
  account_id: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  role: Scalars['String'];
  /** An object relationship */
  roleByRole: Auth_Roles;
};

/** aggregated selection of "auth.account_roles" */
export type Auth_Account_Roles_Aggregate = {
  aggregate?: Maybe<Auth_Account_Roles_Aggregate_Fields>;
  nodes: Array<Auth_Account_Roles>;
};

/** aggregate fields of "auth.account_roles" */
export type Auth_Account_Roles_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Account_Roles_Max_Fields>;
  min?: Maybe<Auth_Account_Roles_Min_Fields>;
};


/** aggregate fields of "auth.account_roles" */
export type Auth_Account_Roles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "auth.account_roles" */
export type Auth_Account_Roles_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Auth_Account_Roles_Max_Order_By>;
  min?: InputMaybe<Auth_Account_Roles_Min_Order_By>;
};

/** input type for inserting array relation for remote table "auth.account_roles" */
export type Auth_Account_Roles_Arr_Rel_Insert_Input = {
  data: Array<Auth_Account_Roles_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Account_Roles_On_Conflict>;
};

/** Boolean expression to filter rows from the table "auth.account_roles". All fields are combined with a logical 'AND'. */
export type Auth_Account_Roles_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Account_Roles_Bool_Exp>>;
  _not?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Account_Roles_Bool_Exp>>;
  account?: InputMaybe<Auth_Accounts_Bool_Exp>;
  account_id?: InputMaybe<Uuid_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  roleByRole?: InputMaybe<Auth_Roles_Bool_Exp>;
};

/** unique or primary key constraints on table "auth.account_roles" */
export enum Auth_Account_Roles_Constraint {
  /** unique or primary key constraint */
  AccountRolesPkey = 'account_roles_pkey',
  /** unique or primary key constraint */
  UserRolesAccountIdRoleKey = 'user_roles_account_id_role_key'
}

/** input type for inserting data into table "auth.account_roles" */
export type Auth_Account_Roles_Insert_Input = {
  account?: InputMaybe<Auth_Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
  roleByRole?: InputMaybe<Auth_Roles_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Auth_Account_Roles_Max_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "auth.account_roles" */
export type Auth_Account_Roles_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Auth_Account_Roles_Min_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "auth.account_roles" */
export type Auth_Account_Roles_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth.account_roles" */
export type Auth_Account_Roles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Account_Roles>;
};

/** on_conflict condition type for table "auth.account_roles" */
export type Auth_Account_Roles_On_Conflict = {
  constraint: Auth_Account_Roles_Constraint;
  update_columns?: Array<Auth_Account_Roles_Update_Column>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.account_roles". */
export type Auth_Account_Roles_Order_By = {
  account?: InputMaybe<Auth_Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  roleByRole?: InputMaybe<Auth_Roles_Order_By>;
};

/** primary key columns input for table: auth_account_roles */
export type Auth_Account_Roles_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "auth.account_roles" */
export enum Auth_Account_Roles_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Role = 'role'
}

/** input type for updating data in table "auth.account_roles" */
export type Auth_Account_Roles_Set_Input = {
  account_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
};

/** update columns of table "auth.account_roles" */
export enum Auth_Account_Roles_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Role = 'role'
}

/** columns and relationships of "auth.accounts" */
export type Auth_Accounts = {
  /** An array relationship */
  account_providers: Array<Auth_Account_Providers>;
  /** An aggregate relationship */
  account_providers_aggregate: Auth_Account_Providers_Aggregate;
  /** An array relationship */
  account_roles: Array<Auth_Account_Roles>;
  /** An aggregate relationship */
  account_roles_aggregate: Auth_Account_Roles_Aggregate;
  active: Scalars['Boolean'];
  created_at: Scalars['timestamptz'];
  custom_register_data?: Maybe<Scalars['jsonb']>;
  default_role: Scalars['String'];
  email?: Maybe<Scalars['citext']>;
  id: Scalars['uuid'];
  is_anonymous: Scalars['Boolean'];
  mfa_enabled: Scalars['Boolean'];
  new_email?: Maybe<Scalars['citext']>;
  otp_secret?: Maybe<Scalars['String']>;
  password_hash?: Maybe<Scalars['String']>;
  /** An array relationship */
  refresh_tokens: Array<Auth_Refresh_Tokens>;
  /** An aggregate relationship */
  refresh_tokens_aggregate: Auth_Refresh_Tokens_Aggregate;
  /** An object relationship */
  role: Auth_Roles;
  ticket: Scalars['uuid'];
  ticket_expires_at: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['uuid'];
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsAccount_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsAccount_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsAccount_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsAccount_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsCustom_Register_DataArgs = {
  path?: InputMaybe<Scalars['String']>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsRefresh_TokensArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};


/** columns and relationships of "auth.accounts" */
export type Auth_AccountsRefresh_Tokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};

/** aggregated selection of "auth.accounts" */
export type Auth_Accounts_Aggregate = {
  aggregate?: Maybe<Auth_Accounts_Aggregate_Fields>;
  nodes: Array<Auth_Accounts>;
};

/** aggregate fields of "auth.accounts" */
export type Auth_Accounts_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Accounts_Max_Fields>;
  min?: Maybe<Auth_Accounts_Min_Fields>;
};


/** aggregate fields of "auth.accounts" */
export type Auth_Accounts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "auth.accounts" */
export type Auth_Accounts_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Auth_Accounts_Max_Order_By>;
  min?: InputMaybe<Auth_Accounts_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Auth_Accounts_Append_Input = {
  custom_register_data?: InputMaybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "auth.accounts" */
export type Auth_Accounts_Arr_Rel_Insert_Input = {
  data: Array<Auth_Accounts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Accounts_On_Conflict>;
};

/** Boolean expression to filter rows from the table "auth.accounts". All fields are combined with a logical 'AND'. */
export type Auth_Accounts_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Accounts_Bool_Exp>>;
  _not?: InputMaybe<Auth_Accounts_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Accounts_Bool_Exp>>;
  account_providers?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
  account_roles?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
  active?: InputMaybe<Boolean_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  custom_register_data?: InputMaybe<Jsonb_Comparison_Exp>;
  default_role?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<Citext_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  is_anonymous?: InputMaybe<Boolean_Comparison_Exp>;
  mfa_enabled?: InputMaybe<Boolean_Comparison_Exp>;
  new_email?: InputMaybe<Citext_Comparison_Exp>;
  otp_secret?: InputMaybe<String_Comparison_Exp>;
  password_hash?: InputMaybe<String_Comparison_Exp>;
  refresh_tokens?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
  role?: InputMaybe<Auth_Roles_Bool_Exp>;
  ticket?: InputMaybe<Uuid_Comparison_Exp>;
  ticket_expires_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.accounts" */
export enum Auth_Accounts_Constraint {
  /** unique or primary key constraint */
  AccountsEmailKey = 'accounts_email_key',
  /** unique or primary key constraint */
  AccountsNewEmailKey = 'accounts_new_email_key',
  /** unique or primary key constraint */
  AccountsPkey = 'accounts_pkey',
  /** unique or primary key constraint */
  AccountsUserIdKey = 'accounts_user_id_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Auth_Accounts_Delete_At_Path_Input = {
  custom_register_data?: InputMaybe<Array<Scalars['String']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Auth_Accounts_Delete_Elem_Input = {
  custom_register_data?: InputMaybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Auth_Accounts_Delete_Key_Input = {
  custom_register_data?: InputMaybe<Scalars['String']>;
};

/** input type for inserting data into table "auth.accounts" */
export type Auth_Accounts_Insert_Input = {
  account_providers?: InputMaybe<Auth_Account_Providers_Arr_Rel_Insert_Input>;
  account_roles?: InputMaybe<Auth_Account_Roles_Arr_Rel_Insert_Input>;
  active?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  custom_register_data?: InputMaybe<Scalars['jsonb']>;
  default_role?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  id?: InputMaybe<Scalars['uuid']>;
  is_anonymous?: InputMaybe<Scalars['Boolean']>;
  mfa_enabled?: InputMaybe<Scalars['Boolean']>;
  new_email?: InputMaybe<Scalars['citext']>;
  otp_secret?: InputMaybe<Scalars['String']>;
  password_hash?: InputMaybe<Scalars['String']>;
  refresh_tokens?: InputMaybe<Auth_Refresh_Tokens_Arr_Rel_Insert_Input>;
  role?: InputMaybe<Auth_Roles_Obj_Rel_Insert_Input>;
  ticket?: InputMaybe<Scalars['uuid']>;
  ticket_expires_at?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Auth_Accounts_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  default_role?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  id?: Maybe<Scalars['uuid']>;
  new_email?: Maybe<Scalars['citext']>;
  otp_secret?: Maybe<Scalars['String']>;
  password_hash?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['uuid']>;
  ticket_expires_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "auth.accounts" */
export type Auth_Accounts_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  default_role?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  new_email?: InputMaybe<Order_By>;
  otp_secret?: InputMaybe<Order_By>;
  password_hash?: InputMaybe<Order_By>;
  ticket?: InputMaybe<Order_By>;
  ticket_expires_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Auth_Accounts_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  default_role?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['citext']>;
  id?: Maybe<Scalars['uuid']>;
  new_email?: Maybe<Scalars['citext']>;
  otp_secret?: Maybe<Scalars['String']>;
  password_hash?: Maybe<Scalars['String']>;
  ticket?: Maybe<Scalars['uuid']>;
  ticket_expires_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "auth.accounts" */
export type Auth_Accounts_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  default_role?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  new_email?: InputMaybe<Order_By>;
  otp_secret?: InputMaybe<Order_By>;
  password_hash?: InputMaybe<Order_By>;
  ticket?: InputMaybe<Order_By>;
  ticket_expires_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth.accounts" */
export type Auth_Accounts_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Accounts>;
};

/** input type for inserting object relation for remote table "auth.accounts" */
export type Auth_Accounts_Obj_Rel_Insert_Input = {
  data: Auth_Accounts_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Accounts_On_Conflict>;
};

/** on_conflict condition type for table "auth.accounts" */
export type Auth_Accounts_On_Conflict = {
  constraint: Auth_Accounts_Constraint;
  update_columns?: Array<Auth_Accounts_Update_Column>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.accounts". */
export type Auth_Accounts_Order_By = {
  account_providers_aggregate?: InputMaybe<Auth_Account_Providers_Aggregate_Order_By>;
  account_roles_aggregate?: InputMaybe<Auth_Account_Roles_Aggregate_Order_By>;
  active?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  custom_register_data?: InputMaybe<Order_By>;
  default_role?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  is_anonymous?: InputMaybe<Order_By>;
  mfa_enabled?: InputMaybe<Order_By>;
  new_email?: InputMaybe<Order_By>;
  otp_secret?: InputMaybe<Order_By>;
  password_hash?: InputMaybe<Order_By>;
  refresh_tokens_aggregate?: InputMaybe<Auth_Refresh_Tokens_Aggregate_Order_By>;
  role?: InputMaybe<Auth_Roles_Order_By>;
  ticket?: InputMaybe<Order_By>;
  ticket_expires_at?: InputMaybe<Order_By>;
  updated_at?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_accounts */
export type Auth_Accounts_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Auth_Accounts_Prepend_Input = {
  custom_register_data?: InputMaybe<Scalars['jsonb']>;
};

/** select columns of table "auth.accounts" */
export enum Auth_Accounts_Select_Column {
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomRegisterData = 'custom_register_data',
  /** column name */
  DefaultRole = 'default_role',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  IsAnonymous = 'is_anonymous',
  /** column name */
  MfaEnabled = 'mfa_enabled',
  /** column name */
  NewEmail = 'new_email',
  /** column name */
  OtpSecret = 'otp_secret',
  /** column name */
  PasswordHash = 'password_hash',
  /** column name */
  Ticket = 'ticket',
  /** column name */
  TicketExpiresAt = 'ticket_expires_at',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "auth.accounts" */
export type Auth_Accounts_Set_Input = {
  active?: InputMaybe<Scalars['Boolean']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  custom_register_data?: InputMaybe<Scalars['jsonb']>;
  default_role?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['citext']>;
  id?: InputMaybe<Scalars['uuid']>;
  is_anonymous?: InputMaybe<Scalars['Boolean']>;
  mfa_enabled?: InputMaybe<Scalars['Boolean']>;
  new_email?: InputMaybe<Scalars['citext']>;
  otp_secret?: InputMaybe<Scalars['String']>;
  password_hash?: InputMaybe<Scalars['String']>;
  ticket?: InputMaybe<Scalars['uuid']>;
  ticket_expires_at?: InputMaybe<Scalars['timestamptz']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "auth.accounts" */
export enum Auth_Accounts_Update_Column {
  /** column name */
  Active = 'active',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CustomRegisterData = 'custom_register_data',
  /** column name */
  DefaultRole = 'default_role',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  IsAnonymous = 'is_anonymous',
  /** column name */
  MfaEnabled = 'mfa_enabled',
  /** column name */
  NewEmail = 'new_email',
  /** column name */
  OtpSecret = 'otp_secret',
  /** column name */
  PasswordHash = 'password_hash',
  /** column name */
  Ticket = 'ticket',
  /** column name */
  TicketExpiresAt = 'ticket_expires_at',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "auth.migrations" */
export type Auth_Migrations = {
  executed_at?: Maybe<Scalars['timestamp']>;
  hash: Scalars['String'];
  id: Scalars['Int'];
  name: Scalars['String'];
};

/** aggregated selection of "auth.migrations" */
export type Auth_Migrations_Aggregate = {
  aggregate?: Maybe<Auth_Migrations_Aggregate_Fields>;
  nodes: Array<Auth_Migrations>;
};

/** aggregate fields of "auth.migrations" */
export type Auth_Migrations_Aggregate_Fields = {
  avg?: Maybe<Auth_Migrations_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Auth_Migrations_Max_Fields>;
  min?: Maybe<Auth_Migrations_Min_Fields>;
  stddev?: Maybe<Auth_Migrations_Stddev_Fields>;
  stddev_pop?: Maybe<Auth_Migrations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Auth_Migrations_Stddev_Samp_Fields>;
  sum?: Maybe<Auth_Migrations_Sum_Fields>;
  var_pop?: Maybe<Auth_Migrations_Var_Pop_Fields>;
  var_samp?: Maybe<Auth_Migrations_Var_Samp_Fields>;
  variance?: Maybe<Auth_Migrations_Variance_Fields>;
};


/** aggregate fields of "auth.migrations" */
export type Auth_Migrations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Migrations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Auth_Migrations_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "auth.migrations". All fields are combined with a logical 'AND'. */
export type Auth_Migrations_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Migrations_Bool_Exp>>;
  _not?: InputMaybe<Auth_Migrations_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Migrations_Bool_Exp>>;
  executed_at?: InputMaybe<Timestamp_Comparison_Exp>;
  hash?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.migrations" */
export enum Auth_Migrations_Constraint {
  /** unique or primary key constraint */
  MigrationsNameKey = 'migrations_name_key',
  /** unique or primary key constraint */
  MigrationsPkey = 'migrations_pkey'
}

/** input type for incrementing numeric columns in table "auth.migrations" */
export type Auth_Migrations_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "auth.migrations" */
export type Auth_Migrations_Insert_Input = {
  executed_at?: InputMaybe<Scalars['timestamp']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Auth_Migrations_Max_Fields = {
  executed_at?: Maybe<Scalars['timestamp']>;
  hash?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Auth_Migrations_Min_Fields = {
  executed_at?: Maybe<Scalars['timestamp']>;
  hash?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "auth.migrations" */
export type Auth_Migrations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Migrations>;
};

/** on_conflict condition type for table "auth.migrations" */
export type Auth_Migrations_On_Conflict = {
  constraint: Auth_Migrations_Constraint;
  update_columns?: Array<Auth_Migrations_Update_Column>;
  where?: InputMaybe<Auth_Migrations_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.migrations". */
export type Auth_Migrations_Order_By = {
  executed_at?: InputMaybe<Order_By>;
  hash?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_migrations */
export type Auth_Migrations_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "auth.migrations" */
export enum Auth_Migrations_Select_Column {
  /** column name */
  ExecutedAt = 'executed_at',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "auth.migrations" */
export type Auth_Migrations_Set_Input = {
  executed_at?: InputMaybe<Scalars['timestamp']>;
  hash?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Auth_Migrations_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Auth_Migrations_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Auth_Migrations_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Auth_Migrations_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** update columns of table "auth.migrations" */
export enum Auth_Migrations_Update_Column {
  /** column name */
  ExecutedAt = 'executed_at',
  /** column name */
  Hash = 'hash',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** aggregate var_pop on columns */
export type Auth_Migrations_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Auth_Migrations_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Auth_Migrations_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "auth.providers" */
export type Auth_Providers = {
  /** An array relationship */
  account_providers: Array<Auth_Account_Providers>;
  /** An aggregate relationship */
  account_providers_aggregate: Auth_Account_Providers_Aggregate;
  provider: Scalars['String'];
};


/** columns and relationships of "auth.providers" */
export type Auth_ProvidersAccount_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


/** columns and relationships of "auth.providers" */
export type Auth_ProvidersAccount_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};

/** aggregated selection of "auth.providers" */
export type Auth_Providers_Aggregate = {
  aggregate?: Maybe<Auth_Providers_Aggregate_Fields>;
  nodes: Array<Auth_Providers>;
};

/** aggregate fields of "auth.providers" */
export type Auth_Providers_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Providers_Max_Fields>;
  min?: Maybe<Auth_Providers_Min_Fields>;
};


/** aggregate fields of "auth.providers" */
export type Auth_Providers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Providers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "auth.providers". All fields are combined with a logical 'AND'. */
export type Auth_Providers_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Providers_Bool_Exp>>;
  _not?: InputMaybe<Auth_Providers_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Providers_Bool_Exp>>;
  account_providers?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
  provider?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.providers" */
export enum Auth_Providers_Constraint {
  /** unique or primary key constraint */
  ProvidersPkey = 'providers_pkey'
}

/** input type for inserting data into table "auth.providers" */
export type Auth_Providers_Insert_Input = {
  account_providers?: InputMaybe<Auth_Account_Providers_Arr_Rel_Insert_Input>;
  provider?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Auth_Providers_Max_Fields = {
  provider?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Auth_Providers_Min_Fields = {
  provider?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "auth.providers" */
export type Auth_Providers_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Providers>;
};

/** input type for inserting object relation for remote table "auth.providers" */
export type Auth_Providers_Obj_Rel_Insert_Input = {
  data: Auth_Providers_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Providers_On_Conflict>;
};

/** on_conflict condition type for table "auth.providers" */
export type Auth_Providers_On_Conflict = {
  constraint: Auth_Providers_Constraint;
  update_columns?: Array<Auth_Providers_Update_Column>;
  where?: InputMaybe<Auth_Providers_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.providers". */
export type Auth_Providers_Order_By = {
  account_providers_aggregate?: InputMaybe<Auth_Account_Providers_Aggregate_Order_By>;
  provider?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_providers */
export type Auth_Providers_Pk_Columns_Input = {
  provider: Scalars['String'];
};

/** select columns of table "auth.providers" */
export enum Auth_Providers_Select_Column {
  /** column name */
  Provider = 'provider'
}

/** input type for updating data in table "auth.providers" */
export type Auth_Providers_Set_Input = {
  provider?: InputMaybe<Scalars['String']>;
};

/** update columns of table "auth.providers" */
export enum Auth_Providers_Update_Column {
  /** column name */
  Provider = 'provider'
}

/** columns and relationships of "auth.refresh_tokens" */
export type Auth_Refresh_Tokens = {
  /** An object relationship */
  account: Auth_Accounts;
  account_id: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  expires_at: Scalars['timestamptz'];
  refresh_token: Scalars['uuid'];
};

/** aggregated selection of "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Aggregate = {
  aggregate?: Maybe<Auth_Refresh_Tokens_Aggregate_Fields>;
  nodes: Array<Auth_Refresh_Tokens>;
};

/** aggregate fields of "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Refresh_Tokens_Max_Fields>;
  min?: Maybe<Auth_Refresh_Tokens_Min_Fields>;
};


/** aggregate fields of "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Auth_Refresh_Tokens_Max_Order_By>;
  min?: InputMaybe<Auth_Refresh_Tokens_Min_Order_By>;
};

/** input type for inserting array relation for remote table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Arr_Rel_Insert_Input = {
  data: Array<Auth_Refresh_Tokens_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Refresh_Tokens_On_Conflict>;
};

/** Boolean expression to filter rows from the table "auth.refresh_tokens". All fields are combined with a logical 'AND'. */
export type Auth_Refresh_Tokens_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Refresh_Tokens_Bool_Exp>>;
  _not?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Refresh_Tokens_Bool_Exp>>;
  account?: InputMaybe<Auth_Accounts_Bool_Exp>;
  account_id?: InputMaybe<Uuid_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  expires_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  refresh_token?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.refresh_tokens" */
export enum Auth_Refresh_Tokens_Constraint {
  /** unique or primary key constraint */
  RefreshTokensPkey = 'refresh_tokens_pkey'
}

/** input type for inserting data into table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Insert_Input = {
  account?: InputMaybe<Auth_Accounts_Obj_Rel_Insert_Input>;
  account_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  expires_at?: InputMaybe<Scalars['timestamptz']>;
  refresh_token?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Auth_Refresh_Tokens_Max_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  expires_at?: Maybe<Scalars['timestamptz']>;
  refresh_token?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Max_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  refresh_token?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Auth_Refresh_Tokens_Min_Fields = {
  account_id?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  expires_at?: Maybe<Scalars['timestamptz']>;
  refresh_token?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Min_Order_By = {
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  refresh_token?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Refresh_Tokens>;
};

/** on_conflict condition type for table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_On_Conflict = {
  constraint: Auth_Refresh_Tokens_Constraint;
  update_columns?: Array<Auth_Refresh_Tokens_Update_Column>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.refresh_tokens". */
export type Auth_Refresh_Tokens_Order_By = {
  account?: InputMaybe<Auth_Accounts_Order_By>;
  account_id?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  expires_at?: InputMaybe<Order_By>;
  refresh_token?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_refresh_tokens */
export type Auth_Refresh_Tokens_Pk_Columns_Input = {
  refresh_token: Scalars['uuid'];
};

/** select columns of table "auth.refresh_tokens" */
export enum Auth_Refresh_Tokens_Select_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExpiresAt = 'expires_at',
  /** column name */
  RefreshToken = 'refresh_token'
}

/** input type for updating data in table "auth.refresh_tokens" */
export type Auth_Refresh_Tokens_Set_Input = {
  account_id?: InputMaybe<Scalars['uuid']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  expires_at?: InputMaybe<Scalars['timestamptz']>;
  refresh_token?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "auth.refresh_tokens" */
export enum Auth_Refresh_Tokens_Update_Column {
  /** column name */
  AccountId = 'account_id',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  ExpiresAt = 'expires_at',
  /** column name */
  RefreshToken = 'refresh_token'
}

/** columns and relationships of "auth.roles" */
export type Auth_Roles = {
  /** An array relationship */
  account_roles: Array<Auth_Account_Roles>;
  /** An aggregate relationship */
  account_roles_aggregate: Auth_Account_Roles_Aggregate;
  /** An array relationship */
  accounts: Array<Auth_Accounts>;
  /** An aggregate relationship */
  accounts_aggregate: Auth_Accounts_Aggregate;
  role: Scalars['String'];
};


/** columns and relationships of "auth.roles" */
export type Auth_RolesAccount_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


/** columns and relationships of "auth.roles" */
export type Auth_RolesAccount_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


/** columns and relationships of "auth.roles" */
export type Auth_RolesAccountsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};


/** columns and relationships of "auth.roles" */
export type Auth_RolesAccounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};

/** aggregated selection of "auth.roles" */
export type Auth_Roles_Aggregate = {
  aggregate?: Maybe<Auth_Roles_Aggregate_Fields>;
  nodes: Array<Auth_Roles>;
};

/** aggregate fields of "auth.roles" */
export type Auth_Roles_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Auth_Roles_Max_Fields>;
  min?: Maybe<Auth_Roles_Min_Fields>;
};


/** aggregate fields of "auth.roles" */
export type Auth_Roles_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Auth_Roles_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "auth.roles". All fields are combined with a logical 'AND'. */
export type Auth_Roles_Bool_Exp = {
  _and?: InputMaybe<Array<Auth_Roles_Bool_Exp>>;
  _not?: InputMaybe<Auth_Roles_Bool_Exp>;
  _or?: InputMaybe<Array<Auth_Roles_Bool_Exp>>;
  account_roles?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
  accounts?: InputMaybe<Auth_Accounts_Bool_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth.roles" */
export enum Auth_Roles_Constraint {
  /** unique or primary key constraint */
  RolesPkey = 'roles_pkey'
}

/** input type for inserting data into table "auth.roles" */
export type Auth_Roles_Insert_Input = {
  account_roles?: InputMaybe<Auth_Account_Roles_Arr_Rel_Insert_Input>;
  accounts?: InputMaybe<Auth_Accounts_Arr_Rel_Insert_Input>;
  role?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Auth_Roles_Max_Fields = {
  role?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Auth_Roles_Min_Fields = {
  role?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "auth.roles" */
export type Auth_Roles_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Auth_Roles>;
};

/** input type for inserting object relation for remote table "auth.roles" */
export type Auth_Roles_Obj_Rel_Insert_Input = {
  data: Auth_Roles_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Auth_Roles_On_Conflict>;
};

/** on_conflict condition type for table "auth.roles" */
export type Auth_Roles_On_Conflict = {
  constraint: Auth_Roles_Constraint;
  update_columns?: Array<Auth_Roles_Update_Column>;
  where?: InputMaybe<Auth_Roles_Bool_Exp>;
};

/** Ordering options when selecting data from "auth.roles". */
export type Auth_Roles_Order_By = {
  account_roles_aggregate?: InputMaybe<Auth_Account_Roles_Aggregate_Order_By>;
  accounts_aggregate?: InputMaybe<Auth_Accounts_Aggregate_Order_By>;
  role?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_roles */
export type Auth_Roles_Pk_Columns_Input = {
  role: Scalars['String'];
};

/** select columns of table "auth.roles" */
export enum Auth_Roles_Select_Column {
  /** column name */
  Role = 'role'
}

/** input type for updating data in table "auth.roles" */
export type Auth_Roles_Set_Input = {
  role?: InputMaybe<Scalars['String']>;
};

/** update columns of table "auth.roles" */
export enum Auth_Roles_Update_Column {
  /** column name */
  Role = 'role'
}

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']>;
  _gt?: InputMaybe<Scalars['bigint']>;
  _gte?: InputMaybe<Scalars['bigint']>;
  _in?: InputMaybe<Array<Scalars['bigint']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['bigint']>;
  _lte?: InputMaybe<Scalars['bigint']>;
  _neq?: InputMaybe<Scalars['bigint']>;
  _nin?: InputMaybe<Array<Scalars['bigint']>>;
};

/** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
export type Citext_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['citext']>;
  _gt?: InputMaybe<Scalars['citext']>;
  _gte?: InputMaybe<Scalars['citext']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['citext']>;
  _in?: InputMaybe<Array<Scalars['citext']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['citext']>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['citext']>;
  _lt?: InputMaybe<Scalars['citext']>;
  _lte?: InputMaybe<Scalars['citext']>;
  _neq?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['citext']>;
  _nin?: InputMaybe<Array<Scalars['citext']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['citext']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['citext']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['citext']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['citext']>;
};

/** columns and relationships of "entries" */
export type Entries = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregated selection of "entries" */
export type Entries_Aggregate = {
  aggregate?: Maybe<Entries_Aggregate_Fields>;
  nodes: Array<Entries>;
};

/** aggregate fields of "entries" */
export type Entries_Aggregate_Fields = {
  avg?: Maybe<Entries_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Entries_Max_Fields>;
  min?: Maybe<Entries_Min_Fields>;
  stddev?: Maybe<Entries_Stddev_Fields>;
  stddev_pop?: Maybe<Entries_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Entries_Stddev_Samp_Fields>;
  sum?: Maybe<Entries_Sum_Fields>;
  var_pop?: Maybe<Entries_Var_Pop_Fields>;
  var_samp?: Maybe<Entries_Var_Samp_Fields>;
  variance?: Maybe<Entries_Variance_Fields>;
};


/** aggregate fields of "entries" */
export type Entries_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Entries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Entries_Avg_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "entries". All fields are combined with a logical 'AND'. */
export type Entries_Bool_Exp = {
  _and?: InputMaybe<Array<Entries_Bool_Exp>>;
  _not?: InputMaybe<Entries_Bool_Exp>;
  _or?: InputMaybe<Array<Entries_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  members_count?: InputMaybe<Bigint_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Entries_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Entries_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

export type Entries_Nearby_Args = {
  limit?: InputMaybe<Scalars['Int']>;
  location?: InputMaybe<Scalars['geometry']>;
  max_date?: InputMaybe<Scalars['timestamptz']>;
  max_distance?: InputMaybe<Scalars['float8']>;
  min_date?: InputMaybe<Scalars['timestamptz']>;
  min_distance?: InputMaybe<Scalars['float8']>;
  own?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** Ordering options when selecting data from "entries". */
export type Entries_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  members_count?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** select columns of table "entries" */
export enum Entries_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  MembersCount = 'members_count',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type'
}

/** aggregate stddev on columns */
export type Entries_Stddev_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Entries_Stddev_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Entries_Stddev_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Entries_Sum_Fields = {
  members_count?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Entries_Var_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Entries_Var_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Entries_Variance_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "entry_members" */
export type Entry_Members = {
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "entry_members" */
export type Entry_Members_Aggregate = {
  aggregate?: Maybe<Entry_Members_Aggregate_Fields>;
  nodes: Array<Entry_Members>;
};

/** aggregate fields of "entry_members" */
export type Entry_Members_Aggregate_Fields = {
  avg?: Maybe<Entry_Members_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Entry_Members_Max_Fields>;
  min?: Maybe<Entry_Members_Min_Fields>;
  stddev?: Maybe<Entry_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Entry_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Entry_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Entry_Members_Sum_Fields>;
  var_pop?: Maybe<Entry_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Entry_Members_Var_Samp_Fields>;
  variance?: Maybe<Entry_Members_Variance_Fields>;
};


/** aggregate fields of "entry_members" */
export type Entry_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Entry_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Entry_Members_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "entry_members". All fields are combined with a logical 'AND'. */
export type Entry_Members_Bool_Exp = {
  _and?: InputMaybe<Array<Entry_Members_Bool_Exp>>;
  _not?: InputMaybe<Entry_Members_Bool_Exp>;
  _or?: InputMaybe<Array<Entry_Members_Bool_Exp>>;
  entry_id?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** aggregate max on columns */
export type Entry_Members_Max_Fields = {
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type Entry_Members_Min_Fields = {
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** Ordering options when selecting data from "entry_members". */
export type Entry_Members_Order_By = {
  entry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** select columns of table "entry_members" */
export enum Entry_Members_Select_Column {
  /** column name */
  EntryId = 'entry_id',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** aggregate stddev on columns */
export type Entry_Members_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Entry_Members_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Entry_Members_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Entry_Members_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type Entry_Members_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Entry_Members_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Entry_Members_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "entry_visits" */
export type Entry_Visits = {
  /** An object relationship */
  entry?: Maybe<Entries>;
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "entry_visits" */
export type Entry_Visits_Aggregate = {
  aggregate?: Maybe<Entry_Visits_Aggregate_Fields>;
  nodes: Array<Entry_Visits>;
};

/** aggregate fields of "entry_visits" */
export type Entry_Visits_Aggregate_Fields = {
  avg?: Maybe<Entry_Visits_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Entry_Visits_Max_Fields>;
  min?: Maybe<Entry_Visits_Min_Fields>;
  stddev?: Maybe<Entry_Visits_Stddev_Fields>;
  stddev_pop?: Maybe<Entry_Visits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Entry_Visits_Stddev_Samp_Fields>;
  sum?: Maybe<Entry_Visits_Sum_Fields>;
  var_pop?: Maybe<Entry_Visits_Var_Pop_Fields>;
  var_samp?: Maybe<Entry_Visits_Var_Samp_Fields>;
  variance?: Maybe<Entry_Visits_Variance_Fields>;
};


/** aggregate fields of "entry_visits" */
export type Entry_Visits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Entry_Visits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Entry_Visits_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "entry_visits". All fields are combined with a logical 'AND'. */
export type Entry_Visits_Bool_Exp = {
  _and?: InputMaybe<Array<Entry_Visits_Bool_Exp>>;
  _not?: InputMaybe<Entry_Visits_Bool_Exp>;
  _or?: InputMaybe<Array<Entry_Visits_Bool_Exp>>;
  entry?: InputMaybe<Entries_Bool_Exp>;
  entry_id?: InputMaybe<Uuid_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  visited_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** aggregate max on columns */
export type Entry_Visits_Max_Fields = {
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Entry_Visits_Min_Fields = {
  entry_id?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['bigint']>;
  type?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** Ordering options when selecting data from "entry_visits". */
export type Entry_Visits_Order_By = {
  entry?: InputMaybe<Entries_Order_By>;
  entry_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  visited_at?: InputMaybe<Order_By>;
};

/** select columns of table "entry_visits" */
export enum Entry_Visits_Select_Column {
  /** column name */
  EntryId = 'entry_id',
  /** column name */
  Id = 'id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VisitedAt = 'visited_at'
}

/** aggregate stddev on columns */
export type Entry_Visits_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Entry_Visits_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Entry_Visits_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Entry_Visits_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Entry_Visits_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Entry_Visits_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Entry_Visits_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "file_types" */
export type File_Types = {
  type: Scalars['String'];
};

/** aggregated selection of "file_types" */
export type File_Types_Aggregate = {
  aggregate?: Maybe<File_Types_Aggregate_Fields>;
  nodes: Array<File_Types>;
};

/** aggregate fields of "file_types" */
export type File_Types_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<File_Types_Max_Fields>;
  min?: Maybe<File_Types_Min_Fields>;
};


/** aggregate fields of "file_types" */
export type File_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<File_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "file_types". All fields are combined with a logical 'AND'. */
export type File_Types_Bool_Exp = {
  _and?: InputMaybe<Array<File_Types_Bool_Exp>>;
  _not?: InputMaybe<File_Types_Bool_Exp>;
  _or?: InputMaybe<Array<File_Types_Bool_Exp>>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "file_types" */
export enum File_Types_Constraint {
  /** unique or primary key constraint */
  FileTypesPkey = 'file_types_pkey'
}

export enum File_Types_Enum {
  Document = 'document',
  Image = 'image'
}

/** Boolean expression to compare columns of type "file_types_enum". All fields are combined with logical 'AND'. */
export type File_Types_Enum_Comparison_Exp = {
  _eq?: InputMaybe<File_Types_Enum>;
  _in?: InputMaybe<Array<File_Types_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<File_Types_Enum>;
  _nin?: InputMaybe<Array<File_Types_Enum>>;
};

/** input type for inserting data into table "file_types" */
export type File_Types_Insert_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type File_Types_Max_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type File_Types_Min_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "file_types" */
export type File_Types_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<File_Types>;
};

/** on_conflict condition type for table "file_types" */
export type File_Types_On_Conflict = {
  constraint: File_Types_Constraint;
  update_columns?: Array<File_Types_Update_Column>;
  where?: InputMaybe<File_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "file_types". */
export type File_Types_Order_By = {
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: file_types */
export type File_Types_Pk_Columns_Input = {
  type: Scalars['String'];
};

/** select columns of table "file_types" */
export enum File_Types_Select_Column {
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "file_types" */
export type File_Types_Set_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "file_types" */
export enum File_Types_Update_Column {
  /** column name */
  Type = 'type'
}

/** columns and relationships of "files" */
export type Files = {
  created_at?: Maybe<Scalars['timestamptz']>;
  downloadable_url?: Maybe<Scalars['String']>;
  file_path?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  /** An object relationship */
  initiative?: Maybe<Initiatives>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  type: File_Types_Enum;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "files" */
export type Files_Aggregate = {
  aggregate?: Maybe<Files_Aggregate_Fields>;
  nodes: Array<Files>;
};

/** aggregate fields of "files" */
export type Files_Aggregate_Fields = {
  avg?: Maybe<Files_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Files_Max_Fields>;
  min?: Maybe<Files_Min_Fields>;
  stddev?: Maybe<Files_Stddev_Fields>;
  stddev_pop?: Maybe<Files_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Files_Stddev_Samp_Fields>;
  sum?: Maybe<Files_Sum_Fields>;
  var_pop?: Maybe<Files_Var_Pop_Fields>;
  var_samp?: Maybe<Files_Var_Samp_Fields>;
  variance?: Maybe<Files_Variance_Fields>;
};


/** aggregate fields of "files" */
export type Files_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Files_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "files" */
export type Files_Aggregate_Order_By = {
  avg?: InputMaybe<Files_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Files_Max_Order_By>;
  min?: InputMaybe<Files_Min_Order_By>;
  stddev?: InputMaybe<Files_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Files_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Files_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Files_Sum_Order_By>;
  var_pop?: InputMaybe<Files_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Files_Var_Samp_Order_By>;
  variance?: InputMaybe<Files_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "files" */
export type Files_Arr_Rel_Insert_Input = {
  data: Array<Files_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Files_On_Conflict>;
};

/** aggregate avg on columns */
export type Files_Avg_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "files" */
export type Files_Avg_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "files". All fields are combined with a logical 'AND'. */
export type Files_Bool_Exp = {
  _and?: InputMaybe<Array<Files_Bool_Exp>>;
  _not?: InputMaybe<Files_Bool_Exp>;
  _or?: InputMaybe<Array<Files_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  downloadable_url?: InputMaybe<String_Comparison_Exp>;
  file_path?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  type?: InputMaybe<File_Types_Enum_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "files" */
export enum Files_Constraint {
  /** unique or primary key constraint */
  FilesPkey = 'files_pkey'
}

/** input type for incrementing numeric columns in table "files" */
export type Files_Inc_Input = {
  post_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "files" */
export type Files_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  downloadable_url?: InputMaybe<Scalars['String']>;
  file_path?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<File_Types_Enum>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Files_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  downloadable_url?: Maybe<Scalars['String']>;
  file_path?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "files" */
export type Files_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  downloadable_url?: InputMaybe<Order_By>;
  file_path?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Files_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  downloadable_url?: Maybe<Scalars['String']>;
  file_path?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "files" */
export type Files_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  downloadable_url?: InputMaybe<Order_By>;
  file_path?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "files" */
export type Files_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Files>;
};

/** on_conflict condition type for table "files" */
export type Files_On_Conflict = {
  constraint: Files_Constraint;
  update_columns?: Array<Files_Update_Column>;
  where?: InputMaybe<Files_Bool_Exp>;
};

/** Ordering options when selecting data from "files". */
export type Files_Order_By = {
  created_at?: InputMaybe<Order_By>;
  downloadable_url?: InputMaybe<Order_By>;
  file_path?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: files */
export type Files_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "files" */
export enum Files_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DownloadableUrl = 'downloadable_url',
  /** column name */
  FilePath = 'file_path',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "files" */
export type Files_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  downloadable_url?: InputMaybe<Scalars['String']>;
  file_path?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<File_Types_Enum>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Files_Stddev_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "files" */
export type Files_Stddev_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Files_Stddev_Pop_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "files" */
export type Files_Stddev_Pop_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Files_Stddev_Samp_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "files" */
export type Files_Stddev_Samp_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Files_Sum_Fields = {
  post_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "files" */
export type Files_Sum_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "files" */
export enum Files_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DownloadableUrl = 'downloadable_url',
  /** column name */
  FilePath = 'file_path',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Files_Var_Pop_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "files" */
export type Files_Var_Pop_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Files_Var_Samp_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "files" */
export type Files_Var_Samp_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Files_Variance_Fields = {
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "files" */
export type Files_Variance_Order_By = {
  post_id?: InputMaybe<Order_By>;
};

export type Geography_Cast_Exp = {
  geometry?: InputMaybe<Geometry_Comparison_Exp>;
};

/** columns and relationships of "geography_columns" */
export type Geography_Columns = {
  coord_dimension?: Maybe<Scalars['Int']>;
  f_geography_column?: Maybe<Scalars['name']>;
  f_table_catalog?: Maybe<Scalars['name']>;
  f_table_name?: Maybe<Scalars['name']>;
  f_table_schema?: Maybe<Scalars['name']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregated selection of "geography_columns" */
export type Geography_Columns_Aggregate = {
  aggregate?: Maybe<Geography_Columns_Aggregate_Fields>;
  nodes: Array<Geography_Columns>;
};

/** aggregate fields of "geography_columns" */
export type Geography_Columns_Aggregate_Fields = {
  avg?: Maybe<Geography_Columns_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Geography_Columns_Max_Fields>;
  min?: Maybe<Geography_Columns_Min_Fields>;
  stddev?: Maybe<Geography_Columns_Stddev_Fields>;
  stddev_pop?: Maybe<Geography_Columns_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Geography_Columns_Stddev_Samp_Fields>;
  sum?: Maybe<Geography_Columns_Sum_Fields>;
  var_pop?: Maybe<Geography_Columns_Var_Pop_Fields>;
  var_samp?: Maybe<Geography_Columns_Var_Samp_Fields>;
  variance?: Maybe<Geography_Columns_Variance_Fields>;
};


/** aggregate fields of "geography_columns" */
export type Geography_Columns_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Geography_Columns_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Geography_Columns_Avg_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "geography_columns". All fields are combined with a logical 'AND'. */
export type Geography_Columns_Bool_Exp = {
  _and?: InputMaybe<Array<Geography_Columns_Bool_Exp>>;
  _not?: InputMaybe<Geography_Columns_Bool_Exp>;
  _or?: InputMaybe<Array<Geography_Columns_Bool_Exp>>;
  coord_dimension?: InputMaybe<Int_Comparison_Exp>;
  f_geography_column?: InputMaybe<Name_Comparison_Exp>;
  f_table_catalog?: InputMaybe<Name_Comparison_Exp>;
  f_table_name?: InputMaybe<Name_Comparison_Exp>;
  f_table_schema?: InputMaybe<Name_Comparison_Exp>;
  srid?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Geography_Columns_Max_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Geography_Columns_Min_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** Ordering options when selecting data from "geography_columns". */
export type Geography_Columns_Order_By = {
  coord_dimension?: InputMaybe<Order_By>;
  f_geography_column?: InputMaybe<Order_By>;
  f_table_catalog?: InputMaybe<Order_By>;
  f_table_name?: InputMaybe<Order_By>;
  f_table_schema?: InputMaybe<Order_By>;
  srid?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** select columns of table "geography_columns" */
export enum Geography_Columns_Select_Column {
  /** column name */
  CoordDimension = 'coord_dimension',
  /** column name */
  FGeographyColumn = 'f_geography_column',
  /** column name */
  FTableCatalog = 'f_table_catalog',
  /** column name */
  FTableName = 'f_table_name',
  /** column name */
  FTableSchema = 'f_table_schema',
  /** column name */
  Srid = 'srid',
  /** column name */
  Type = 'type'
}

/** aggregate stddev on columns */
export type Geography_Columns_Stddev_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Geography_Columns_Stddev_Pop_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Geography_Columns_Stddev_Samp_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Geography_Columns_Sum_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  srid?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type Geography_Columns_Var_Pop_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Geography_Columns_Var_Samp_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Geography_Columns_Variance_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "geography". All fields are combined with logical 'AND'. */
export type Geography_Comparison_Exp = {
  _cast?: InputMaybe<Geography_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geography']>;
  _gt?: InputMaybe<Scalars['geography']>;
  _gte?: InputMaybe<Scalars['geography']>;
  _in?: InputMaybe<Array<Scalars['geography']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['geography']>;
  _lte?: InputMaybe<Scalars['geography']>;
  _neq?: InputMaybe<Scalars['geography']>;
  _nin?: InputMaybe<Array<Scalars['geography']>>;
  /** is the column within a given distance from the given geography value */
  _st_d_within?: InputMaybe<St_D_Within_Geography_Input>;
  /** does the column spatially intersect the given geography value */
  _st_intersects?: InputMaybe<Scalars['geography']>;
};

export type Geometry_Cast_Exp = {
  geography?: InputMaybe<Geography_Comparison_Exp>;
};

/** columns and relationships of "geometry_columns" */
export type Geometry_Columns = {
  coord_dimension?: Maybe<Scalars['Int']>;
  f_geometry_column?: Maybe<Scalars['name']>;
  f_table_catalog?: Maybe<Scalars['String']>;
  f_table_name?: Maybe<Scalars['name']>;
  f_table_schema?: Maybe<Scalars['name']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregated selection of "geometry_columns" */
export type Geometry_Columns_Aggregate = {
  aggregate?: Maybe<Geometry_Columns_Aggregate_Fields>;
  nodes: Array<Geometry_Columns>;
};

/** aggregate fields of "geometry_columns" */
export type Geometry_Columns_Aggregate_Fields = {
  avg?: Maybe<Geometry_Columns_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Geometry_Columns_Max_Fields>;
  min?: Maybe<Geometry_Columns_Min_Fields>;
  stddev?: Maybe<Geometry_Columns_Stddev_Fields>;
  stddev_pop?: Maybe<Geometry_Columns_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Geometry_Columns_Stddev_Samp_Fields>;
  sum?: Maybe<Geometry_Columns_Sum_Fields>;
  var_pop?: Maybe<Geometry_Columns_Var_Pop_Fields>;
  var_samp?: Maybe<Geometry_Columns_Var_Samp_Fields>;
  variance?: Maybe<Geometry_Columns_Variance_Fields>;
};


/** aggregate fields of "geometry_columns" */
export type Geometry_Columns_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Geometry_Columns_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Geometry_Columns_Avg_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "geometry_columns". All fields are combined with a logical 'AND'. */
export type Geometry_Columns_Bool_Exp = {
  _and?: InputMaybe<Array<Geometry_Columns_Bool_Exp>>;
  _not?: InputMaybe<Geometry_Columns_Bool_Exp>;
  _or?: InputMaybe<Array<Geometry_Columns_Bool_Exp>>;
  coord_dimension?: InputMaybe<Int_Comparison_Exp>;
  f_geometry_column?: InputMaybe<Name_Comparison_Exp>;
  f_table_catalog?: InputMaybe<String_Comparison_Exp>;
  f_table_name?: InputMaybe<Name_Comparison_Exp>;
  f_table_schema?: InputMaybe<Name_Comparison_Exp>;
  srid?: InputMaybe<Int_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "geometry_columns" */
export type Geometry_Columns_Inc_Input = {
  coord_dimension?: InputMaybe<Scalars['Int']>;
  srid?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "geometry_columns" */
export type Geometry_Columns_Insert_Input = {
  coord_dimension?: InputMaybe<Scalars['Int']>;
  f_geometry_column?: InputMaybe<Scalars['name']>;
  f_table_catalog?: InputMaybe<Scalars['String']>;
  f_table_name?: InputMaybe<Scalars['name']>;
  f_table_schema?: InputMaybe<Scalars['name']>;
  srid?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Geometry_Columns_Max_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  f_table_catalog?: Maybe<Scalars['String']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Geometry_Columns_Min_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  f_table_catalog?: Maybe<Scalars['String']>;
  srid?: Maybe<Scalars['Int']>;
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "geometry_columns" */
export type Geometry_Columns_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Geometry_Columns>;
};

/** Ordering options when selecting data from "geometry_columns". */
export type Geometry_Columns_Order_By = {
  coord_dimension?: InputMaybe<Order_By>;
  f_geometry_column?: InputMaybe<Order_By>;
  f_table_catalog?: InputMaybe<Order_By>;
  f_table_name?: InputMaybe<Order_By>;
  f_table_schema?: InputMaybe<Order_By>;
  srid?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** select columns of table "geometry_columns" */
export enum Geometry_Columns_Select_Column {
  /** column name */
  CoordDimension = 'coord_dimension',
  /** column name */
  FGeometryColumn = 'f_geometry_column',
  /** column name */
  FTableCatalog = 'f_table_catalog',
  /** column name */
  FTableName = 'f_table_name',
  /** column name */
  FTableSchema = 'f_table_schema',
  /** column name */
  Srid = 'srid',
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "geometry_columns" */
export type Geometry_Columns_Set_Input = {
  coord_dimension?: InputMaybe<Scalars['Int']>;
  f_geometry_column?: InputMaybe<Scalars['name']>;
  f_table_catalog?: InputMaybe<Scalars['String']>;
  f_table_name?: InputMaybe<Scalars['name']>;
  f_table_schema?: InputMaybe<Scalars['name']>;
  srid?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Geometry_Columns_Stddev_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Geometry_Columns_Stddev_Pop_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Geometry_Columns_Stddev_Samp_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Geometry_Columns_Sum_Fields = {
  coord_dimension?: Maybe<Scalars['Int']>;
  srid?: Maybe<Scalars['Int']>;
};

/** aggregate var_pop on columns */
export type Geometry_Columns_Var_Pop_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Geometry_Columns_Var_Samp_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Geometry_Columns_Variance_Fields = {
  coord_dimension?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "geometry". All fields are combined with logical 'AND'. */
export type Geometry_Comparison_Exp = {
  _cast?: InputMaybe<Geometry_Cast_Exp>;
  _eq?: InputMaybe<Scalars['geometry']>;
  _gt?: InputMaybe<Scalars['geometry']>;
  _gte?: InputMaybe<Scalars['geometry']>;
  _in?: InputMaybe<Array<Scalars['geometry']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['geometry']>;
  _lte?: InputMaybe<Scalars['geometry']>;
  _neq?: InputMaybe<Scalars['geometry']>;
  _nin?: InputMaybe<Array<Scalars['geometry']>>;
  /** is the column within a given 3D distance from the given geometry value */
  _st_3d_d_within?: InputMaybe<St_D_Within_Input>;
  /** does the column spatially intersect the given geometry value in 3D */
  _st_3d_intersects?: InputMaybe<Scalars['geometry']>;
  /** does the column contain the given geometry value */
  _st_contains?: InputMaybe<Scalars['geometry']>;
  /** does the column cross the given geometry value */
  _st_crosses?: InputMaybe<Scalars['geometry']>;
  /** is the column within a given distance from the given geometry value */
  _st_d_within?: InputMaybe<St_D_Within_Input>;
  /** is the column equal to given geometry value (directionality is ignored) */
  _st_equals?: InputMaybe<Scalars['geometry']>;
  /** does the column spatially intersect the given geometry value */
  _st_intersects?: InputMaybe<Scalars['geometry']>;
  /** does the column 'spatially overlap' (intersect but not completely contain) the given geometry value */
  _st_overlaps?: InputMaybe<Scalars['geometry']>;
  /** does the column have atleast one point in common with the given geometry value */
  _st_touches?: InputMaybe<Scalars['geometry']>;
  /** is the column contained in the given geometry value */
  _st_within?: InputMaybe<Scalars['geometry']>;
};

/** columns and relationships of "i18n" */
export type I18n = {
  category: Scalars['String'];
  en?: Maybe<Scalars['String']>;
  fr?: Maybe<Scalars['String']>;
  /** An object relationship */
  i18n_category: I18n_Categories;
  id: Scalars['Int'];
  key?: Maybe<Scalars['String']>;
  uk?: Maybe<Scalars['String']>;
};

/** aggregated selection of "i18n" */
export type I18n_Aggregate = {
  aggregate?: Maybe<I18n_Aggregate_Fields>;
  nodes: Array<I18n>;
};

/** aggregate fields of "i18n" */
export type I18n_Aggregate_Fields = {
  avg?: Maybe<I18n_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<I18n_Max_Fields>;
  min?: Maybe<I18n_Min_Fields>;
  stddev?: Maybe<I18n_Stddev_Fields>;
  stddev_pop?: Maybe<I18n_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<I18n_Stddev_Samp_Fields>;
  sum?: Maybe<I18n_Sum_Fields>;
  var_pop?: Maybe<I18n_Var_Pop_Fields>;
  var_samp?: Maybe<I18n_Var_Samp_Fields>;
  variance?: Maybe<I18n_Variance_Fields>;
};


/** aggregate fields of "i18n" */
export type I18n_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<I18n_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "i18n" */
export type I18n_Aggregate_Order_By = {
  avg?: InputMaybe<I18n_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<I18n_Max_Order_By>;
  min?: InputMaybe<I18n_Min_Order_By>;
  stddev?: InputMaybe<I18n_Stddev_Order_By>;
  stddev_pop?: InputMaybe<I18n_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<I18n_Stddev_Samp_Order_By>;
  sum?: InputMaybe<I18n_Sum_Order_By>;
  var_pop?: InputMaybe<I18n_Var_Pop_Order_By>;
  var_samp?: InputMaybe<I18n_Var_Samp_Order_By>;
  variance?: InputMaybe<I18n_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "i18n" */
export type I18n_Arr_Rel_Insert_Input = {
  data: Array<I18n_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<I18n_On_Conflict>;
};

/** aggregate avg on columns */
export type I18n_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "i18n" */
export type I18n_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "i18n". All fields are combined with a logical 'AND'. */
export type I18n_Bool_Exp = {
  _and?: InputMaybe<Array<I18n_Bool_Exp>>;
  _not?: InputMaybe<I18n_Bool_Exp>;
  _or?: InputMaybe<Array<I18n_Bool_Exp>>;
  category?: InputMaybe<String_Comparison_Exp>;
  en?: InputMaybe<String_Comparison_Exp>;
  fr?: InputMaybe<String_Comparison_Exp>;
  i18n_category?: InputMaybe<I18n_Categories_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  key?: InputMaybe<String_Comparison_Exp>;
  uk?: InputMaybe<String_Comparison_Exp>;
};

/** columns and relationships of "i18n_categories" */
export type I18n_Categories = {
  category: Scalars['String'];
  /** An array relationship */
  i18ns: Array<I18n>;
  /** An aggregate relationship */
  i18ns_aggregate: I18n_Aggregate;
};


/** columns and relationships of "i18n_categories" */
export type I18n_CategoriesI18nsArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};


/** columns and relationships of "i18n_categories" */
export type I18n_CategoriesI18ns_AggregateArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};

/** aggregated selection of "i18n_categories" */
export type I18n_Categories_Aggregate = {
  aggregate?: Maybe<I18n_Categories_Aggregate_Fields>;
  nodes: Array<I18n_Categories>;
};

/** aggregate fields of "i18n_categories" */
export type I18n_Categories_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<I18n_Categories_Max_Fields>;
  min?: Maybe<I18n_Categories_Min_Fields>;
};


/** aggregate fields of "i18n_categories" */
export type I18n_Categories_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<I18n_Categories_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "i18n_categories". All fields are combined with a logical 'AND'. */
export type I18n_Categories_Bool_Exp = {
  _and?: InputMaybe<Array<I18n_Categories_Bool_Exp>>;
  _not?: InputMaybe<I18n_Categories_Bool_Exp>;
  _or?: InputMaybe<Array<I18n_Categories_Bool_Exp>>;
  category?: InputMaybe<String_Comparison_Exp>;
  i18ns?: InputMaybe<I18n_Bool_Exp>;
};

/** unique or primary key constraints on table "i18n_categories" */
export enum I18n_Categories_Constraint {
  /** unique or primary key constraint */
  CategoryIndex = 'category_index',
  /** unique or primary key constraint */
  I18nCategoriesPkey = 'i18n_categories_pkey'
}

/** input type for inserting data into table "i18n_categories" */
export type I18n_Categories_Insert_Input = {
  category?: InputMaybe<Scalars['String']>;
  i18ns?: InputMaybe<I18n_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type I18n_Categories_Max_Fields = {
  category?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type I18n_Categories_Min_Fields = {
  category?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "i18n_categories" */
export type I18n_Categories_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<I18n_Categories>;
};

/** input type for inserting object relation for remote table "i18n_categories" */
export type I18n_Categories_Obj_Rel_Insert_Input = {
  data: I18n_Categories_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<I18n_Categories_On_Conflict>;
};

/** on_conflict condition type for table "i18n_categories" */
export type I18n_Categories_On_Conflict = {
  constraint: I18n_Categories_Constraint;
  update_columns?: Array<I18n_Categories_Update_Column>;
  where?: InputMaybe<I18n_Categories_Bool_Exp>;
};

/** Ordering options when selecting data from "i18n_categories". */
export type I18n_Categories_Order_By = {
  category?: InputMaybe<Order_By>;
  i18ns_aggregate?: InputMaybe<I18n_Aggregate_Order_By>;
};

/** primary key columns input for table: i18n_categories */
export type I18n_Categories_Pk_Columns_Input = {
  category: Scalars['String'];
};

/** select columns of table "i18n_categories" */
export enum I18n_Categories_Select_Column {
  /** column name */
  Category = 'category'
}

/** input type for updating data in table "i18n_categories" */
export type I18n_Categories_Set_Input = {
  category?: InputMaybe<Scalars['String']>;
};

/** update columns of table "i18n_categories" */
export enum I18n_Categories_Update_Column {
  /** column name */
  Category = 'category'
}

/** unique or primary key constraints on table "i18n" */
export enum I18n_Constraint {
  /** unique or primary key constraint */
  I18nKeyKey = 'i18n_key_key',
  /** unique or primary key constraint */
  I18nPkey = 'i18n_pkey',
  /** unique or primary key constraint */
  KeyIndex = 'key_index'
}

/** input type for incrementing numeric columns in table "i18n" */
export type I18n_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "i18n" */
export type I18n_Insert_Input = {
  category?: InputMaybe<Scalars['String']>;
  en?: InputMaybe<Scalars['String']>;
  fr?: InputMaybe<Scalars['String']>;
  i18n_category?: InputMaybe<I18n_Categories_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']>;
  key?: InputMaybe<Scalars['String']>;
  uk?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type I18n_Max_Fields = {
  category?: Maybe<Scalars['String']>;
  en?: Maybe<Scalars['String']>;
  fr?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  key?: Maybe<Scalars['String']>;
  uk?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "i18n" */
export type I18n_Max_Order_By = {
  category?: InputMaybe<Order_By>;
  en?: InputMaybe<Order_By>;
  fr?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  uk?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type I18n_Min_Fields = {
  category?: Maybe<Scalars['String']>;
  en?: Maybe<Scalars['String']>;
  fr?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  key?: Maybe<Scalars['String']>;
  uk?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "i18n" */
export type I18n_Min_Order_By = {
  category?: InputMaybe<Order_By>;
  en?: InputMaybe<Order_By>;
  fr?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  uk?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "i18n" */
export type I18n_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<I18n>;
};

/** on_conflict condition type for table "i18n" */
export type I18n_On_Conflict = {
  constraint: I18n_Constraint;
  update_columns?: Array<I18n_Update_Column>;
  where?: InputMaybe<I18n_Bool_Exp>;
};

/** Ordering options when selecting data from "i18n". */
export type I18n_Order_By = {
  category?: InputMaybe<Order_By>;
  en?: InputMaybe<Order_By>;
  fr?: InputMaybe<Order_By>;
  i18n_category?: InputMaybe<I18n_Categories_Order_By>;
  id?: InputMaybe<Order_By>;
  key?: InputMaybe<Order_By>;
  uk?: InputMaybe<Order_By>;
};

/** primary key columns input for table: i18n */
export type I18n_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "i18n" */
export enum I18n_Select_Column {
  /** column name */
  Category = 'category',
  /** column name */
  En = 'en',
  /** column name */
  Fr = 'fr',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  Uk = 'uk'
}

/** input type for updating data in table "i18n" */
export type I18n_Set_Input = {
  category?: InputMaybe<Scalars['String']>;
  en?: InputMaybe<Scalars['String']>;
  fr?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  key?: InputMaybe<Scalars['String']>;
  uk?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type I18n_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "i18n" */
export type I18n_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type I18n_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "i18n" */
export type I18n_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type I18n_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "i18n" */
export type I18n_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type I18n_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "i18n" */
export type I18n_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "i18n" */
export enum I18n_Update_Column {
  /** column name */
  Category = 'category',
  /** column name */
  En = 'en',
  /** column name */
  Fr = 'fr',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  Uk = 'uk'
}

/** aggregate var_pop on columns */
export type I18n_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "i18n" */
export type I18n_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type I18n_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "i18n" */
export type I18n_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type I18n_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "i18n" */
export type I18n_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_comment_reactions" */
export type Initiative_Comment_Reactions = {
  /** An object relationship */
  comment?: Maybe<Initiative_Comments>;
  comment_id: Scalars['Int'];
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
  type?: Maybe<Reactions_Enum>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Aggregate = {
  aggregate?: Maybe<Initiative_Comment_Reactions_Aggregate_Fields>;
  nodes: Array<Initiative_Comment_Reactions>;
};

/** aggregate fields of "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Aggregate_Fields = {
  avg?: Maybe<Initiative_Comment_Reactions_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Comment_Reactions_Max_Fields>;
  min?: Maybe<Initiative_Comment_Reactions_Min_Fields>;
  stddev?: Maybe<Initiative_Comment_Reactions_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Comment_Reactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Comment_Reactions_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Comment_Reactions_Sum_Fields>;
  var_pop?: Maybe<Initiative_Comment_Reactions_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Comment_Reactions_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Comment_Reactions_Variance_Fields>;
};


/** aggregate fields of "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Comment_Reactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Comment_Reactions_Max_Order_By>;
  min?: InputMaybe<Initiative_Comment_Reactions_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Comment_Reactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Comment_Reactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Comment_Reactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Comment_Reactions_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Comment_Reactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Comment_Reactions_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Comment_Reactions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Comment_Reactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Comment_Reactions_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Comment_Reactions_Avg_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Avg_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_comment_reactions". All fields are combined with a logical 'AND'. */
export type Initiative_Comment_Reactions_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Comment_Reactions_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Comment_Reactions_Bool_Exp>>;
  comment?: InputMaybe<Initiative_Comments_Bool_Exp>;
  comment_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  type?: InputMaybe<Reactions_Enum_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_comment_reactions" */
export enum Initiative_Comment_Reactions_Constraint {
  /** unique or primary key constraint */
  InitiativeCommentReactionsPkey = 'initiative_comment_reactions_pkey'
}

/** input type for incrementing numeric columns in table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Inc_Input = {
  comment_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  post_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Insert_Input = {
  comment?: InputMaybe<Initiative_Comments_Obj_Rel_Insert_Input>;
  comment_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<Reactions_Enum>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Comment_Reactions_Max_Fields = {
  comment_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Max_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Comment_Reactions_Min_Fields = {
  comment_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Min_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Comment_Reactions>;
};

/** on_conflict condition type for table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_On_Conflict = {
  constraint: Initiative_Comment_Reactions_Constraint;
  update_columns?: Array<Initiative_Comment_Reactions_Update_Column>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_comment_reactions". */
export type Initiative_Comment_Reactions_Order_By = {
  comment?: InputMaybe<Initiative_Comments_Order_By>;
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_comment_reactions */
export type Initiative_Comment_Reactions_Pk_Columns_Input = {
  comment_id: Scalars['Int'];
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};

/** select columns of table "initiative_comment_reactions" */
export enum Initiative_Comment_Reactions_Select_Column {
  /** column name */
  CommentId = 'comment_id',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Set_Input = {
  comment_id?: InputMaybe<Scalars['Int']>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<Reactions_Enum>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Comment_Reactions_Stddev_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Stddev_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Comment_Reactions_Stddev_Pop_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Stddev_Pop_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Comment_Reactions_Stddev_Samp_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Stddev_Samp_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Comment_Reactions_Sum_Fields = {
  comment_id?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  post_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Sum_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_comment_reactions" */
export enum Initiative_Comment_Reactions_Update_Column {
  /** column name */
  CommentId = 'comment_id',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Comment_Reactions_Var_Pop_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Var_Pop_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Comment_Reactions_Var_Samp_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Var_Samp_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Comment_Reactions_Variance_Fields = {
  comment_id?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_comment_reactions" */
export type Initiative_Comment_Reactions_Variance_Order_By = {
  comment_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_comments" */
export type Initiative_Comments = {
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
  message?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  /** An object relationship */
  post?: Maybe<Initiative_Posts>;
  post_id: Scalars['Int'];
  /** An array relationship */
  reactions: Array<Initiative_Comment_Reactions>;
  /** An aggregate relationship */
  reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "initiative_comments" */
export type Initiative_CommentsReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


/** columns and relationships of "initiative_comments" */
export type Initiative_CommentsReactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};

/** aggregated selection of "initiative_comments" */
export type Initiative_Comments_Aggregate = {
  aggregate?: Maybe<Initiative_Comments_Aggregate_Fields>;
  nodes: Array<Initiative_Comments>;
};

/** aggregate fields of "initiative_comments" */
export type Initiative_Comments_Aggregate_Fields = {
  avg?: Maybe<Initiative_Comments_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Comments_Max_Fields>;
  min?: Maybe<Initiative_Comments_Min_Fields>;
  stddev?: Maybe<Initiative_Comments_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Comments_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Comments_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Comments_Sum_Fields>;
  var_pop?: Maybe<Initiative_Comments_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Comments_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Comments_Variance_Fields>;
};


/** aggregate fields of "initiative_comments" */
export type Initiative_Comments_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_comments" */
export type Initiative_Comments_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Comments_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Comments_Max_Order_By>;
  min?: InputMaybe<Initiative_Comments_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Comments_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Comments_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Comments_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Comments_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Comments_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Comments_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Comments_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_comments" */
export type Initiative_Comments_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Comments_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Comments_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Comments_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_comments" */
export type Initiative_Comments_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_comments". All fields are combined with a logical 'AND'. */
export type Initiative_Comments_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Comments_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Comments_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Comments_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  post?: InputMaybe<Initiative_Posts_Bool_Exp>;
  post_id?: InputMaybe<Int_Comparison_Exp>;
  reactions?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_comments" */
export enum Initiative_Comments_Constraint {
  /** unique or primary key constraint */
  InitiativeCommentPkey = 'initiative_comment_pkey'
}

/** input type for incrementing numeric columns in table "initiative_comments" */
export type Initiative_Comments_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_comments" */
export type Initiative_Comments_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  post?: InputMaybe<Initiative_Posts_Obj_Rel_Insert_Input>;
  post_id?: InputMaybe<Scalars['Int']>;
  reactions?: InputMaybe<Initiative_Comment_Reactions_Arr_Rel_Insert_Input>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Comments_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  post_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_comments" */
export type Initiative_Comments_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Comments_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  post_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_comments" */
export type Initiative_Comments_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_comments" */
export type Initiative_Comments_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Comments>;
};

/** input type for inserting object relation for remote table "initiative_comments" */
export type Initiative_Comments_Obj_Rel_Insert_Input = {
  data: Initiative_Comments_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Comments_On_Conflict>;
};

/** on_conflict condition type for table "initiative_comments" */
export type Initiative_Comments_On_Conflict = {
  constraint: Initiative_Comments_Constraint;
  update_columns?: Array<Initiative_Comments_Update_Column>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_comments". */
export type Initiative_Comments_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  post?: InputMaybe<Initiative_Posts_Order_By>;
  post_id?: InputMaybe<Order_By>;
  reactions_aggregate?: InputMaybe<Initiative_Comment_Reactions_Aggregate_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_comments */
export type Initiative_Comments_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['Int'];
};

/** select columns of table "initiative_comments" */
export enum Initiative_Comments_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Message = 'message',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  PostId = 'post_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_comments" */
export type Initiative_Comments_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  post_id?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Comments_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_comments" */
export type Initiative_Comments_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Comments_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_comments" */
export type Initiative_Comments_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Comments_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_comments" */
export type Initiative_Comments_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Comments_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_comments" */
export type Initiative_Comments_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_comments" */
export enum Initiative_Comments_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Message = 'message',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  PostId = 'post_id',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Comments_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_comments" */
export type Initiative_Comments_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Comments_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_comments" */
export type Initiative_Comments_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Comments_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_comments" */
export type Initiative_Comments_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_donations" */
export type Initiative_Donations = {
  amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  recurrent?: Maybe<Scalars['Boolean']>;
  status: Scalars['String'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "initiative_donations" */
export type Initiative_Donations_Aggregate = {
  aggregate?: Maybe<Initiative_Donations_Aggregate_Fields>;
  nodes: Array<Initiative_Donations>;
};

/** aggregate fields of "initiative_donations" */
export type Initiative_Donations_Aggregate_Fields = {
  avg?: Maybe<Initiative_Donations_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Donations_Max_Fields>;
  min?: Maybe<Initiative_Donations_Min_Fields>;
  stddev?: Maybe<Initiative_Donations_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Donations_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Donations_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Donations_Sum_Fields>;
  var_pop?: Maybe<Initiative_Donations_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Donations_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Donations_Variance_Fields>;
};


/** aggregate fields of "initiative_donations" */
export type Initiative_Donations_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_donations" */
export type Initiative_Donations_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Donations_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Donations_Max_Order_By>;
  min?: InputMaybe<Initiative_Donations_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Donations_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Donations_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Donations_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Donations_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Donations_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Donations_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Donations_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_donations" */
export type Initiative_Donations_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Donations_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Donations_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Donations_Avg_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_donations" */
export type Initiative_Donations_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_donations". All fields are combined with a logical 'AND'. */
export type Initiative_Donations_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Donations_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Donations_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Donations_Bool_Exp>>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  recurrent?: InputMaybe<Boolean_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_donations" */
export enum Initiative_Donations_Constraint {
  /** unique or primary key constraint */
  InitiativeDonationsPkey = 'initiative_donations_pkey'
}

/** input type for incrementing numeric columns in table "initiative_donations" */
export type Initiative_Donations_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_donations" */
export type Initiative_Donations_Insert_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  recurrent?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Donations_Max_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_donations" */
export type Initiative_Donations_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Donations_Min_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currency?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_donations" */
export type Initiative_Donations_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_donations" */
export type Initiative_Donations_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Donations>;
};

/** on_conflict condition type for table "initiative_donations" */
export type Initiative_Donations_On_Conflict = {
  constraint: Initiative_Donations_Constraint;
  update_columns?: Array<Initiative_Donations_Update_Column>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_donations". */
export type Initiative_Donations_Order_By = {
  amount?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  recurrent?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_donations */
export type Initiative_Donations_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_donations" */
export enum Initiative_Donations_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Currency = 'currency',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Recurrent = 'recurrent',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_donations" */
export type Initiative_Donations_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  currency?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  recurrent?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Donations_Stddev_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_donations" */
export type Initiative_Donations_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Donations_Stddev_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_donations" */
export type Initiative_Donations_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Donations_Stddev_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_donations" */
export type Initiative_Donations_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Donations_Sum_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_donations" */
export type Initiative_Donations_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_donations" */
export enum Initiative_Donations_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Currency = 'currency',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Recurrent = 'recurrent',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Donations_Var_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_donations" */
export type Initiative_Donations_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Donations_Var_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_donations" */
export type Initiative_Donations_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Donations_Variance_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_donations" */
export type Initiative_Donations_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_edits" */
export type Initiative_Edits = {
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  info?: Maybe<Initiative_Info>;
  info_id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  poll?: Maybe<Initiative_Polls>;
  poll_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  post?: Maybe<Initiative_Posts>;
  post_id: Scalars['bigint'];
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "initiative_edits" */
export type Initiative_Edits_Aggregate = {
  aggregate?: Maybe<Initiative_Edits_Aggregate_Fields>;
  nodes: Array<Initiative_Edits>;
};

/** aggregate fields of "initiative_edits" */
export type Initiative_Edits_Aggregate_Fields = {
  avg?: Maybe<Initiative_Edits_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Edits_Max_Fields>;
  min?: Maybe<Initiative_Edits_Min_Fields>;
  stddev?: Maybe<Initiative_Edits_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Edits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Edits_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Edits_Sum_Fields>;
  var_pop?: Maybe<Initiative_Edits_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Edits_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Edits_Variance_Fields>;
};


/** aggregate fields of "initiative_edits" */
export type Initiative_Edits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_edits" */
export type Initiative_Edits_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Edits_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Edits_Max_Order_By>;
  min?: InputMaybe<Initiative_Edits_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Edits_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Edits_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Edits_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Edits_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Edits_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Edits_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Edits_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_edits" */
export type Initiative_Edits_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Edits_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Edits_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Edits_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_edits" */
export type Initiative_Edits_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_edits". All fields are combined with a logical 'AND'. */
export type Initiative_Edits_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Edits_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Edits_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Edits_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  info?: InputMaybe<Initiative_Info_Bool_Exp>;
  info_id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  poll?: InputMaybe<Initiative_Polls_Bool_Exp>;
  poll_id?: InputMaybe<Int_Comparison_Exp>;
  post?: InputMaybe<Initiative_Posts_Bool_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_edits" */
export enum Initiative_Edits_Constraint {
  /** unique or primary key constraint */
  InitiativeTasksPkey_1 = 'initiative_tasks_pkey_1',
  /** unique or primary key constraint */
  UnqInitiativeEditsPostId = 'unq_initiative_edits_post_id'
}

/** input type for incrementing numeric columns in table "initiative_edits" */
export type Initiative_Edits_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  info_id?: InputMaybe<Scalars['Int']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_edits" */
export type Initiative_Edits_Insert_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  info?: InputMaybe<Initiative_Info_Obj_Rel_Insert_Input>;
  info_id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll?: InputMaybe<Initiative_Polls_Obj_Rel_Insert_Input>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post?: InputMaybe<Initiative_Posts_Obj_Rel_Insert_Input>;
  post_id?: InputMaybe<Scalars['bigint']>;
  status?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Edits_Max_Fields = {
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  info_id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_edits" */
export type Initiative_Edits_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Edits_Min_Fields = {
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  info_id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_edits" */
export type Initiative_Edits_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_edits" */
export type Initiative_Edits_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Edits>;
};

/** on_conflict condition type for table "initiative_edits" */
export type Initiative_Edits_On_Conflict = {
  constraint: Initiative_Edits_Constraint;
  update_columns?: Array<Initiative_Edits_Update_Column>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_edits". */
export type Initiative_Edits_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  info?: InputMaybe<Initiative_Info_Order_By>;
  info_id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll?: InputMaybe<Initiative_Polls_Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post?: InputMaybe<Initiative_Posts_Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_edits */
export type Initiative_Edits_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_edits" */
export enum Initiative_Edits_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InfoId = 'info_id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_edits" */
export type Initiative_Edits_Set_Input = {
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  info_id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  status?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Edits_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_edits" */
export type Initiative_Edits_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Edits_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_edits" */
export type Initiative_Edits_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Edits_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_edits" */
export type Initiative_Edits_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Edits_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
  info_id?: Maybe<Scalars['Int']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_edits" */
export type Initiative_Edits_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_edits" */
export enum Initiative_Edits_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InfoId = 'info_id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Edits_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_edits" */
export type Initiative_Edits_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Edits_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_edits" */
export type Initiative_Edits_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Edits_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  info_id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_edits" */
export type Initiative_Edits_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  info_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_expenses" */
export type Initiative_Expenses = {
  amount: Scalars['numeric'];
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  link?: Maybe<Scalars['String']>;
  link_name?: Maybe<Scalars['String']>;
  /** An object relationship */
  poll?: Maybe<Initiative_Polls>;
  poll_id?: Maybe<Scalars['Int']>;
  /** An object relationship */
  post?: Maybe<Initiative_Posts>;
  post_id: Scalars['bigint'];
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "initiative_expenses" */
export type Initiative_Expenses_Aggregate = {
  aggregate?: Maybe<Initiative_Expenses_Aggregate_Fields>;
  nodes: Array<Initiative_Expenses>;
};

/** aggregate fields of "initiative_expenses" */
export type Initiative_Expenses_Aggregate_Fields = {
  avg?: Maybe<Initiative_Expenses_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Expenses_Max_Fields>;
  min?: Maybe<Initiative_Expenses_Min_Fields>;
  stddev?: Maybe<Initiative_Expenses_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Expenses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Expenses_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Expenses_Sum_Fields>;
  var_pop?: Maybe<Initiative_Expenses_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Expenses_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Expenses_Variance_Fields>;
};


/** aggregate fields of "initiative_expenses" */
export type Initiative_Expenses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_expenses" */
export type Initiative_Expenses_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Expenses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Expenses_Max_Order_By>;
  min?: InputMaybe<Initiative_Expenses_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Expenses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Expenses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Expenses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Expenses_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Expenses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Expenses_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Expenses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_expenses" */
export type Initiative_Expenses_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Expenses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Expenses_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Expenses_Avg_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Avg_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_expenses". All fields are combined with a logical 'AND'. */
export type Initiative_Expenses_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Expenses_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Expenses_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Expenses_Bool_Exp>>;
  amount?: InputMaybe<Numeric_Comparison_Exp>;
  currency?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  link?: InputMaybe<String_Comparison_Exp>;
  link_name?: InputMaybe<String_Comparison_Exp>;
  poll?: InputMaybe<Initiative_Polls_Bool_Exp>;
  poll_id?: InputMaybe<Int_Comparison_Exp>;
  post?: InputMaybe<Initiative_Posts_Bool_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_expenses" */
export enum Initiative_Expenses_Constraint {
  /** unique or primary key constraint */
  InitiativeTasksPkey_0 = 'initiative_tasks_pkey_0',
  /** unique or primary key constraint */
  UnqInitiativeExpensesPostId = 'unq_initiative_expenses_post_id'
}

/** input type for incrementing numeric columns in table "initiative_expenses" */
export type Initiative_Expenses_Inc_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['Int']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_expenses" */
export type Initiative_Expenses_Insert_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  currency?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  link_name?: InputMaybe<Scalars['String']>;
  poll?: InputMaybe<Initiative_Polls_Obj_Rel_Insert_Input>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post?: InputMaybe<Initiative_Posts_Obj_Rel_Insert_Input>;
  post_id?: InputMaybe<Scalars['bigint']>;
  status?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Expenses_Max_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  link_name?: Maybe<Scalars['String']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Max_Order_By = {
  amount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  link_name?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Expenses_Min_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  currency?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  link?: Maybe<Scalars['String']>;
  link_name?: Maybe<Scalars['String']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
  status?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Min_Order_By = {
  amount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  link_name?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_expenses" */
export type Initiative_Expenses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Expenses>;
};

/** on_conflict condition type for table "initiative_expenses" */
export type Initiative_Expenses_On_Conflict = {
  constraint: Initiative_Expenses_Constraint;
  update_columns?: Array<Initiative_Expenses_Update_Column>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_expenses". */
export type Initiative_Expenses_Order_By = {
  amount?: InputMaybe<Order_By>;
  currency?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  link?: InputMaybe<Order_By>;
  link_name?: InputMaybe<Order_By>;
  poll?: InputMaybe<Initiative_Polls_Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post?: InputMaybe<Initiative_Posts_Order_By>;
  post_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_expenses */
export type Initiative_Expenses_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_expenses" */
export enum Initiative_Expenses_Select_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Currency = 'currency',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Link = 'link',
  /** column name */
  LinkName = 'link_name',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_expenses" */
export type Initiative_Expenses_Set_Input = {
  amount?: InputMaybe<Scalars['numeric']>;
  currency?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  link?: InputMaybe<Scalars['String']>;
  link_name?: InputMaybe<Scalars['String']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  status?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Expenses_Stddev_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Stddev_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Expenses_Stddev_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Stddev_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Expenses_Stddev_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Stddev_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Expenses_Sum_Fields = {
  amount?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
  poll_id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Sum_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_expenses" */
export enum Initiative_Expenses_Update_Column {
  /** column name */
  Amount = 'amount',
  /** column name */
  Currency = 'currency',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Link = 'link',
  /** column name */
  LinkName = 'link_name',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Expenses_Var_Pop_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Var_Pop_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Expenses_Var_Samp_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Var_Samp_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Expenses_Variance_Fields = {
  amount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_expenses" */
export type Initiative_Expenses_Variance_Order_By = {
  amount?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_info" */
export type Initiative_Info = {
  approved_at?: Maybe<Scalars['timestamptz']>;
  context?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  edits: Array<Initiative_Edits>;
  /** An aggregate relationship */
  edits_aggregate: Initiative_Edits_Aggregate;
  goal?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  modified_at: Scalars['timestamptz'];
  problem?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "initiative_info" */
export type Initiative_InfoEditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiative_info" */
export type Initiative_InfoEdits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};

/** aggregated selection of "initiative_info" */
export type Initiative_Info_Aggregate = {
  aggregate?: Maybe<Initiative_Info_Aggregate_Fields>;
  nodes: Array<Initiative_Info>;
};

/** aggregate fields of "initiative_info" */
export type Initiative_Info_Aggregate_Fields = {
  avg?: Maybe<Initiative_Info_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Info_Max_Fields>;
  min?: Maybe<Initiative_Info_Min_Fields>;
  stddev?: Maybe<Initiative_Info_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Info_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Info_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Info_Sum_Fields>;
  var_pop?: Maybe<Initiative_Info_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Info_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Info_Variance_Fields>;
};


/** aggregate fields of "initiative_info" */
export type Initiative_Info_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_info" */
export type Initiative_Info_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Info_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Info_Max_Order_By>;
  min?: InputMaybe<Initiative_Info_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Info_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Info_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Info_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Info_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Info_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Info_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Info_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_info" */
export type Initiative_Info_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Info_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Info_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Info_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_info" */
export type Initiative_Info_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_info". All fields are combined with a logical 'AND'. */
export type Initiative_Info_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Info_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Info_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Info_Bool_Exp>>;
  approved_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  context?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  edits?: InputMaybe<Initiative_Edits_Bool_Exp>;
  goal?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  problem?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_info" */
export enum Initiative_Info_Constraint {
  /** unique or primary key constraint */
  PkInitiativeInfoId = 'pk_initiative_info_id'
}

/** input type for incrementing numeric columns in table "initiative_info" */
export type Initiative_Info_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_info" */
export type Initiative_Info_Insert_Input = {
  approved_at?: InputMaybe<Scalars['timestamptz']>;
  context?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  edits?: InputMaybe<Initiative_Edits_Arr_Rel_Insert_Input>;
  goal?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  problem?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Info_Max_Fields = {
  approved_at?: Maybe<Scalars['timestamptz']>;
  context?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  goal?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  problem?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_info" */
export type Initiative_Info_Max_Order_By = {
  approved_at?: InputMaybe<Order_By>;
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  problem?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Info_Min_Fields = {
  approved_at?: Maybe<Scalars['timestamptz']>;
  context?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  goal?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  problem?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_info" */
export type Initiative_Info_Min_Order_By = {
  approved_at?: InputMaybe<Order_By>;
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  problem?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_info" */
export type Initiative_Info_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Info>;
};

/** input type for inserting object relation for remote table "initiative_info" */
export type Initiative_Info_Obj_Rel_Insert_Input = {
  data: Initiative_Info_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Info_On_Conflict>;
};

/** on_conflict condition type for table "initiative_info" */
export type Initiative_Info_On_Conflict = {
  constraint: Initiative_Info_Constraint;
  update_columns?: Array<Initiative_Info_Update_Column>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_info". */
export type Initiative_Info_Order_By = {
  approved_at?: InputMaybe<Order_By>;
  context?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  edits_aggregate?: InputMaybe<Initiative_Edits_Aggregate_Order_By>;
  goal?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  problem?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_info */
export type Initiative_Info_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_info" */
export enum Initiative_Info_Select_Column {
  /** column name */
  ApprovedAt = 'approved_at',
  /** column name */
  Context = 'context',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Goal = 'goal',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Problem = 'problem',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_info" */
export type Initiative_Info_Set_Input = {
  approved_at?: InputMaybe<Scalars['timestamptz']>;
  context?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  goal?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  problem?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Info_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_info" */
export type Initiative_Info_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Info_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_info" */
export type Initiative_Info_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Info_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_info" */
export type Initiative_Info_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Info_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_info" */
export type Initiative_Info_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_info" */
export enum Initiative_Info_Update_Column {
  /** column name */
  ApprovedAt = 'approved_at',
  /** column name */
  Context = 'context',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Goal = 'goal',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Problem = 'problem',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Info_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_info" */
export type Initiative_Info_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Info_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_info" */
export type Initiative_Info_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Info_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_info" */
export type Initiative_Info_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_members" */
export type Initiative_Members = {
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  donations: Array<Initiative_Donations>;
  /** An aggregate relationship */
  donations_aggregate: Initiative_Donations_Aggregate;
  email_notifications_permission?: Maybe<Scalars['Boolean']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  push_notifications_permission?: Maybe<Scalars['Boolean']>;
  /** An array relationship */
  tasks: Array<Initiative_Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Initiative_Tasks_Aggregate;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  volunteers_aggregate: Initiative_Volunteers_Aggregate;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersDonationsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersDonations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersTasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersVolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


/** columns and relationships of "initiative_members" */
export type Initiative_MembersVolunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** aggregated selection of "initiative_members" */
export type Initiative_Members_Aggregate = {
  aggregate?: Maybe<Initiative_Members_Aggregate_Fields>;
  nodes: Array<Initiative_Members>;
};

/** aggregate fields of "initiative_members" */
export type Initiative_Members_Aggregate_Fields = {
  avg?: Maybe<Initiative_Members_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Members_Max_Fields>;
  min?: Maybe<Initiative_Members_Min_Fields>;
  stddev?: Maybe<Initiative_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Members_Sum_Fields>;
  var_pop?: Maybe<Initiative_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Members_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Members_Variance_Fields>;
};


/** aggregate fields of "initiative_members" */
export type Initiative_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_members" */
export type Initiative_Members_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Members_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Members_Max_Order_By>;
  min?: InputMaybe<Initiative_Members_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Members_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Members_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Members_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Members_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Members_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Members_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Members_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_members" */
export type Initiative_Members_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Members_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Members_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Members_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_members" */
export type Initiative_Members_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_members". All fields are combined with a logical 'AND'. */
export type Initiative_Members_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Members_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Members_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Members_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  donations?: InputMaybe<Initiative_Donations_Bool_Exp>;
  email_notifications_permission?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  push_notifications_permission?: InputMaybe<Boolean_Comparison_Exp>;
  tasks?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  volunteers?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** unique or primary key constraints on table "initiative_members" */
export enum Initiative_Members_Constraint {
  /** unique or primary key constraint */
  InitiativeMemberPkey = 'initiative_member_pkey'
}

/** input type for incrementing numeric columns in table "initiative_members" */
export type Initiative_Members_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_members" */
export type Initiative_Members_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  donations?: InputMaybe<Initiative_Donations_Arr_Rel_Insert_Input>;
  email_notifications_permission?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  push_notifications_permission?: InputMaybe<Scalars['Boolean']>;
  tasks?: InputMaybe<Initiative_Tasks_Arr_Rel_Insert_Input>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  volunteers?: InputMaybe<Initiative_Volunteers_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Initiative_Members_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_members" */
export type Initiative_Members_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Members_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_members" */
export type Initiative_Members_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_members" */
export type Initiative_Members_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Members>;
};

/** on_conflict condition type for table "initiative_members" */
export type Initiative_Members_On_Conflict = {
  constraint: Initiative_Members_Constraint;
  update_columns?: Array<Initiative_Members_Update_Column>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_members". */
export type Initiative_Members_Order_By = {
  created_at?: InputMaybe<Order_By>;
  donations_aggregate?: InputMaybe<Initiative_Donations_Aggregate_Order_By>;
  email_notifications_permission?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  push_notifications_permission?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Initiative_Tasks_Aggregate_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers_aggregate?: InputMaybe<Initiative_Volunteers_Aggregate_Order_By>;
};

/** primary key columns input for table: initiative_members */
export type Initiative_Members_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_members" */
export enum Initiative_Members_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmailNotificationsPermission = 'email_notifications_permission',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PushNotificationsPermission = 'push_notifications_permission',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_members" */
export type Initiative_Members_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  email_notifications_permission?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  push_notifications_permission?: InputMaybe<Scalars['Boolean']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Members_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_members" */
export type Initiative_Members_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Members_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_members" */
export type Initiative_Members_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Members_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_members" */
export type Initiative_Members_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Members_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_members" */
export type Initiative_Members_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_members" */
export enum Initiative_Members_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmailNotificationsPermission = 'email_notifications_permission',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PushNotificationsPermission = 'push_notifications_permission',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Members_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_members" */
export type Initiative_Members_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Members_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_members" */
export type Initiative_Members_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Members_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_members" */
export type Initiative_Members_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_poll_votes" */
export type Initiative_Poll_Votes = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  poll?: Maybe<Initiative_Polls>;
  poll_id: Scalars['Int'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['uuid'];
  value: Scalars['String'];
};

/** aggregated selection of "initiative_poll_votes" */
export type Initiative_Poll_Votes_Aggregate = {
  aggregate?: Maybe<Initiative_Poll_Votes_Aggregate_Fields>;
  nodes: Array<Initiative_Poll_Votes>;
};

/** aggregate fields of "initiative_poll_votes" */
export type Initiative_Poll_Votes_Aggregate_Fields = {
  avg?: Maybe<Initiative_Poll_Votes_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Poll_Votes_Max_Fields>;
  min?: Maybe<Initiative_Poll_Votes_Min_Fields>;
  stddev?: Maybe<Initiative_Poll_Votes_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Poll_Votes_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Poll_Votes_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Poll_Votes_Sum_Fields>;
  var_pop?: Maybe<Initiative_Poll_Votes_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Poll_Votes_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Poll_Votes_Variance_Fields>;
};


/** aggregate fields of "initiative_poll_votes" */
export type Initiative_Poll_Votes_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Poll_Votes_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Poll_Votes_Max_Order_By>;
  min?: InputMaybe<Initiative_Poll_Votes_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Poll_Votes_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Poll_Votes_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Poll_Votes_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Poll_Votes_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Poll_Votes_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Poll_Votes_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Poll_Votes_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Poll_Votes_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Poll_Votes_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Poll_Votes_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_poll_votes". All fields are combined with a logical 'AND'. */
export type Initiative_Poll_Votes_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Poll_Votes_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Poll_Votes_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  poll?: InputMaybe<Initiative_Polls_Bool_Exp>;
  poll_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  value?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_poll_votes" */
export enum Initiative_Poll_Votes_Constraint {
  /** unique or primary key constraint */
  PkInitiativePollVotesId = 'pk_initiative_poll_votes_id'
}

/** input type for incrementing numeric columns in table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  poll_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll?: InputMaybe<Initiative_Polls_Obj_Rel_Insert_Input>;
  poll_id?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Initiative_Poll_Votes_Max_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
  value?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Poll_Votes_Min_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
  value?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Poll_Votes>;
};

/** on_conflict condition type for table "initiative_poll_votes" */
export type Initiative_Poll_Votes_On_Conflict = {
  constraint: Initiative_Poll_Votes_Constraint;
  update_columns?: Array<Initiative_Poll_Votes_Update_Column>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_poll_votes". */
export type Initiative_Poll_Votes_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll?: InputMaybe<Initiative_Polls_Order_By>;
  poll_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  value?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_poll_votes */
export type Initiative_Poll_Votes_Pk_Columns_Input = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  poll_id: Scalars['Int'];
};

/** select columns of table "initiative_poll_votes" */
export enum Initiative_Poll_Votes_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Value = 'value'
}

/** input type for updating data in table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Set_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['uuid']>;
  value?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Initiative_Poll_Votes_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Poll_Votes_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Poll_Votes_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Poll_Votes_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
  poll_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_poll_votes" */
export enum Initiative_Poll_Votes_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Value = 'value'
}

/** aggregate var_pop on columns */
export type Initiative_Poll_Votes_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Poll_Votes_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Poll_Votes_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_poll_votes" */
export type Initiative_Poll_Votes_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_polls" */
export type Initiative_Polls = {
  /** An array relationship */
  edits: Array<Initiative_Edits>;
  /** An aggregate relationship */
  edits_aggregate: Initiative_Edits_Aggregate;
  /** An array relationship */
  expenses: Array<Initiative_Expenses>;
  /** An aggregate relationship */
  expenses_aggregate: Initiative_Expenses_Aggregate;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An array relationship */
  tasks: Array<Initiative_Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Initiative_Tasks_Aggregate;
  user_id?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  votes: Array<Initiative_Poll_Votes>;
  /** An aggregate relationship */
  votes_aggregate: Initiative_Poll_Votes_Aggregate;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsEditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsEdits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsExpenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsTasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsVotesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


/** columns and relationships of "initiative_polls" */
export type Initiative_PollsVotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};

/** aggregated selection of "initiative_polls" */
export type Initiative_Polls_Aggregate = {
  aggregate?: Maybe<Initiative_Polls_Aggregate_Fields>;
  nodes: Array<Initiative_Polls>;
};

/** aggregate fields of "initiative_polls" */
export type Initiative_Polls_Aggregate_Fields = {
  avg?: Maybe<Initiative_Polls_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Polls_Max_Fields>;
  min?: Maybe<Initiative_Polls_Min_Fields>;
  stddev?: Maybe<Initiative_Polls_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Polls_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Polls_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Polls_Sum_Fields>;
  var_pop?: Maybe<Initiative_Polls_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Polls_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Polls_Variance_Fields>;
};


/** aggregate fields of "initiative_polls" */
export type Initiative_Polls_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_polls" */
export type Initiative_Polls_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Polls_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Polls_Max_Order_By>;
  min?: InputMaybe<Initiative_Polls_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Polls_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Polls_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Polls_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Polls_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Polls_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Polls_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Polls_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_polls" */
export type Initiative_Polls_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Polls_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Polls_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Polls_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_polls" */
export type Initiative_Polls_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_polls". All fields are combined with a logical 'AND'. */
export type Initiative_Polls_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Polls_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Polls_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Polls_Bool_Exp>>;
  edits?: InputMaybe<Initiative_Edits_Bool_Exp>;
  expenses?: InputMaybe<Initiative_Expenses_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  tasks?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  votes?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};

/** unique or primary key constraints on table "initiative_polls" */
export enum Initiative_Polls_Constraint {
  /** unique or primary key constraint */
  InitiativePollsPkey = 'initiative_polls_pkey'
}

/** input type for incrementing numeric columns in table "initiative_polls" */
export type Initiative_Polls_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_polls" */
export type Initiative_Polls_Insert_Input = {
  edits?: InputMaybe<Initiative_Edits_Arr_Rel_Insert_Input>;
  expenses?: InputMaybe<Initiative_Expenses_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  tasks?: InputMaybe<Initiative_Tasks_Arr_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  votes?: InputMaybe<Initiative_Poll_Votes_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Initiative_Polls_Max_Fields = {
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_polls" */
export type Initiative_Polls_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Polls_Min_Fields = {
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_polls" */
export type Initiative_Polls_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_polls" */
export type Initiative_Polls_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Polls>;
};

/** input type for inserting object relation for remote table "initiative_polls" */
export type Initiative_Polls_Obj_Rel_Insert_Input = {
  data: Initiative_Polls_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Polls_On_Conflict>;
};

/** on_conflict condition type for table "initiative_polls" */
export type Initiative_Polls_On_Conflict = {
  constraint: Initiative_Polls_Constraint;
  update_columns?: Array<Initiative_Polls_Update_Column>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_polls". */
export type Initiative_Polls_Order_By = {
  edits_aggregate?: InputMaybe<Initiative_Edits_Aggregate_Order_By>;
  expenses_aggregate?: InputMaybe<Initiative_Expenses_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  tasks_aggregate?: InputMaybe<Initiative_Tasks_Aggregate_Order_By>;
  user_id?: InputMaybe<Order_By>;
  votes_aggregate?: InputMaybe<Initiative_Poll_Votes_Aggregate_Order_By>;
};

/** primary key columns input for table: initiative_polls */
export type Initiative_Polls_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_polls" */
export enum Initiative_Polls_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_polls" */
export type Initiative_Polls_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Polls_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_polls" */
export type Initiative_Polls_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Polls_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_polls" */
export type Initiative_Polls_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Polls_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_polls" */
export type Initiative_Polls_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Polls_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_polls" */
export type Initiative_Polls_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_polls" */
export enum Initiative_Polls_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Polls_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_polls" */
export type Initiative_Polls_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Polls_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_polls" */
export type Initiative_Polls_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Polls_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_polls" */
export type Initiative_Polls_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_post_reactions" */
export type Initiative_Post_Reactions = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  post?: Maybe<Initiative_Posts>;
  post_id: Scalars['bigint'];
  type?: Maybe<Reactions_Enum>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "initiative_post_reactions" */
export type Initiative_Post_Reactions_Aggregate = {
  aggregate?: Maybe<Initiative_Post_Reactions_Aggregate_Fields>;
  nodes: Array<Initiative_Post_Reactions>;
};

/** aggregate fields of "initiative_post_reactions" */
export type Initiative_Post_Reactions_Aggregate_Fields = {
  avg?: Maybe<Initiative_Post_Reactions_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Post_Reactions_Max_Fields>;
  min?: Maybe<Initiative_Post_Reactions_Min_Fields>;
  stddev?: Maybe<Initiative_Post_Reactions_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Post_Reactions_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Post_Reactions_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Post_Reactions_Sum_Fields>;
  var_pop?: Maybe<Initiative_Post_Reactions_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Post_Reactions_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Post_Reactions_Variance_Fields>;
};


/** aggregate fields of "initiative_post_reactions" */
export type Initiative_Post_Reactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Post_Reactions_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Post_Reactions_Max_Order_By>;
  min?: InputMaybe<Initiative_Post_Reactions_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Post_Reactions_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Post_Reactions_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Post_Reactions_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Post_Reactions_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Post_Reactions_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Post_Reactions_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Post_Reactions_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Post_Reactions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Post_Reactions_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Post_Reactions_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_post_reactions". All fields are combined with a logical 'AND'. */
export type Initiative_Post_Reactions_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Post_Reactions_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Post_Reactions_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  post?: InputMaybe<Initiative_Posts_Bool_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  type?: InputMaybe<Reactions_Enum_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_post_reactions" */
export enum Initiative_Post_Reactions_Constraint {
  /** unique or primary key constraint */
  InitiativePostReactionsPkey = 'initiative_post_reactions_pkey',
  /** unique or primary key constraint */
  InitiativePostReactionsUserIdPostIdKey = 'initiative_post_reactions_user_id_post_id_key'
}

/** input type for incrementing numeric columns in table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  post_id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post?: InputMaybe<Initiative_Posts_Obj_Rel_Insert_Input>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<Reactions_Enum>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Post_Reactions_Max_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Post_Reactions_Min_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Post_Reactions>;
};

/** on_conflict condition type for table "initiative_post_reactions" */
export type Initiative_Post_Reactions_On_Conflict = {
  constraint: Initiative_Post_Reactions_Constraint;
  update_columns?: Array<Initiative_Post_Reactions_Update_Column>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_post_reactions". */
export type Initiative_Post_Reactions_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  post?: InputMaybe<Initiative_Posts_Order_By>;
  post_id?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_post_reactions */
export type Initiative_Post_Reactions_Pk_Columns_Input = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};

/** select columns of table "initiative_post_reactions" */
export enum Initiative_Post_Reactions_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Set_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  type?: InputMaybe<Reactions_Enum>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Post_Reactions_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Post_Reactions_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Post_Reactions_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Post_Reactions_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
  post_id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_post_reactions" */
export enum Initiative_Post_Reactions_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Post_Reactions_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Post_Reactions_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Post_Reactions_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_post_reactions" */
export type Initiative_Post_Reactions_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_posts" */
export type Initiative_Posts = {
  /** An array relationship */
  comments: Array<Initiative_Comments>;
  /** An aggregate relationship */
  comments_aggregate: Initiative_Comments_Aggregate;
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  edits: Array<Initiative_Edits>;
  /** An aggregate relationship */
  edits_aggregate: Initiative_Edits_Aggregate;
  /** An array relationship */
  expenses: Array<Initiative_Expenses>;
  /** An aggregate relationship */
  expenses_aggregate: Initiative_Expenses_Aggregate;
  /** An array relationship */
  files: Array<Files>;
  /** An aggregate relationship */
  files_aggregate: Files_Aggregate;
  id: Scalars['bigint'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  message?: Maybe<Scalars['String']>;
  modified_at: Scalars['timestamptz'];
  /** An array relationship */
  projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  projects_aggregate: Initiative_Projects_Aggregate;
  /** An array relationship */
  reactions: Array<Initiative_Post_Reactions>;
  /** An aggregate relationship */
  reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  type: Post_Types_Enum;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsCommentsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsEditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsEdits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsExpenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsFilesArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsFiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


/** columns and relationships of "initiative_posts" */
export type Initiative_PostsReactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};

/** aggregated selection of "initiative_posts" */
export type Initiative_Posts_Aggregate = {
  aggregate?: Maybe<Initiative_Posts_Aggregate_Fields>;
  nodes: Array<Initiative_Posts>;
};

/** aggregate fields of "initiative_posts" */
export type Initiative_Posts_Aggregate_Fields = {
  avg?: Maybe<Initiative_Posts_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Posts_Max_Fields>;
  min?: Maybe<Initiative_Posts_Min_Fields>;
  stddev?: Maybe<Initiative_Posts_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Posts_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Posts_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Posts_Sum_Fields>;
  var_pop?: Maybe<Initiative_Posts_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Posts_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Posts_Variance_Fields>;
};


/** aggregate fields of "initiative_posts" */
export type Initiative_Posts_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_posts" */
export type Initiative_Posts_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Posts_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Posts_Max_Order_By>;
  min?: InputMaybe<Initiative_Posts_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Posts_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Posts_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Posts_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Posts_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Posts_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Posts_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Posts_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_posts" */
export type Initiative_Posts_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Posts_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Posts_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Posts_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_posts" */
export type Initiative_Posts_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_posts". All fields are combined with a logical 'AND'. */
export type Initiative_Posts_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Posts_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Posts_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Posts_Bool_Exp>>;
  comments?: InputMaybe<Initiative_Comments_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  edits?: InputMaybe<Initiative_Edits_Bool_Exp>;
  expenses?: InputMaybe<Initiative_Expenses_Bool_Exp>;
  files?: InputMaybe<Files_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  message?: InputMaybe<String_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  reactions?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
  type?: InputMaybe<Post_Types_Enum_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_posts" */
export enum Initiative_Posts_Constraint {
  /** unique or primary key constraint */
  InitiativeMessagePkey = 'initiative_message_pkey',
  /** unique or primary key constraint */
  InitiativePostsInitiativeIdIdKey = 'initiative_posts_initiative_id_id_key'
}

/** input type for incrementing numeric columns in table "initiative_posts" */
export type Initiative_Posts_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_posts" */
export type Initiative_Posts_Insert_Input = {
  comments?: InputMaybe<Initiative_Comments_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  edits?: InputMaybe<Initiative_Edits_Arr_Rel_Insert_Input>;
  expenses?: InputMaybe<Initiative_Expenses_Arr_Rel_Insert_Input>;
  files?: InputMaybe<Files_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  reactions?: InputMaybe<Initiative_Post_Reactions_Arr_Rel_Insert_Input>;
  type?: InputMaybe<Post_Types_Enum>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Posts_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_posts" */
export type Initiative_Posts_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Posts_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_posts" */
export type Initiative_Posts_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_posts" */
export type Initiative_Posts_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Posts>;
};

/** input type for inserting object relation for remote table "initiative_posts" */
export type Initiative_Posts_Obj_Rel_Insert_Input = {
  data: Initiative_Posts_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Posts_On_Conflict>;
};

/** on_conflict condition type for table "initiative_posts" */
export type Initiative_Posts_On_Conflict = {
  constraint: Initiative_Posts_Constraint;
  update_columns?: Array<Initiative_Posts_Update_Column>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_posts". */
export type Initiative_Posts_Order_By = {
  comments_aggregate?: InputMaybe<Initiative_Comments_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  edits_aggregate?: InputMaybe<Initiative_Edits_Aggregate_Order_By>;
  expenses_aggregate?: InputMaybe<Initiative_Expenses_Aggregate_Order_By>;
  files_aggregate?: InputMaybe<Files_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  message?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  reactions_aggregate?: InputMaybe<Initiative_Post_Reactions_Aggregate_Order_By>;
  type?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_posts */
export type Initiative_Posts_Pk_Columns_Input = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_posts" */
export enum Initiative_Posts_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Message = 'message',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_posts" */
export type Initiative_Posts_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  message?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  type?: InputMaybe<Post_Types_Enum>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Posts_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_posts" */
export type Initiative_Posts_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Posts_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_posts" */
export type Initiative_Posts_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Posts_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_posts" */
export type Initiative_Posts_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Posts_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_posts" */
export type Initiative_Posts_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_posts" */
export enum Initiative_Posts_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Message = 'message',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Type = 'type',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Posts_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_posts" */
export type Initiative_Posts_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Posts_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_posts" */
export type Initiative_Posts_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Posts_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_posts" */
export type Initiative_Posts_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_projects" */
export type Initiative_Projects = {
  budget?: Maybe<Scalars['numeric']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  org?: Maybe<Orgs>;
  org_id?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  org_project?: Maybe<Org_Projects>;
  /** An object relationship */
  post?: Maybe<Initiative_Posts>;
  post_id: Scalars['bigint'];
  reference_project_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  /** An object relationship */
  tender: Tenders;
  tender_id: Scalars['bigint'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
  volunteers?: Maybe<Scalars['numeric']>;
};

/** aggregated selection of "initiative_projects" */
export type Initiative_Projects_Aggregate = {
  aggregate?: Maybe<Initiative_Projects_Aggregate_Fields>;
  nodes: Array<Initiative_Projects>;
};

/** aggregate fields of "initiative_projects" */
export type Initiative_Projects_Aggregate_Fields = {
  avg?: Maybe<Initiative_Projects_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Projects_Max_Fields>;
  min?: Maybe<Initiative_Projects_Min_Fields>;
  stddev?: Maybe<Initiative_Projects_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Projects_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Projects_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Projects_Sum_Fields>;
  var_pop?: Maybe<Initiative_Projects_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Projects_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Projects_Variance_Fields>;
};


/** aggregate fields of "initiative_projects" */
export type Initiative_Projects_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_projects" */
export type Initiative_Projects_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Projects_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Projects_Max_Order_By>;
  min?: InputMaybe<Initiative_Projects_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Projects_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Projects_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Projects_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Projects_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Projects_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Projects_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Projects_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_projects" */
export type Initiative_Projects_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Projects_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Projects_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Projects_Avg_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_projects" */
export type Initiative_Projects_Avg_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_projects". All fields are combined with a logical 'AND'. */
export type Initiative_Projects_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Projects_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Projects_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Projects_Bool_Exp>>;
  budget?: InputMaybe<Numeric_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  org?: InputMaybe<Orgs_Bool_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  org_project?: InputMaybe<Org_Projects_Bool_Exp>;
  post?: InputMaybe<Initiative_Posts_Bool_Exp>;
  post_id?: InputMaybe<Bigint_Comparison_Exp>;
  reference_project_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  tender?: InputMaybe<Tenders_Bool_Exp>;
  tender_id?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  volunteers?: InputMaybe<Numeric_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_projects" */
export enum Initiative_Projects_Constraint {
  /** unique or primary key constraint */
  PkInitiativeProjectsId = 'pk_initiative_projects_id',
  /** unique or primary key constraint */
  UnqInitiativeProjectsPostId = 'unq_initiative_projects_post_id'
}

/** input type for incrementing numeric columns in table "initiative_projects" */
export type Initiative_Projects_Inc_Input = {
  budget?: InputMaybe<Scalars['numeric']>;
  id?: InputMaybe<Scalars['Int']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  reference_project_id?: InputMaybe<Scalars['Int']>;
  tender_id?: InputMaybe<Scalars['bigint']>;
  volunteers?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "initiative_projects" */
export type Initiative_Projects_Insert_Input = {
  budget?: InputMaybe<Scalars['numeric']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  org?: InputMaybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: InputMaybe<Scalars['uuid']>;
  org_project?: InputMaybe<Org_Projects_Obj_Rel_Insert_Input>;
  post?: InputMaybe<Initiative_Posts_Obj_Rel_Insert_Input>;
  post_id?: InputMaybe<Scalars['bigint']>;
  reference_project_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  tender?: InputMaybe<Tenders_Obj_Rel_Insert_Input>;
  tender_id?: InputMaybe<Scalars['bigint']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  volunteers?: InputMaybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Initiative_Projects_Max_Fields = {
  budget?: Maybe<Scalars['numeric']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  org_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  reference_project_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  tender_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
  volunteers?: Maybe<Scalars['numeric']>;
};

/** order by max() on columns of table "initiative_projects" */
export type Initiative_Projects_Max_Order_By = {
  budget?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Projects_Min_Fields = {
  budget?: Maybe<Scalars['numeric']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  org_id?: Maybe<Scalars['uuid']>;
  post_id?: Maybe<Scalars['bigint']>;
  reference_project_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Scalars['String']>;
  tender_id?: Maybe<Scalars['bigint']>;
  user_id?: Maybe<Scalars['uuid']>;
  volunteers?: Maybe<Scalars['numeric']>;
};

/** order by min() on columns of table "initiative_projects" */
export type Initiative_Projects_Min_Order_By = {
  budget?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_projects" */
export type Initiative_Projects_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Projects>;
};

/** on_conflict condition type for table "initiative_projects" */
export type Initiative_Projects_On_Conflict = {
  constraint: Initiative_Projects_Constraint;
  update_columns?: Array<Initiative_Projects_Update_Column>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_projects". */
export type Initiative_Projects_Order_By = {
  budget?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org?: InputMaybe<Orgs_Order_By>;
  org_id?: InputMaybe<Order_By>;
  org_project?: InputMaybe<Org_Projects_Order_By>;
  post?: InputMaybe<Initiative_Posts_Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  tender?: InputMaybe<Tenders_Order_By>;
  tender_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_projects */
export type Initiative_Projects_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_projects" */
export enum Initiative_Projects_Select_Column {
  /** column name */
  Budget = 'budget',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  ReferenceProjectId = 'reference_project_id',
  /** column name */
  Status = 'status',
  /** column name */
  TenderId = 'tender_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Volunteers = 'volunteers'
}

/** input type for updating data in table "initiative_projects" */
export type Initiative_Projects_Set_Input = {
  budget?: InputMaybe<Scalars['numeric']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  post_id?: InputMaybe<Scalars['bigint']>;
  reference_project_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  tender_id?: InputMaybe<Scalars['bigint']>;
  user_id?: InputMaybe<Scalars['uuid']>;
  volunteers?: InputMaybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Initiative_Projects_Stddev_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_projects" */
export type Initiative_Projects_Stddev_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Projects_Stddev_Pop_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_projects" */
export type Initiative_Projects_Stddev_Pop_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Projects_Stddev_Samp_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_projects" */
export type Initiative_Projects_Stddev_Samp_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Projects_Sum_Fields = {
  budget?: Maybe<Scalars['numeric']>;
  id?: Maybe<Scalars['Int']>;
  post_id?: Maybe<Scalars['bigint']>;
  reference_project_id?: Maybe<Scalars['Int']>;
  tender_id?: Maybe<Scalars['bigint']>;
  volunteers?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "initiative_projects" */
export type Initiative_Projects_Sum_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_projects" */
export enum Initiative_Projects_Update_Column {
  /** column name */
  Budget = 'budget',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  PostId = 'post_id',
  /** column name */
  ReferenceProjectId = 'reference_project_id',
  /** column name */
  Status = 'status',
  /** column name */
  TenderId = 'tender_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  Volunteers = 'volunteers'
}

/** aggregate var_pop on columns */
export type Initiative_Projects_Var_Pop_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_projects" */
export type Initiative_Projects_Var_Pop_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Projects_Var_Samp_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_projects" */
export type Initiative_Projects_Var_Samp_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Projects_Variance_Fields = {
  budget?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
  post_id?: Maybe<Scalars['Float']>;
  reference_project_id?: Maybe<Scalars['Float']>;
  tender_id?: Maybe<Scalars['Float']>;
  volunteers?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_projects" */
export type Initiative_Projects_Variance_Order_By = {
  budget?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  post_id?: InputMaybe<Order_By>;
  reference_project_id?: InputMaybe<Order_By>;
  tender_id?: InputMaybe<Order_By>;
  volunteers?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_tags" */
export type Initiative_Tags = {
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  tag?: Maybe<Scalars['String']>;
  /** An object relationship */
  tags?: Maybe<Tags>;
};

/** aggregated selection of "initiative_tags" */
export type Initiative_Tags_Aggregate = {
  aggregate?: Maybe<Initiative_Tags_Aggregate_Fields>;
  nodes: Array<Initiative_Tags>;
};

/** aggregate fields of "initiative_tags" */
export type Initiative_Tags_Aggregate_Fields = {
  avg?: Maybe<Initiative_Tags_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Tags_Max_Fields>;
  min?: Maybe<Initiative_Tags_Min_Fields>;
  stddev?: Maybe<Initiative_Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Tags_Sum_Fields>;
  var_pop?: Maybe<Initiative_Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Tags_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Tags_Variance_Fields>;
};


/** aggregate fields of "initiative_tags" */
export type Initiative_Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_tags" */
export type Initiative_Tags_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Tags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Tags_Max_Order_By>;
  min?: InputMaybe<Initiative_Tags_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Tags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Tags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Tags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Tags_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Tags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Tags_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Tags_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_tags" */
export type Initiative_Tags_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Tags_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Tags_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Tags_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_tags" */
export type Initiative_Tags_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_tags". All fields are combined with a logical 'AND'. */
export type Initiative_Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Tags_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Tags_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  tag?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Tags_Bool_Exp>;
};

/** unique or primary key constraints on table "initiative_tags" */
export enum Initiative_Tags_Constraint {
  /** unique or primary key constraint */
  InitiativeTagPkey = 'initiative_tag_pkey'
}

/** input type for incrementing numeric columns in table "initiative_tags" */
export type Initiative_Tags_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_tags" */
export type Initiative_Tags_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  tag?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Tags_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Initiative_Tags_Max_Fields = {
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "initiative_tags" */
export type Initiative_Tags_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Tags_Min_Fields = {
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "initiative_tags" */
export type Initiative_Tags_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_tags" */
export type Initiative_Tags_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Tags>;
};

/** on_conflict condition type for table "initiative_tags" */
export type Initiative_Tags_On_Conflict = {
  constraint: Initiative_Tags_Constraint;
  update_columns?: Array<Initiative_Tags_Update_Column>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_tags". */
export type Initiative_Tags_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
  tags?: InputMaybe<Tags_Order_By>;
};

/** primary key columns input for table: initiative_tags */
export type Initiative_Tags_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_tags" */
export enum Initiative_Tags_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Tag = 'tag'
}

/** input type for updating data in table "initiative_tags" */
export type Initiative_Tags_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  tag?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Initiative_Tags_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_tags" */
export type Initiative_Tags_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Tags_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_tags" */
export type Initiative_Tags_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Tags_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_tags" */
export type Initiative_Tags_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Tags_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_tags" */
export type Initiative_Tags_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_tags" */
export enum Initiative_Tags_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Tag = 'tag'
}

/** aggregate var_pop on columns */
export type Initiative_Tags_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_tags" */
export type Initiative_Tags_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Tags_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_tags" */
export type Initiative_Tags_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Tags_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_tags" */
export type Initiative_Tags_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_tasks" */
export type Initiative_Tasks = {
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  poll?: Maybe<Initiative_Polls>;
  poll_id?: Maybe<Scalars['Int']>;
  status?: Maybe<Task_Statuses_Enum>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  volunteers_aggregate: Initiative_Volunteers_Aggregate;
  volunteers_needed?: Maybe<Scalars['numeric']>;
};


/** columns and relationships of "initiative_tasks" */
export type Initiative_TasksVolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


/** columns and relationships of "initiative_tasks" */
export type Initiative_TasksVolunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** aggregated selection of "initiative_tasks" */
export type Initiative_Tasks_Aggregate = {
  aggregate?: Maybe<Initiative_Tasks_Aggregate_Fields>;
  nodes: Array<Initiative_Tasks>;
};

/** aggregate fields of "initiative_tasks" */
export type Initiative_Tasks_Aggregate_Fields = {
  avg?: Maybe<Initiative_Tasks_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Tasks_Max_Fields>;
  min?: Maybe<Initiative_Tasks_Min_Fields>;
  stddev?: Maybe<Initiative_Tasks_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Tasks_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Tasks_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Tasks_Sum_Fields>;
  var_pop?: Maybe<Initiative_Tasks_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Tasks_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Tasks_Variance_Fields>;
};


/** aggregate fields of "initiative_tasks" */
export type Initiative_Tasks_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_tasks" */
export type Initiative_Tasks_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Tasks_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Tasks_Max_Order_By>;
  min?: InputMaybe<Initiative_Tasks_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Tasks_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Tasks_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Tasks_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Tasks_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Tasks_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Tasks_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Tasks_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_tasks" */
export type Initiative_Tasks_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Tasks_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Tasks_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Tasks_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_tasks". All fields are combined with a logical 'AND'. */
export type Initiative_Tasks_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Tasks_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Tasks_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  poll?: InputMaybe<Initiative_Polls_Bool_Exp>;
  poll_id?: InputMaybe<Int_Comparison_Exp>;
  status?: InputMaybe<Task_Statuses_Enum_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  volunteers?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
  volunteers_needed?: InputMaybe<Numeric_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_tasks" */
export enum Initiative_Tasks_Constraint {
  /** unique or primary key constraint */
  InitiativeTasksPkey = 'initiative_tasks_pkey'
}

/** input type for incrementing numeric columns in table "initiative_tasks" */
export type Initiative_Tasks_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  volunteers_needed?: InputMaybe<Scalars['numeric']>;
};

/** input type for inserting data into table "initiative_tasks" */
export type Initiative_Tasks_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll?: InputMaybe<Initiative_Polls_Obj_Rel_Insert_Input>;
  poll_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Task_Statuses_Enum>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  volunteers?: InputMaybe<Initiative_Volunteers_Arr_Rel_Insert_Input>;
  volunteers_needed?: InputMaybe<Scalars['numeric']>;
};

/** aggregate max on columns */
export type Initiative_Tasks_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
  volunteers_needed?: Maybe<Scalars['numeric']>;
};

/** order by max() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Tasks_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  poll_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
  volunteers_needed?: Maybe<Scalars['numeric']>;
};

/** order by min() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_tasks" */
export type Initiative_Tasks_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Tasks>;
};

/** input type for inserting object relation for remote table "initiative_tasks" */
export type Initiative_Tasks_Obj_Rel_Insert_Input = {
  data: Initiative_Tasks_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Tasks_On_Conflict>;
};

/** on_conflict condition type for table "initiative_tasks" */
export type Initiative_Tasks_On_Conflict = {
  constraint: Initiative_Tasks_Constraint;
  update_columns?: Array<Initiative_Tasks_Update_Column>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_tasks". */
export type Initiative_Tasks_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  poll?: InputMaybe<Initiative_Polls_Order_By>;
  poll_id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  volunteers_aggregate?: InputMaybe<Initiative_Volunteers_Aggregate_Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_tasks */
export type Initiative_Tasks_Pk_Columns_Input = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_tasks" */
export enum Initiative_Tasks_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VolunteersNeeded = 'volunteers_needed'
}

/** input type for updating data in table "initiative_tasks" */
export type Initiative_Tasks_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  poll_id?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Task_Statuses_Enum>;
  user_id?: InputMaybe<Scalars['uuid']>;
  volunteers_needed?: InputMaybe<Scalars['numeric']>;
};

/** aggregate stddev on columns */
export type Initiative_Tasks_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Tasks_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Tasks_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Tasks_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
  poll_id?: Maybe<Scalars['Int']>;
  volunteers_needed?: Maybe<Scalars['numeric']>;
};

/** order by sum() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_tasks" */
export enum Initiative_Tasks_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  PollId = 'poll_id',
  /** column name */
  Status = 'status',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VolunteersNeeded = 'volunteers_needed'
}

/** aggregate var_pop on columns */
export type Initiative_Tasks_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Tasks_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Tasks_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  poll_id?: Maybe<Scalars['Float']>;
  volunteers_needed?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_tasks" */
export type Initiative_Tasks_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  poll_id?: InputMaybe<Order_By>;
  volunteers_needed?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_visits" */
export type Initiative_Visits = {
  id: Scalars['bigint'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['uuid'];
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregated selection of "initiative_visits" */
export type Initiative_Visits_Aggregate = {
  aggregate?: Maybe<Initiative_Visits_Aggregate_Fields>;
  nodes: Array<Initiative_Visits>;
};

/** aggregate fields of "initiative_visits" */
export type Initiative_Visits_Aggregate_Fields = {
  avg?: Maybe<Initiative_Visits_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Visits_Max_Fields>;
  min?: Maybe<Initiative_Visits_Min_Fields>;
  stddev?: Maybe<Initiative_Visits_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Visits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Visits_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Visits_Sum_Fields>;
  var_pop?: Maybe<Initiative_Visits_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Visits_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Visits_Variance_Fields>;
};


/** aggregate fields of "initiative_visits" */
export type Initiative_Visits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_visits" */
export type Initiative_Visits_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Visits_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Visits_Max_Order_By>;
  min?: InputMaybe<Initiative_Visits_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Visits_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Visits_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Visits_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Visits_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Visits_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Visits_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Visits_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_visits" */
export type Initiative_Visits_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Visits_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Visits_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Visits_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_visits" */
export type Initiative_Visits_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_visits". All fields are combined with a logical 'AND'. */
export type Initiative_Visits_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Visits_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Visits_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Visits_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  visited_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_visits" */
export enum Initiative_Visits_Constraint {
  /** unique or primary key constraint */
  InitiativeVisitsPkey = 'initiative_visits_pkey',
  /** unique or primary key constraint */
  UserInitiativeConstraint = 'user_initiative_constraint'
}

/** input type for incrementing numeric columns in table "initiative_visits" */
export type Initiative_Visits_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "initiative_visits" */
export type Initiative_Visits_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
  visited_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Initiative_Visits_Max_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "initiative_visits" */
export type Initiative_Visits_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  visited_at?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Visits_Min_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "initiative_visits" */
export type Initiative_Visits_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  visited_at?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_visits" */
export type Initiative_Visits_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Visits>;
};

/** on_conflict condition type for table "initiative_visits" */
export type Initiative_Visits_On_Conflict = {
  constraint: Initiative_Visits_Constraint;
  update_columns?: Array<Initiative_Visits_Update_Column>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_visits". */
export type Initiative_Visits_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
  visited_at?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_visits */
export type Initiative_Visits_Pk_Columns_Input = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_visits" */
export enum Initiative_Visits_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VisitedAt = 'visited_at'
}

/** input type for updating data in table "initiative_visits" */
export type Initiative_Visits_Set_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  user_id?: InputMaybe<Scalars['uuid']>;
  visited_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Initiative_Visits_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_visits" */
export type Initiative_Visits_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Visits_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_visits" */
export type Initiative_Visits_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Visits_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_visits" */
export type Initiative_Visits_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Visits_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "initiative_visits" */
export type Initiative_Visits_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_visits" */
export enum Initiative_Visits_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VisitedAt = 'visited_at'
}

/** aggregate var_pop on columns */
export type Initiative_Visits_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_visits" */
export type Initiative_Visits_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Visits_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_visits" */
export type Initiative_Visits_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Visits_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_visits" */
export type Initiative_Visits_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiative_volunteers" */
export type Initiative_Volunteers = {
  id: Scalars['bigint'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  role?: Maybe<Scalars['String']>;
  /** An object relationship */
  task?: Maybe<Initiative_Tasks>;
  task_id: Scalars['Int'];
  /** An object relationship */
  user: Users;
  user_id: Scalars['uuid'];
};

/** aggregated selection of "initiative_volunteers" */
export type Initiative_Volunteers_Aggregate = {
  aggregate?: Maybe<Initiative_Volunteers_Aggregate_Fields>;
  nodes: Array<Initiative_Volunteers>;
};

/** aggregate fields of "initiative_volunteers" */
export type Initiative_Volunteers_Aggregate_Fields = {
  avg?: Maybe<Initiative_Volunteers_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiative_Volunteers_Max_Fields>;
  min?: Maybe<Initiative_Volunteers_Min_Fields>;
  stddev?: Maybe<Initiative_Volunteers_Stddev_Fields>;
  stddev_pop?: Maybe<Initiative_Volunteers_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiative_Volunteers_Stddev_Samp_Fields>;
  sum?: Maybe<Initiative_Volunteers_Sum_Fields>;
  var_pop?: Maybe<Initiative_Volunteers_Var_Pop_Fields>;
  var_samp?: Maybe<Initiative_Volunteers_Var_Samp_Fields>;
  variance?: Maybe<Initiative_Volunteers_Variance_Fields>;
};


/** aggregate fields of "initiative_volunteers" */
export type Initiative_Volunteers_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "initiative_volunteers" */
export type Initiative_Volunteers_Aggregate_Order_By = {
  avg?: InputMaybe<Initiative_Volunteers_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Initiative_Volunteers_Max_Order_By>;
  min?: InputMaybe<Initiative_Volunteers_Min_Order_By>;
  stddev?: InputMaybe<Initiative_Volunteers_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Initiative_Volunteers_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Initiative_Volunteers_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Initiative_Volunteers_Sum_Order_By>;
  var_pop?: InputMaybe<Initiative_Volunteers_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Initiative_Volunteers_Var_Samp_Order_By>;
  variance?: InputMaybe<Initiative_Volunteers_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "initiative_volunteers" */
export type Initiative_Volunteers_Arr_Rel_Insert_Input = {
  data: Array<Initiative_Volunteers_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiative_Volunteers_On_Conflict>;
};

/** aggregate avg on columns */
export type Initiative_Volunteers_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "initiative_volunteers". All fields are combined with a logical 'AND'. */
export type Initiative_Volunteers_Bool_Exp = {
  _and?: InputMaybe<Array<Initiative_Volunteers_Bool_Exp>>;
  _not?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
  _or?: InputMaybe<Array<Initiative_Volunteers_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  task?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  task_id?: InputMaybe<Int_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "initiative_volunteers" */
export enum Initiative_Volunteers_Constraint {
  /** unique or primary key constraint */
  InitiativeVolunteersPkey = 'initiative_volunteers_pkey'
}

/** input type for incrementing numeric columns in table "initiative_volunteers" */
export type Initiative_Volunteers_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  task_id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "initiative_volunteers" */
export type Initiative_Volunteers_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
  task?: InputMaybe<Initiative_Tasks_Obj_Rel_Insert_Input>;
  task_id?: InputMaybe<Scalars['Int']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Initiative_Volunteers_Max_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Initiative_Volunteers_Min_Fields = {
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  task_id?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "initiative_volunteers" */
export type Initiative_Volunteers_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiative_Volunteers>;
};

/** on_conflict condition type for table "initiative_volunteers" */
export type Initiative_Volunteers_On_Conflict = {
  constraint: Initiative_Volunteers_Constraint;
  update_columns?: Array<Initiative_Volunteers_Update_Column>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** Ordering options when selecting data from "initiative_volunteers". */
export type Initiative_Volunteers_Order_By = {
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  task?: InputMaybe<Initiative_Tasks_Order_By>;
  task_id?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: initiative_volunteers */
export type Initiative_Volunteers_Pk_Columns_Input = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};

/** select columns of table "initiative_volunteers" */
export enum Initiative_Volunteers_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Role = 'role',
  /** column name */
  TaskId = 'task_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "initiative_volunteers" */
export type Initiative_Volunteers_Set_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
  task_id?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Initiative_Volunteers_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Initiative_Volunteers_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Initiative_Volunteers_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Initiative_Volunteers_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
  task_id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** update columns of table "initiative_volunteers" */
export enum Initiative_Volunteers_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  Role = 'role',
  /** column name */
  TaskId = 'task_id',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Initiative_Volunteers_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Initiative_Volunteers_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Initiative_Volunteers_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  task_id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "initiative_volunteers" */
export type Initiative_Volunteers_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  task_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "initiatives" */
export type Initiatives = {
  address?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  /** An array relationship */
  donations: Array<Initiative_Donations>;
  /** An aggregate relationship */
  donations_aggregate: Initiative_Donations_Aggregate;
  /** An array relationship */
  edits: Array<Initiative_Edits>;
  /** An aggregate relationship */
  edits_aggregate: Initiative_Edits_Aggregate;
  /** An array relationship */
  expenses: Array<Initiative_Expenses>;
  /** An aggregate relationship */
  expenses_aggregate: Initiative_Expenses_Aggregate;
  /** An array relationship */
  files: Array<Files>;
  /** An aggregate relationship */
  files_aggregate: Files_Aggregate;
  geom?: Maybe<Scalars['geometry']>;
  id: Scalars['uuid'];
  image?: Maybe<Scalars['String']>;
  /** An array relationship */
  infos: Array<Initiative_Info>;
  /** An aggregate relationship */
  infos_aggregate: Initiative_Info_Aggregate;
  /** An array relationship */
  members: Array<Initiative_Members>;
  /** An aggregate relationship */
  members_aggregate: Initiative_Members_Aggregate;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  polls: Array<Initiative_Polls>;
  /** An aggregate relationship */
  polls_aggregate: Initiative_Polls_Aggregate;
  /** An array relationship */
  posts: Array<Initiative_Posts>;
  /** An aggregate relationship */
  posts_aggregate: Initiative_Posts_Aggregate;
  /** An array relationship */
  projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  projects_aggregate: Initiative_Projects_Aggregate;
  /** An array relationship */
  tags: Array<Initiative_Tags>;
  /** An aggregate relationship */
  tags_aggregate: Initiative_Tags_Aggregate;
  /** An array relationship */
  tasks: Array<Initiative_Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Initiative_Tasks_Aggregate;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
  /** An array relationship */
  visits: Array<Initiative_Visits>;
  /** An aggregate relationship */
  visits_aggregate: Initiative_Visits_Aggregate;
  /** An array relationship */
  volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  volunteers_aggregate: Initiative_Volunteers_Aggregate;
};


/** columns and relationships of "initiatives" */
export type InitiativesDonationsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesDonations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesEditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesEdits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesExpenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesFilesArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesFiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesInfosArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesInfos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesMembersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesMembers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesPollsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesPolls_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesPostsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesPosts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTagsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesVisitsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesVisits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesVolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


/** columns and relationships of "initiatives" */
export type InitiativesVolunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** aggregated selection of "initiatives" */
export type Initiatives_Aggregate = {
  aggregate?: Maybe<Initiatives_Aggregate_Fields>;
  nodes: Array<Initiatives>;
};

/** aggregate fields of "initiatives" */
export type Initiatives_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Initiatives_Max_Fields>;
  min?: Maybe<Initiatives_Min_Fields>;
};


/** aggregate fields of "initiatives" */
export type Initiatives_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiatives_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "initiatives". All fields are combined with a logical 'AND'. */
export type Initiatives_Bool_Exp = {
  _and?: InputMaybe<Array<Initiatives_Bool_Exp>>;
  _not?: InputMaybe<Initiatives_Bool_Exp>;
  _or?: InputMaybe<Array<Initiatives_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  donations?: InputMaybe<Initiative_Donations_Bool_Exp>;
  edits?: InputMaybe<Initiative_Edits_Bool_Exp>;
  expenses?: InputMaybe<Initiative_Expenses_Bool_Exp>;
  files?: InputMaybe<Files_Bool_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  infos?: InputMaybe<Initiative_Info_Bool_Exp>;
  members?: InputMaybe<Initiative_Members_Bool_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  polls?: InputMaybe<Initiative_Polls_Bool_Exp>;
  posts?: InputMaybe<Initiative_Posts_Bool_Exp>;
  projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  tags?: InputMaybe<Initiative_Tags_Bool_Exp>;
  tasks?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  tenders?: InputMaybe<Tenders_Bool_Exp>;
  visits?: InputMaybe<Initiative_Visits_Bool_Exp>;
  volunteers?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};

/** unique or primary key constraints on table "initiatives" */
export enum Initiatives_Constraint {
  /** unique or primary key constraint */
  InitiativePkey = 'initiative__pkey'
}

/** input type for inserting data into table "initiatives" */
export type Initiatives_Insert_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  donations?: InputMaybe<Initiative_Donations_Arr_Rel_Insert_Input>;
  edits?: InputMaybe<Initiative_Edits_Arr_Rel_Insert_Input>;
  expenses?: InputMaybe<Initiative_Expenses_Arr_Rel_Insert_Input>;
  files?: InputMaybe<Files_Arr_Rel_Insert_Input>;
  geom?: InputMaybe<Scalars['geometry']>;
  id?: InputMaybe<Scalars['uuid']>;
  image?: InputMaybe<Scalars['String']>;
  infos?: InputMaybe<Initiative_Info_Arr_Rel_Insert_Input>;
  members?: InputMaybe<Initiative_Members_Arr_Rel_Insert_Input>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  polls?: InputMaybe<Initiative_Polls_Arr_Rel_Insert_Input>;
  posts?: InputMaybe<Initiative_Posts_Arr_Rel_Insert_Input>;
  projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  tags?: InputMaybe<Initiative_Tags_Arr_Rel_Insert_Input>;
  tasks?: InputMaybe<Initiative_Tasks_Arr_Rel_Insert_Input>;
  tenders?: InputMaybe<Tenders_Arr_Rel_Insert_Input>;
  visits?: InputMaybe<Initiative_Visits_Arr_Rel_Insert_Input>;
  volunteers?: InputMaybe<Initiative_Volunteers_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Initiatives_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Initiatives_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "initiatives" */
export type Initiatives_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Initiatives>;
};

export type Initiatives_Nearby_Args = {
  limit?: InputMaybe<Scalars['Int']>;
  location?: InputMaybe<Scalars['geometry']>;
  max_date?: InputMaybe<Scalars['timestamptz']>;
  max_distance?: InputMaybe<Scalars['float8']>;
  min_date?: InputMaybe<Scalars['timestamptz']>;
  min_distance?: InputMaybe<Scalars['float8']>;
  own?: InputMaybe<Scalars['Boolean']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** input type for inserting object relation for remote table "initiatives" */
export type Initiatives_Obj_Rel_Insert_Input = {
  data: Initiatives_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Initiatives_On_Conflict>;
};

/** on_conflict condition type for table "initiatives" */
export type Initiatives_On_Conflict = {
  constraint: Initiatives_Constraint;
  update_columns?: Array<Initiatives_Update_Column>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};

/** Ordering options when selecting data from "initiatives". */
export type Initiatives_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  donations_aggregate?: InputMaybe<Initiative_Donations_Aggregate_Order_By>;
  edits_aggregate?: InputMaybe<Initiative_Edits_Aggregate_Order_By>;
  expenses_aggregate?: InputMaybe<Initiative_Expenses_Aggregate_Order_By>;
  files_aggregate?: InputMaybe<Files_Aggregate_Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  infos_aggregate?: InputMaybe<Initiative_Info_Aggregate_Order_By>;
  members_aggregate?: InputMaybe<Initiative_Members_Aggregate_Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  polls_aggregate?: InputMaybe<Initiative_Polls_Aggregate_Order_By>;
  posts_aggregate?: InputMaybe<Initiative_Posts_Aggregate_Order_By>;
  projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  tags_aggregate?: InputMaybe<Initiative_Tags_Aggregate_Order_By>;
  tasks_aggregate?: InputMaybe<Initiative_Tasks_Aggregate_Order_By>;
  tenders_aggregate?: InputMaybe<Tenders_Aggregate_Order_By>;
  visits_aggregate?: InputMaybe<Initiative_Visits_Aggregate_Order_By>;
  volunteers_aggregate?: InputMaybe<Initiative_Volunteers_Aggregate_Order_By>;
};

/** primary key columns input for table: initiatives */
export type Initiatives_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "initiatives" */
export enum Initiatives_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "initiatives" */
export type Initiatives_Set_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  geom?: InputMaybe<Scalars['geometry']>;
  id?: InputMaybe<Scalars['uuid']>;
  image?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "initiatives" */
export enum Initiatives_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** columns and relationships of "initiatives_view" */
export type Initiatives_View = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregated selection of "initiatives_view" */
export type Initiatives_View_Aggregate = {
  aggregate?: Maybe<Initiatives_View_Aggregate_Fields>;
  nodes: Array<Initiatives_View>;
};

/** aggregate fields of "initiatives_view" */
export type Initiatives_View_Aggregate_Fields = {
  avg?: Maybe<Initiatives_View_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Initiatives_View_Max_Fields>;
  min?: Maybe<Initiatives_View_Min_Fields>;
  stddev?: Maybe<Initiatives_View_Stddev_Fields>;
  stddev_pop?: Maybe<Initiatives_View_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Initiatives_View_Stddev_Samp_Fields>;
  sum?: Maybe<Initiatives_View_Sum_Fields>;
  var_pop?: Maybe<Initiatives_View_Var_Pop_Fields>;
  var_samp?: Maybe<Initiatives_View_Var_Samp_Fields>;
  variance?: Maybe<Initiatives_View_Variance_Fields>;
};


/** aggregate fields of "initiatives_view" */
export type Initiatives_View_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Initiatives_View_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Initiatives_View_Avg_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "initiatives_view". All fields are combined with a logical 'AND'. */
export type Initiatives_View_Bool_Exp = {
  _and?: InputMaybe<Array<Initiatives_View_Bool_Exp>>;
  _not?: InputMaybe<Initiatives_View_Bool_Exp>;
  _or?: InputMaybe<Array<Initiatives_View_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  members_count?: InputMaybe<Bigint_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Initiatives_View_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Initiatives_View_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** Ordering options when selecting data from "initiatives_view". */
export type Initiatives_View_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  members_count?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "initiatives_view" */
export enum Initiatives_View_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  MembersCount = 'members_count',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Initiatives_View_Stddev_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Initiatives_View_Stddev_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Initiatives_View_Stddev_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Initiatives_View_Sum_Fields = {
  members_count?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Initiatives_View_Var_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Initiatives_View_Var_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Initiatives_View_Variance_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']>;
  _eq?: InputMaybe<Scalars['jsonb']>;
  _gt?: InputMaybe<Scalars['jsonb']>;
  _gte?: InputMaybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['jsonb']>;
  _lte?: InputMaybe<Scalars['jsonb']>;
  _neq?: InputMaybe<Scalars['jsonb']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']>>;
};

/** columns and relationships of "map_entries" */
export type Map_Entries = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregated selection of "map_entries" */
export type Map_Entries_Aggregate = {
  aggregate?: Maybe<Map_Entries_Aggregate_Fields>;
  nodes: Array<Map_Entries>;
};

/** aggregate fields of "map_entries" */
export type Map_Entries_Aggregate_Fields = {
  avg?: Maybe<Map_Entries_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Map_Entries_Max_Fields>;
  min?: Maybe<Map_Entries_Min_Fields>;
  stddev?: Maybe<Map_Entries_Stddev_Fields>;
  stddev_pop?: Maybe<Map_Entries_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Map_Entries_Stddev_Samp_Fields>;
  sum?: Maybe<Map_Entries_Sum_Fields>;
  var_pop?: Maybe<Map_Entries_Var_Pop_Fields>;
  var_samp?: Maybe<Map_Entries_Var_Samp_Fields>;
  variance?: Maybe<Map_Entries_Variance_Fields>;
};


/** aggregate fields of "map_entries" */
export type Map_Entries_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Map_Entries_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Map_Entries_Avg_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "map_entries". All fields are combined with a logical 'AND'. */
export type Map_Entries_Bool_Exp = {
  _and?: InputMaybe<Array<Map_Entries_Bool_Exp>>;
  _not?: InputMaybe<Map_Entries_Bool_Exp>;
  _or?: InputMaybe<Array<Map_Entries_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  members?: InputMaybe<Bigint_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Map_Entries_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Map_Entries_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
};

/** Ordering options when selecting data from "map_entries". */
export type Map_Entries_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  members?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** select columns of table "map_entries" */
export enum Map_Entries_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  Members = 'members',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name',
  /** column name */
  Type = 'type'
}

/** aggregate stddev on columns */
export type Map_Entries_Stddev_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Map_Entries_Stddev_Pop_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Map_Entries_Stddev_Samp_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Map_Entries_Sum_Fields = {
  members?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Map_Entries_Var_Pop_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Map_Entries_Var_Samp_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Map_Entries_Variance_Fields = {
  members?: Maybe<Scalars['Float']>;
};

/** mutation root */
export type Mutation_Root = {
  /** delete data from the table: "auth.account_providers" */
  delete_auth_account_providers?: Maybe<Auth_Account_Providers_Mutation_Response>;
  /** delete single row from the table: "auth.account_providers" */
  delete_auth_account_providers_by_pk?: Maybe<Auth_Account_Providers>;
  /** delete data from the table: "auth.account_roles" */
  delete_auth_account_roles?: Maybe<Auth_Account_Roles_Mutation_Response>;
  /** delete single row from the table: "auth.account_roles" */
  delete_auth_account_roles_by_pk?: Maybe<Auth_Account_Roles>;
  /** delete data from the table: "auth.accounts" */
  delete_auth_accounts?: Maybe<Auth_Accounts_Mutation_Response>;
  /** delete single row from the table: "auth.accounts" */
  delete_auth_accounts_by_pk?: Maybe<Auth_Accounts>;
  /** delete data from the table: "auth.migrations" */
  delete_auth_migrations?: Maybe<Auth_Migrations_Mutation_Response>;
  /** delete single row from the table: "auth.migrations" */
  delete_auth_migrations_by_pk?: Maybe<Auth_Migrations>;
  /** delete data from the table: "auth.providers" */
  delete_auth_providers?: Maybe<Auth_Providers_Mutation_Response>;
  /** delete single row from the table: "auth.providers" */
  delete_auth_providers_by_pk?: Maybe<Auth_Providers>;
  /** delete data from the table: "auth.refresh_tokens" */
  delete_auth_refresh_tokens?: Maybe<Auth_Refresh_Tokens_Mutation_Response>;
  /** delete single row from the table: "auth.refresh_tokens" */
  delete_auth_refresh_tokens_by_pk?: Maybe<Auth_Refresh_Tokens>;
  /** delete data from the table: "auth.roles" */
  delete_auth_roles?: Maybe<Auth_Roles_Mutation_Response>;
  /** delete single row from the table: "auth.roles" */
  delete_auth_roles_by_pk?: Maybe<Auth_Roles>;
  /** delete data from the table: "file_types" */
  delete_file_types?: Maybe<File_Types_Mutation_Response>;
  /** delete single row from the table: "file_types" */
  delete_file_types_by_pk?: Maybe<File_Types>;
  /** delete data from the table: "files" */
  delete_files?: Maybe<Files_Mutation_Response>;
  /** delete single row from the table: "files" */
  delete_files_by_pk?: Maybe<Files>;
  /** delete data from the table: "geometry_columns" */
  delete_geometry_columns?: Maybe<Geometry_Columns_Mutation_Response>;
  /** delete data from the table: "i18n" */
  delete_i18n?: Maybe<I18n_Mutation_Response>;
  /** delete single row from the table: "i18n" */
  delete_i18n_by_pk?: Maybe<I18n>;
  /** delete data from the table: "i18n_categories" */
  delete_i18n_categories?: Maybe<I18n_Categories_Mutation_Response>;
  /** delete single row from the table: "i18n_categories" */
  delete_i18n_categories_by_pk?: Maybe<I18n_Categories>;
  /** delete data from the table: "initiative_comment_reactions" */
  delete_initiative_comment_reactions?: Maybe<Initiative_Comment_Reactions_Mutation_Response>;
  /** delete single row from the table: "initiative_comment_reactions" */
  delete_initiative_comment_reactions_by_pk?: Maybe<Initiative_Comment_Reactions>;
  /** delete data from the table: "initiative_comments" */
  delete_initiative_comments?: Maybe<Initiative_Comments_Mutation_Response>;
  /** delete single row from the table: "initiative_comments" */
  delete_initiative_comments_by_pk?: Maybe<Initiative_Comments>;
  /** delete data from the table: "initiative_donations" */
  delete_initiative_donations?: Maybe<Initiative_Donations_Mutation_Response>;
  /** delete single row from the table: "initiative_donations" */
  delete_initiative_donations_by_pk?: Maybe<Initiative_Donations>;
  /** delete data from the table: "initiative_edits" */
  delete_initiative_edits?: Maybe<Initiative_Edits_Mutation_Response>;
  /** delete single row from the table: "initiative_edits" */
  delete_initiative_edits_by_pk?: Maybe<Initiative_Edits>;
  /** delete data from the table: "initiative_expenses" */
  delete_initiative_expenses?: Maybe<Initiative_Expenses_Mutation_Response>;
  /** delete single row from the table: "initiative_expenses" */
  delete_initiative_expenses_by_pk?: Maybe<Initiative_Expenses>;
  /** delete data from the table: "initiative_info" */
  delete_initiative_info?: Maybe<Initiative_Info_Mutation_Response>;
  /** delete single row from the table: "initiative_info" */
  delete_initiative_info_by_pk?: Maybe<Initiative_Info>;
  /** delete data from the table: "initiative_members" */
  delete_initiative_members?: Maybe<Initiative_Members_Mutation_Response>;
  /** delete single row from the table: "initiative_members" */
  delete_initiative_members_by_pk?: Maybe<Initiative_Members>;
  /** delete data from the table: "initiative_poll_votes" */
  delete_initiative_poll_votes?: Maybe<Initiative_Poll_Votes_Mutation_Response>;
  /** delete single row from the table: "initiative_poll_votes" */
  delete_initiative_poll_votes_by_pk?: Maybe<Initiative_Poll_Votes>;
  /** delete data from the table: "initiative_polls" */
  delete_initiative_polls?: Maybe<Initiative_Polls_Mutation_Response>;
  /** delete single row from the table: "initiative_polls" */
  delete_initiative_polls_by_pk?: Maybe<Initiative_Polls>;
  /** delete data from the table: "initiative_post_reactions" */
  delete_initiative_post_reactions?: Maybe<Initiative_Post_Reactions_Mutation_Response>;
  /** delete single row from the table: "initiative_post_reactions" */
  delete_initiative_post_reactions_by_pk?: Maybe<Initiative_Post_Reactions>;
  /** delete data from the table: "initiative_posts" */
  delete_initiative_posts?: Maybe<Initiative_Posts_Mutation_Response>;
  /** delete single row from the table: "initiative_posts" */
  delete_initiative_posts_by_pk?: Maybe<Initiative_Posts>;
  /** delete data from the table: "initiative_projects" */
  delete_initiative_projects?: Maybe<Initiative_Projects_Mutation_Response>;
  /** delete single row from the table: "initiative_projects" */
  delete_initiative_projects_by_pk?: Maybe<Initiative_Projects>;
  /** delete data from the table: "initiative_tags" */
  delete_initiative_tags?: Maybe<Initiative_Tags_Mutation_Response>;
  /** delete single row from the table: "initiative_tags" */
  delete_initiative_tags_by_pk?: Maybe<Initiative_Tags>;
  /** delete data from the table: "initiative_tasks" */
  delete_initiative_tasks?: Maybe<Initiative_Tasks_Mutation_Response>;
  /** delete single row from the table: "initiative_tasks" */
  delete_initiative_tasks_by_pk?: Maybe<Initiative_Tasks>;
  /** delete data from the table: "initiative_visits" */
  delete_initiative_visits?: Maybe<Initiative_Visits_Mutation_Response>;
  /** delete single row from the table: "initiative_visits" */
  delete_initiative_visits_by_pk?: Maybe<Initiative_Visits>;
  /** delete data from the table: "initiative_volunteers" */
  delete_initiative_volunteers?: Maybe<Initiative_Volunteers_Mutation_Response>;
  /** delete single row from the table: "initiative_volunteers" */
  delete_initiative_volunteers_by_pk?: Maybe<Initiative_Volunteers>;
  /** delete data from the table: "initiatives" */
  delete_initiatives?: Maybe<Initiatives_Mutation_Response>;
  /** delete single row from the table: "initiatives" */
  delete_initiatives_by_pk?: Maybe<Initiatives>;
  /** delete data from the table: "org_members" */
  delete_org_members?: Maybe<Org_Members_Mutation_Response>;
  /** delete single row from the table: "org_members" */
  delete_org_members_by_pk?: Maybe<Org_Members>;
  /** delete data from the table: "org_projects" */
  delete_org_projects?: Maybe<Org_Projects_Mutation_Response>;
  /** delete single row from the table: "org_projects" */
  delete_org_projects_by_pk?: Maybe<Org_Projects>;
  /** delete data from the table: "org_tags" */
  delete_org_tags?: Maybe<Org_Tags_Mutation_Response>;
  /** delete single row from the table: "org_tags" */
  delete_org_tags_by_pk?: Maybe<Org_Tags>;
  /** delete data from the table: "org_visits" */
  delete_org_visits?: Maybe<Org_Visits_Mutation_Response>;
  /** delete data from the table: "orgs" */
  delete_orgs?: Maybe<Orgs_Mutation_Response>;
  /** delete single row from the table: "orgs" */
  delete_orgs_by_pk?: Maybe<Orgs>;
  /** delete data from the table: "post_types" */
  delete_post_types?: Maybe<Post_Types_Mutation_Response>;
  /** delete single row from the table: "post_types" */
  delete_post_types_by_pk?: Maybe<Post_Types>;
  /** delete data from the table: "reactions" */
  delete_reactions?: Maybe<Reactions_Mutation_Response>;
  /** delete single row from the table: "reactions" */
  delete_reactions_by_pk?: Maybe<Reactions>;
  /** delete data from the table: "spatial_ref_sys" */
  delete_spatial_ref_sys?: Maybe<Spatial_Ref_Sys_Mutation_Response>;
  /** delete single row from the table: "spatial_ref_sys" */
  delete_spatial_ref_sys_by_pk?: Maybe<Spatial_Ref_Sys>;
  /** delete data from the table: "tags" */
  delete_tags?: Maybe<Tags_Mutation_Response>;
  /** delete single row from the table: "tags" */
  delete_tags_by_pk?: Maybe<Tags>;
  /** delete data from the table: "task_statuses" */
  delete_task_statuses?: Maybe<Task_Statuses_Mutation_Response>;
  /** delete single row from the table: "task_statuses" */
  delete_task_statuses_by_pk?: Maybe<Task_Statuses>;
  /** delete data from the table: "tenders" */
  delete_tenders?: Maybe<Tenders_Mutation_Response>;
  /** delete single row from the table: "tenders" */
  delete_tenders_by_pk?: Maybe<Tenders>;
  /** delete data from the table: "user_settings" */
  delete_user_settings?: Maybe<User_Settings_Mutation_Response>;
  /** delete single row from the table: "user_settings" */
  delete_user_settings_by_pk?: Maybe<User_Settings>;
  /** delete data from the table: "user_subscriptions" */
  delete_user_subscriptions?: Maybe<User_Subscriptions_Mutation_Response>;
  /** delete single row from the table: "user_subscriptions" */
  delete_user_subscriptions_by_pk?: Maybe<User_Subscriptions>;
  /** delete data from the table: "users" */
  delete_users?: Maybe<Users_Mutation_Response>;
  /** delete single row from the table: "users" */
  delete_users_by_pk?: Maybe<Users>;
  /** insert data into the table: "auth.account_providers" */
  insert_auth_account_providers?: Maybe<Auth_Account_Providers_Mutation_Response>;
  /** insert a single row into the table: "auth.account_providers" */
  insert_auth_account_providers_one?: Maybe<Auth_Account_Providers>;
  /** insert data into the table: "auth.account_roles" */
  insert_auth_account_roles?: Maybe<Auth_Account_Roles_Mutation_Response>;
  /** insert a single row into the table: "auth.account_roles" */
  insert_auth_account_roles_one?: Maybe<Auth_Account_Roles>;
  /** insert data into the table: "auth.accounts" */
  insert_auth_accounts?: Maybe<Auth_Accounts_Mutation_Response>;
  /** insert a single row into the table: "auth.accounts" */
  insert_auth_accounts_one?: Maybe<Auth_Accounts>;
  /** insert data into the table: "auth.migrations" */
  insert_auth_migrations?: Maybe<Auth_Migrations_Mutation_Response>;
  /** insert a single row into the table: "auth.migrations" */
  insert_auth_migrations_one?: Maybe<Auth_Migrations>;
  /** insert data into the table: "auth.providers" */
  insert_auth_providers?: Maybe<Auth_Providers_Mutation_Response>;
  /** insert a single row into the table: "auth.providers" */
  insert_auth_providers_one?: Maybe<Auth_Providers>;
  /** insert data into the table: "auth.refresh_tokens" */
  insert_auth_refresh_tokens?: Maybe<Auth_Refresh_Tokens_Mutation_Response>;
  /** insert a single row into the table: "auth.refresh_tokens" */
  insert_auth_refresh_tokens_one?: Maybe<Auth_Refresh_Tokens>;
  /** insert data into the table: "auth.roles" */
  insert_auth_roles?: Maybe<Auth_Roles_Mutation_Response>;
  /** insert a single row into the table: "auth.roles" */
  insert_auth_roles_one?: Maybe<Auth_Roles>;
  /** insert data into the table: "file_types" */
  insert_file_types?: Maybe<File_Types_Mutation_Response>;
  /** insert a single row into the table: "file_types" */
  insert_file_types_one?: Maybe<File_Types>;
  /** insert data into the table: "files" */
  insert_files?: Maybe<Files_Mutation_Response>;
  /** insert a single row into the table: "files" */
  insert_files_one?: Maybe<Files>;
  /** insert data into the table: "geometry_columns" */
  insert_geometry_columns?: Maybe<Geometry_Columns_Mutation_Response>;
  /** insert a single row into the table: "geometry_columns" */
  insert_geometry_columns_one?: Maybe<Geometry_Columns>;
  /** insert data into the table: "i18n" */
  insert_i18n?: Maybe<I18n_Mutation_Response>;
  /** insert data into the table: "i18n_categories" */
  insert_i18n_categories?: Maybe<I18n_Categories_Mutation_Response>;
  /** insert a single row into the table: "i18n_categories" */
  insert_i18n_categories_one?: Maybe<I18n_Categories>;
  /** insert a single row into the table: "i18n" */
  insert_i18n_one?: Maybe<I18n>;
  /** insert data into the table: "initiative_comment_reactions" */
  insert_initiative_comment_reactions?: Maybe<Initiative_Comment_Reactions_Mutation_Response>;
  /** insert a single row into the table: "initiative_comment_reactions" */
  insert_initiative_comment_reactions_one?: Maybe<Initiative_Comment_Reactions>;
  /** insert data into the table: "initiative_comments" */
  insert_initiative_comments?: Maybe<Initiative_Comments_Mutation_Response>;
  /** insert a single row into the table: "initiative_comments" */
  insert_initiative_comments_one?: Maybe<Initiative_Comments>;
  /** insert data into the table: "initiative_donations" */
  insert_initiative_donations?: Maybe<Initiative_Donations_Mutation_Response>;
  /** insert a single row into the table: "initiative_donations" */
  insert_initiative_donations_one?: Maybe<Initiative_Donations>;
  /** insert data into the table: "initiative_edits" */
  insert_initiative_edits?: Maybe<Initiative_Edits_Mutation_Response>;
  /** insert a single row into the table: "initiative_edits" */
  insert_initiative_edits_one?: Maybe<Initiative_Edits>;
  /** insert data into the table: "initiative_expenses" */
  insert_initiative_expenses?: Maybe<Initiative_Expenses_Mutation_Response>;
  /** insert a single row into the table: "initiative_expenses" */
  insert_initiative_expenses_one?: Maybe<Initiative_Expenses>;
  /** insert data into the table: "initiative_info" */
  insert_initiative_info?: Maybe<Initiative_Info_Mutation_Response>;
  /** insert a single row into the table: "initiative_info" */
  insert_initiative_info_one?: Maybe<Initiative_Info>;
  /** insert data into the table: "initiative_members" */
  insert_initiative_members?: Maybe<Initiative_Members_Mutation_Response>;
  /** insert a single row into the table: "initiative_members" */
  insert_initiative_members_one?: Maybe<Initiative_Members>;
  /** insert data into the table: "initiative_poll_votes" */
  insert_initiative_poll_votes?: Maybe<Initiative_Poll_Votes_Mutation_Response>;
  /** insert a single row into the table: "initiative_poll_votes" */
  insert_initiative_poll_votes_one?: Maybe<Initiative_Poll_Votes>;
  /** insert data into the table: "initiative_polls" */
  insert_initiative_polls?: Maybe<Initiative_Polls_Mutation_Response>;
  /** insert a single row into the table: "initiative_polls" */
  insert_initiative_polls_one?: Maybe<Initiative_Polls>;
  /** insert data into the table: "initiative_post_reactions" */
  insert_initiative_post_reactions?: Maybe<Initiative_Post_Reactions_Mutation_Response>;
  /** insert a single row into the table: "initiative_post_reactions" */
  insert_initiative_post_reactions_one?: Maybe<Initiative_Post_Reactions>;
  /** insert data into the table: "initiative_posts" */
  insert_initiative_posts?: Maybe<Initiative_Posts_Mutation_Response>;
  /** insert a single row into the table: "initiative_posts" */
  insert_initiative_posts_one?: Maybe<Initiative_Posts>;
  /** insert data into the table: "initiative_projects" */
  insert_initiative_projects?: Maybe<Initiative_Projects_Mutation_Response>;
  /** insert a single row into the table: "initiative_projects" */
  insert_initiative_projects_one?: Maybe<Initiative_Projects>;
  /** insert data into the table: "initiative_tags" */
  insert_initiative_tags?: Maybe<Initiative_Tags_Mutation_Response>;
  /** insert a single row into the table: "initiative_tags" */
  insert_initiative_tags_one?: Maybe<Initiative_Tags>;
  /** insert data into the table: "initiative_tasks" */
  insert_initiative_tasks?: Maybe<Initiative_Tasks_Mutation_Response>;
  /** insert a single row into the table: "initiative_tasks" */
  insert_initiative_tasks_one?: Maybe<Initiative_Tasks>;
  /** insert data into the table: "initiative_visits" */
  insert_initiative_visits?: Maybe<Initiative_Visits_Mutation_Response>;
  /** insert a single row into the table: "initiative_visits" */
  insert_initiative_visits_one?: Maybe<Initiative_Visits>;
  /** insert data into the table: "initiative_volunteers" */
  insert_initiative_volunteers?: Maybe<Initiative_Volunteers_Mutation_Response>;
  /** insert a single row into the table: "initiative_volunteers" */
  insert_initiative_volunteers_one?: Maybe<Initiative_Volunteers>;
  /** insert data into the table: "initiatives" */
  insert_initiatives?: Maybe<Initiatives_Mutation_Response>;
  /** insert a single row into the table: "initiatives" */
  insert_initiatives_one?: Maybe<Initiatives>;
  /** insert data into the table: "org_members" */
  insert_org_members?: Maybe<Org_Members_Mutation_Response>;
  /** insert a single row into the table: "org_members" */
  insert_org_members_one?: Maybe<Org_Members>;
  /** insert data into the table: "org_projects" */
  insert_org_projects?: Maybe<Org_Projects_Mutation_Response>;
  /** insert a single row into the table: "org_projects" */
  insert_org_projects_one?: Maybe<Org_Projects>;
  /** insert data into the table: "org_tags" */
  insert_org_tags?: Maybe<Org_Tags_Mutation_Response>;
  /** insert a single row into the table: "org_tags" */
  insert_org_tags_one?: Maybe<Org_Tags>;
  /** insert data into the table: "org_visits" */
  insert_org_visits?: Maybe<Org_Visits_Mutation_Response>;
  /** insert a single row into the table: "org_visits" */
  insert_org_visits_one?: Maybe<Org_Visits>;
  /** insert data into the table: "orgs" */
  insert_orgs?: Maybe<Orgs_Mutation_Response>;
  /** insert a single row into the table: "orgs" */
  insert_orgs_one?: Maybe<Orgs>;
  /** insert data into the table: "post_types" */
  insert_post_types?: Maybe<Post_Types_Mutation_Response>;
  /** insert a single row into the table: "post_types" */
  insert_post_types_one?: Maybe<Post_Types>;
  /** insert data into the table: "reactions" */
  insert_reactions?: Maybe<Reactions_Mutation_Response>;
  /** insert a single row into the table: "reactions" */
  insert_reactions_one?: Maybe<Reactions>;
  /** insert data into the table: "spatial_ref_sys" */
  insert_spatial_ref_sys?: Maybe<Spatial_Ref_Sys_Mutation_Response>;
  /** insert a single row into the table: "spatial_ref_sys" */
  insert_spatial_ref_sys_one?: Maybe<Spatial_Ref_Sys>;
  /** insert data into the table: "tags" */
  insert_tags?: Maybe<Tags_Mutation_Response>;
  /** insert a single row into the table: "tags" */
  insert_tags_one?: Maybe<Tags>;
  /** insert data into the table: "task_statuses" */
  insert_task_statuses?: Maybe<Task_Statuses_Mutation_Response>;
  /** insert a single row into the table: "task_statuses" */
  insert_task_statuses_one?: Maybe<Task_Statuses>;
  /** insert data into the table: "tenders" */
  insert_tenders?: Maybe<Tenders_Mutation_Response>;
  /** insert a single row into the table: "tenders" */
  insert_tenders_one?: Maybe<Tenders>;
  /** insert data into the table: "user_settings" */
  insert_user_settings?: Maybe<User_Settings_Mutation_Response>;
  /** insert a single row into the table: "user_settings" */
  insert_user_settings_one?: Maybe<User_Settings>;
  /** insert data into the table: "user_subscriptions" */
  insert_user_subscriptions?: Maybe<User_Subscriptions_Mutation_Response>;
  /** insert a single row into the table: "user_subscriptions" */
  insert_user_subscriptions_one?: Maybe<User_Subscriptions>;
  /** insert data into the table: "users" */
  insert_users?: Maybe<Users_Mutation_Response>;
  /** insert a single row into the table: "users" */
  insert_users_one?: Maybe<Users>;
  /** update data of the table: "auth.account_providers" */
  update_auth_account_providers?: Maybe<Auth_Account_Providers_Mutation_Response>;
  /** update single row of the table: "auth.account_providers" */
  update_auth_account_providers_by_pk?: Maybe<Auth_Account_Providers>;
  /** update data of the table: "auth.account_roles" */
  update_auth_account_roles?: Maybe<Auth_Account_Roles_Mutation_Response>;
  /** update single row of the table: "auth.account_roles" */
  update_auth_account_roles_by_pk?: Maybe<Auth_Account_Roles>;
  /** update data of the table: "auth.accounts" */
  update_auth_accounts?: Maybe<Auth_Accounts_Mutation_Response>;
  /** update single row of the table: "auth.accounts" */
  update_auth_accounts_by_pk?: Maybe<Auth_Accounts>;
  /** update data of the table: "auth.migrations" */
  update_auth_migrations?: Maybe<Auth_Migrations_Mutation_Response>;
  /** update single row of the table: "auth.migrations" */
  update_auth_migrations_by_pk?: Maybe<Auth_Migrations>;
  /** update data of the table: "auth.providers" */
  update_auth_providers?: Maybe<Auth_Providers_Mutation_Response>;
  /** update single row of the table: "auth.providers" */
  update_auth_providers_by_pk?: Maybe<Auth_Providers>;
  /** update data of the table: "auth.refresh_tokens" */
  update_auth_refresh_tokens?: Maybe<Auth_Refresh_Tokens_Mutation_Response>;
  /** update single row of the table: "auth.refresh_tokens" */
  update_auth_refresh_tokens_by_pk?: Maybe<Auth_Refresh_Tokens>;
  /** update data of the table: "auth.roles" */
  update_auth_roles?: Maybe<Auth_Roles_Mutation_Response>;
  /** update single row of the table: "auth.roles" */
  update_auth_roles_by_pk?: Maybe<Auth_Roles>;
  /** update data of the table: "file_types" */
  update_file_types?: Maybe<File_Types_Mutation_Response>;
  /** update single row of the table: "file_types" */
  update_file_types_by_pk?: Maybe<File_Types>;
  /** update data of the table: "files" */
  update_files?: Maybe<Files_Mutation_Response>;
  /** update single row of the table: "files" */
  update_files_by_pk?: Maybe<Files>;
  /** update data of the table: "geometry_columns" */
  update_geometry_columns?: Maybe<Geometry_Columns_Mutation_Response>;
  /** update data of the table: "i18n" */
  update_i18n?: Maybe<I18n_Mutation_Response>;
  /** update single row of the table: "i18n" */
  update_i18n_by_pk?: Maybe<I18n>;
  /** update data of the table: "i18n_categories" */
  update_i18n_categories?: Maybe<I18n_Categories_Mutation_Response>;
  /** update single row of the table: "i18n_categories" */
  update_i18n_categories_by_pk?: Maybe<I18n_Categories>;
  /** update data of the table: "initiative_comment_reactions" */
  update_initiative_comment_reactions?: Maybe<Initiative_Comment_Reactions_Mutation_Response>;
  /** update single row of the table: "initiative_comment_reactions" */
  update_initiative_comment_reactions_by_pk?: Maybe<Initiative_Comment_Reactions>;
  /** update data of the table: "initiative_comments" */
  update_initiative_comments?: Maybe<Initiative_Comments_Mutation_Response>;
  /** update single row of the table: "initiative_comments" */
  update_initiative_comments_by_pk?: Maybe<Initiative_Comments>;
  /** update data of the table: "initiative_donations" */
  update_initiative_donations?: Maybe<Initiative_Donations_Mutation_Response>;
  /** update single row of the table: "initiative_donations" */
  update_initiative_donations_by_pk?: Maybe<Initiative_Donations>;
  /** update data of the table: "initiative_edits" */
  update_initiative_edits?: Maybe<Initiative_Edits_Mutation_Response>;
  /** update single row of the table: "initiative_edits" */
  update_initiative_edits_by_pk?: Maybe<Initiative_Edits>;
  /** update data of the table: "initiative_expenses" */
  update_initiative_expenses?: Maybe<Initiative_Expenses_Mutation_Response>;
  /** update single row of the table: "initiative_expenses" */
  update_initiative_expenses_by_pk?: Maybe<Initiative_Expenses>;
  /** update data of the table: "initiative_info" */
  update_initiative_info?: Maybe<Initiative_Info_Mutation_Response>;
  /** update single row of the table: "initiative_info" */
  update_initiative_info_by_pk?: Maybe<Initiative_Info>;
  /** update data of the table: "initiative_members" */
  update_initiative_members?: Maybe<Initiative_Members_Mutation_Response>;
  /** update single row of the table: "initiative_members" */
  update_initiative_members_by_pk?: Maybe<Initiative_Members>;
  /** update data of the table: "initiative_poll_votes" */
  update_initiative_poll_votes?: Maybe<Initiative_Poll_Votes_Mutation_Response>;
  /** update single row of the table: "initiative_poll_votes" */
  update_initiative_poll_votes_by_pk?: Maybe<Initiative_Poll_Votes>;
  /** update data of the table: "initiative_polls" */
  update_initiative_polls?: Maybe<Initiative_Polls_Mutation_Response>;
  /** update single row of the table: "initiative_polls" */
  update_initiative_polls_by_pk?: Maybe<Initiative_Polls>;
  /** update data of the table: "initiative_post_reactions" */
  update_initiative_post_reactions?: Maybe<Initiative_Post_Reactions_Mutation_Response>;
  /** update single row of the table: "initiative_post_reactions" */
  update_initiative_post_reactions_by_pk?: Maybe<Initiative_Post_Reactions>;
  /** update data of the table: "initiative_posts" */
  update_initiative_posts?: Maybe<Initiative_Posts_Mutation_Response>;
  /** update single row of the table: "initiative_posts" */
  update_initiative_posts_by_pk?: Maybe<Initiative_Posts>;
  /** update data of the table: "initiative_projects" */
  update_initiative_projects?: Maybe<Initiative_Projects_Mutation_Response>;
  /** update single row of the table: "initiative_projects" */
  update_initiative_projects_by_pk?: Maybe<Initiative_Projects>;
  /** update data of the table: "initiative_tags" */
  update_initiative_tags?: Maybe<Initiative_Tags_Mutation_Response>;
  /** update single row of the table: "initiative_tags" */
  update_initiative_tags_by_pk?: Maybe<Initiative_Tags>;
  /** update data of the table: "initiative_tasks" */
  update_initiative_tasks?: Maybe<Initiative_Tasks_Mutation_Response>;
  /** update single row of the table: "initiative_tasks" */
  update_initiative_tasks_by_pk?: Maybe<Initiative_Tasks>;
  /** update data of the table: "initiative_visits" */
  update_initiative_visits?: Maybe<Initiative_Visits_Mutation_Response>;
  /** update single row of the table: "initiative_visits" */
  update_initiative_visits_by_pk?: Maybe<Initiative_Visits>;
  /** update data of the table: "initiative_volunteers" */
  update_initiative_volunteers?: Maybe<Initiative_Volunteers_Mutation_Response>;
  /** update single row of the table: "initiative_volunteers" */
  update_initiative_volunteers_by_pk?: Maybe<Initiative_Volunteers>;
  /** update data of the table: "initiatives" */
  update_initiatives?: Maybe<Initiatives_Mutation_Response>;
  /** update single row of the table: "initiatives" */
  update_initiatives_by_pk?: Maybe<Initiatives>;
  /** update data of the table: "org_members" */
  update_org_members?: Maybe<Org_Members_Mutation_Response>;
  /** update single row of the table: "org_members" */
  update_org_members_by_pk?: Maybe<Org_Members>;
  /** update data of the table: "org_projects" */
  update_org_projects?: Maybe<Org_Projects_Mutation_Response>;
  /** update single row of the table: "org_projects" */
  update_org_projects_by_pk?: Maybe<Org_Projects>;
  /** update data of the table: "org_tags" */
  update_org_tags?: Maybe<Org_Tags_Mutation_Response>;
  /** update single row of the table: "org_tags" */
  update_org_tags_by_pk?: Maybe<Org_Tags>;
  /** update data of the table: "org_visits" */
  update_org_visits?: Maybe<Org_Visits_Mutation_Response>;
  /** update data of the table: "orgs" */
  update_orgs?: Maybe<Orgs_Mutation_Response>;
  /** update single row of the table: "orgs" */
  update_orgs_by_pk?: Maybe<Orgs>;
  /** update data of the table: "post_types" */
  update_post_types?: Maybe<Post_Types_Mutation_Response>;
  /** update single row of the table: "post_types" */
  update_post_types_by_pk?: Maybe<Post_Types>;
  /** update data of the table: "reactions" */
  update_reactions?: Maybe<Reactions_Mutation_Response>;
  /** update single row of the table: "reactions" */
  update_reactions_by_pk?: Maybe<Reactions>;
  /** update data of the table: "spatial_ref_sys" */
  update_spatial_ref_sys?: Maybe<Spatial_Ref_Sys_Mutation_Response>;
  /** update single row of the table: "spatial_ref_sys" */
  update_spatial_ref_sys_by_pk?: Maybe<Spatial_Ref_Sys>;
  /** update data of the table: "tags" */
  update_tags?: Maybe<Tags_Mutation_Response>;
  /** update single row of the table: "tags" */
  update_tags_by_pk?: Maybe<Tags>;
  /** update data of the table: "task_statuses" */
  update_task_statuses?: Maybe<Task_Statuses_Mutation_Response>;
  /** update single row of the table: "task_statuses" */
  update_task_statuses_by_pk?: Maybe<Task_Statuses>;
  /** update data of the table: "tenders" */
  update_tenders?: Maybe<Tenders_Mutation_Response>;
  /** update single row of the table: "tenders" */
  update_tenders_by_pk?: Maybe<Tenders>;
  /** update data of the table: "user_settings" */
  update_user_settings?: Maybe<User_Settings_Mutation_Response>;
  /** update single row of the table: "user_settings" */
  update_user_settings_by_pk?: Maybe<User_Settings>;
  /** update data of the table: "user_subscriptions" */
  update_user_subscriptions?: Maybe<User_Subscriptions_Mutation_Response>;
  /** update single row of the table: "user_subscriptions" */
  update_user_subscriptions_by_pk?: Maybe<User_Subscriptions>;
  /** update data of the table: "users" */
  update_users?: Maybe<Users_Mutation_Response>;
  /** update single row of the table: "users" */
  update_users_by_pk?: Maybe<Users>;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Account_ProvidersArgs = {
  where: Auth_Account_Providers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Account_Providers_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_Account_RolesArgs = {
  where: Auth_Account_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Account_Roles_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_AccountsArgs = {
  where: Auth_Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Accounts_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_MigrationsArgs = {
  where: Auth_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Migrations_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_ProvidersArgs = {
  where: Auth_Providers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Providers_By_PkArgs = {
  provider: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_Refresh_TokensArgs = {
  where: Auth_Refresh_Tokens_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Refresh_Tokens_By_PkArgs = {
  refresh_token: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Auth_RolesArgs = {
  where: Auth_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Auth_Roles_By_PkArgs = {
  role: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_File_TypesArgs = {
  where: File_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_File_Types_By_PkArgs = {
  type: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_FilesArgs = {
  where: Files_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Files_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Geometry_ColumnsArgs = {
  where: Geometry_Columns_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_I18nArgs = {
  where: I18n_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_I18n_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_I18n_CategoriesArgs = {
  where: I18n_Categories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_I18n_Categories_By_PkArgs = {
  category: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Comment_ReactionsArgs = {
  where: Initiative_Comment_Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Comment_Reactions_By_PkArgs = {
  comment_id: Scalars['Int'];
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_CommentsArgs = {
  where: Initiative_Comments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Comments_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_DonationsArgs = {
  where: Initiative_Donations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Donations_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_EditsArgs = {
  where: Initiative_Edits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Edits_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_ExpensesArgs = {
  where: Initiative_Expenses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Expenses_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_InfoArgs = {
  where: Initiative_Info_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Info_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_MembersArgs = {
  where: Initiative_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Members_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Poll_VotesArgs = {
  where: Initiative_Poll_Votes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Poll_Votes_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  poll_id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_PollsArgs = {
  where: Initiative_Polls_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Polls_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Post_ReactionsArgs = {
  where: Initiative_Post_Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Post_Reactions_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_PostsArgs = {
  where: Initiative_Posts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Posts_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_ProjectsArgs = {
  where: Initiative_Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Projects_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_TagsArgs = {
  where: Initiative_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Tags_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_TasksArgs = {
  where: Initiative_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Tasks_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_VisitsArgs = {
  where: Initiative_Visits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Visits_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Initiative_VolunteersArgs = {
  where: Initiative_Volunteers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiative_Volunteers_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_InitiativesArgs = {
  where: Initiatives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Initiatives_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Org_MembersArgs = {
  where: Org_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Org_Members_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Org_ProjectsArgs = {
  where: Org_Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Org_Projects_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Org_TagsArgs = {
  where: Org_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Org_Tags_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Org_VisitsArgs = {
  where: Org_Visits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_OrgsArgs = {
  where: Orgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Orgs_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Post_TypesArgs = {
  where: Post_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Post_Types_By_PkArgs = {
  type: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ReactionsArgs = {
  where: Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Reactions_By_PkArgs = {
  type: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Spatial_Ref_SysArgs = {
  where: Spatial_Ref_Sys_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Spatial_Ref_Sys_By_PkArgs = {
  srid: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_TagsArgs = {
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tags_By_PkArgs = {
  tag: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Task_StatusesArgs = {
  where: Task_Statuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Task_Statuses_By_PkArgs = {
  status: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_TendersArgs = {
  where: Tenders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tenders_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_User_SettingsArgs = {
  where: User_Settings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Settings_By_PkArgs = {
  user_id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_User_SubscriptionsArgs = {
  where: User_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_Subscriptions_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_UsersArgs = {
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Users_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootInsert_Auth_Account_ProvidersArgs = {
  objects: Array<Auth_Account_Providers_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Account_Providers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Account_Providers_OneArgs = {
  object: Auth_Account_Providers_Insert_Input;
  on_conflict?: InputMaybe<Auth_Account_Providers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Account_RolesArgs = {
  objects: Array<Auth_Account_Roles_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Account_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Account_Roles_OneArgs = {
  object: Auth_Account_Roles_Insert_Input;
  on_conflict?: InputMaybe<Auth_Account_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_AccountsArgs = {
  objects: Array<Auth_Accounts_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Accounts_OneArgs = {
  object: Auth_Accounts_Insert_Input;
  on_conflict?: InputMaybe<Auth_Accounts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_MigrationsArgs = {
  objects: Array<Auth_Migrations_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Migrations_OneArgs = {
  object: Auth_Migrations_Insert_Input;
  on_conflict?: InputMaybe<Auth_Migrations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_ProvidersArgs = {
  objects: Array<Auth_Providers_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Providers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Providers_OneArgs = {
  object: Auth_Providers_Insert_Input;
  on_conflict?: InputMaybe<Auth_Providers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Refresh_TokensArgs = {
  objects: Array<Auth_Refresh_Tokens_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Refresh_Tokens_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Refresh_Tokens_OneArgs = {
  object: Auth_Refresh_Tokens_Insert_Input;
  on_conflict?: InputMaybe<Auth_Refresh_Tokens_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_RolesArgs = {
  objects: Array<Auth_Roles_Insert_Input>;
  on_conflict?: InputMaybe<Auth_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Auth_Roles_OneArgs = {
  object: Auth_Roles_Insert_Input;
  on_conflict?: InputMaybe<Auth_Roles_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_File_TypesArgs = {
  objects: Array<File_Types_Insert_Input>;
  on_conflict?: InputMaybe<File_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_File_Types_OneArgs = {
  object: File_Types_Insert_Input;
  on_conflict?: InputMaybe<File_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FilesArgs = {
  objects: Array<Files_Insert_Input>;
  on_conflict?: InputMaybe<Files_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Files_OneArgs = {
  object: Files_Insert_Input;
  on_conflict?: InputMaybe<Files_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Geometry_ColumnsArgs = {
  objects: Array<Geometry_Columns_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Geometry_Columns_OneArgs = {
  object: Geometry_Columns_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_I18nArgs = {
  objects: Array<I18n_Insert_Input>;
  on_conflict?: InputMaybe<I18n_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_I18n_CategoriesArgs = {
  objects: Array<I18n_Categories_Insert_Input>;
  on_conflict?: InputMaybe<I18n_Categories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_I18n_Categories_OneArgs = {
  object: I18n_Categories_Insert_Input;
  on_conflict?: InputMaybe<I18n_Categories_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_I18n_OneArgs = {
  object: I18n_Insert_Input;
  on_conflict?: InputMaybe<I18n_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Comment_ReactionsArgs = {
  objects: Array<Initiative_Comment_Reactions_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Comment_Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Comment_Reactions_OneArgs = {
  object: Initiative_Comment_Reactions_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Comment_Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_CommentsArgs = {
  objects: Array<Initiative_Comments_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Comments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Comments_OneArgs = {
  object: Initiative_Comments_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Comments_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_DonationsArgs = {
  objects: Array<Initiative_Donations_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Donations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Donations_OneArgs = {
  object: Initiative_Donations_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Donations_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_EditsArgs = {
  objects: Array<Initiative_Edits_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Edits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Edits_OneArgs = {
  object: Initiative_Edits_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Edits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_ExpensesArgs = {
  objects: Array<Initiative_Expenses_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Expenses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Expenses_OneArgs = {
  object: Initiative_Expenses_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Expenses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_InfoArgs = {
  objects: Array<Initiative_Info_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Info_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Info_OneArgs = {
  object: Initiative_Info_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Info_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_MembersArgs = {
  objects: Array<Initiative_Members_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Members_OneArgs = {
  object: Initiative_Members_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Poll_VotesArgs = {
  objects: Array<Initiative_Poll_Votes_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Poll_Votes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Poll_Votes_OneArgs = {
  object: Initiative_Poll_Votes_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Poll_Votes_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_PollsArgs = {
  objects: Array<Initiative_Polls_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Polls_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Polls_OneArgs = {
  object: Initiative_Polls_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Polls_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Post_ReactionsArgs = {
  objects: Array<Initiative_Post_Reactions_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Post_Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Post_Reactions_OneArgs = {
  object: Initiative_Post_Reactions_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Post_Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_PostsArgs = {
  objects: Array<Initiative_Posts_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Posts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Posts_OneArgs = {
  object: Initiative_Posts_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Posts_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_ProjectsArgs = {
  objects: Array<Initiative_Projects_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Projects_OneArgs = {
  object: Initiative_Projects_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_TagsArgs = {
  objects: Array<Initiative_Tags_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Tags_OneArgs = {
  object: Initiative_Tags_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_TasksArgs = {
  objects: Array<Initiative_Tasks_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Tasks_OneArgs = {
  object: Initiative_Tasks_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Tasks_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_VisitsArgs = {
  objects: Array<Initiative_Visits_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Visits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Visits_OneArgs = {
  object: Initiative_Visits_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Visits_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_VolunteersArgs = {
  objects: Array<Initiative_Volunteers_Insert_Input>;
  on_conflict?: InputMaybe<Initiative_Volunteers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiative_Volunteers_OneArgs = {
  object: Initiative_Volunteers_Insert_Input;
  on_conflict?: InputMaybe<Initiative_Volunteers_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InitiativesArgs = {
  objects: Array<Initiatives_Insert_Input>;
  on_conflict?: InputMaybe<Initiatives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Initiatives_OneArgs = {
  object: Initiatives_Insert_Input;
  on_conflict?: InputMaybe<Initiatives_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_MembersArgs = {
  objects: Array<Org_Members_Insert_Input>;
  on_conflict?: InputMaybe<Org_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_Members_OneArgs = {
  object: Org_Members_Insert_Input;
  on_conflict?: InputMaybe<Org_Members_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_ProjectsArgs = {
  objects: Array<Org_Projects_Insert_Input>;
  on_conflict?: InputMaybe<Org_Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_Projects_OneArgs = {
  object: Org_Projects_Insert_Input;
  on_conflict?: InputMaybe<Org_Projects_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_TagsArgs = {
  objects: Array<Org_Tags_Insert_Input>;
  on_conflict?: InputMaybe<Org_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_Tags_OneArgs = {
  object: Org_Tags_Insert_Input;
  on_conflict?: InputMaybe<Org_Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Org_VisitsArgs = {
  objects: Array<Org_Visits_Insert_Input>;
};


/** mutation root */
export type Mutation_RootInsert_Org_Visits_OneArgs = {
  object: Org_Visits_Insert_Input;
};


/** mutation root */
export type Mutation_RootInsert_OrgsArgs = {
  objects: Array<Orgs_Insert_Input>;
  on_conflict?: InputMaybe<Orgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Orgs_OneArgs = {
  object: Orgs_Insert_Input;
  on_conflict?: InputMaybe<Orgs_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Post_TypesArgs = {
  objects: Array<Post_Types_Insert_Input>;
  on_conflict?: InputMaybe<Post_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Post_Types_OneArgs = {
  object: Post_Types_Insert_Input;
  on_conflict?: InputMaybe<Post_Types_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReactionsArgs = {
  objects: Array<Reactions_Insert_Input>;
  on_conflict?: InputMaybe<Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Reactions_OneArgs = {
  object: Reactions_Insert_Input;
  on_conflict?: InputMaybe<Reactions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Spatial_Ref_SysArgs = {
  objects: Array<Spatial_Ref_Sys_Insert_Input>;
  on_conflict?: InputMaybe<Spatial_Ref_Sys_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Spatial_Ref_Sys_OneArgs = {
  object: Spatial_Ref_Sys_Insert_Input;
  on_conflict?: InputMaybe<Spatial_Ref_Sys_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagsArgs = {
  objects: Array<Tags_Insert_Input>;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tags_OneArgs = {
  object: Tags_Insert_Input;
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Task_StatusesArgs = {
  objects: Array<Task_Statuses_Insert_Input>;
  on_conflict?: InputMaybe<Task_Statuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Task_Statuses_OneArgs = {
  object: Task_Statuses_Insert_Input;
  on_conflict?: InputMaybe<Task_Statuses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TendersArgs = {
  objects: Array<Tenders_Insert_Input>;
  on_conflict?: InputMaybe<Tenders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tenders_OneArgs = {
  object: Tenders_Insert_Input;
  on_conflict?: InputMaybe<Tenders_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_SettingsArgs = {
  objects: Array<User_Settings_Insert_Input>;
  on_conflict?: InputMaybe<User_Settings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Settings_OneArgs = {
  object: User_Settings_Insert_Input;
  on_conflict?: InputMaybe<User_Settings_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_SubscriptionsArgs = {
  objects: Array<User_Subscriptions_Insert_Input>;
  on_conflict?: InputMaybe<User_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_Subscriptions_OneArgs = {
  object: User_Subscriptions_Insert_Input;
  on_conflict?: InputMaybe<User_Subscriptions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UsersArgs = {
  objects: Array<Users_Insert_Input>;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Users_OneArgs = {
  object: Users_Insert_Input;
  on_conflict?: InputMaybe<Users_On_Conflict>;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Account_ProvidersArgs = {
  _set?: InputMaybe<Auth_Account_Providers_Set_Input>;
  where: Auth_Account_Providers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Account_Providers_By_PkArgs = {
  _set?: InputMaybe<Auth_Account_Providers_Set_Input>;
  pk_columns: Auth_Account_Providers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Account_RolesArgs = {
  _set?: InputMaybe<Auth_Account_Roles_Set_Input>;
  where: Auth_Account_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Account_Roles_By_PkArgs = {
  _set?: InputMaybe<Auth_Account_Roles_Set_Input>;
  pk_columns: Auth_Account_Roles_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_AccountsArgs = {
  _append?: InputMaybe<Auth_Accounts_Append_Input>;
  _delete_at_path?: InputMaybe<Auth_Accounts_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Auth_Accounts_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Auth_Accounts_Delete_Key_Input>;
  _prepend?: InputMaybe<Auth_Accounts_Prepend_Input>;
  _set?: InputMaybe<Auth_Accounts_Set_Input>;
  where: Auth_Accounts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Accounts_By_PkArgs = {
  _append?: InputMaybe<Auth_Accounts_Append_Input>;
  _delete_at_path?: InputMaybe<Auth_Accounts_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Auth_Accounts_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Auth_Accounts_Delete_Key_Input>;
  _prepend?: InputMaybe<Auth_Accounts_Prepend_Input>;
  _set?: InputMaybe<Auth_Accounts_Set_Input>;
  pk_columns: Auth_Accounts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_MigrationsArgs = {
  _inc?: InputMaybe<Auth_Migrations_Inc_Input>;
  _set?: InputMaybe<Auth_Migrations_Set_Input>;
  where: Auth_Migrations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Migrations_By_PkArgs = {
  _inc?: InputMaybe<Auth_Migrations_Inc_Input>;
  _set?: InputMaybe<Auth_Migrations_Set_Input>;
  pk_columns: Auth_Migrations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_ProvidersArgs = {
  _set?: InputMaybe<Auth_Providers_Set_Input>;
  where: Auth_Providers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Providers_By_PkArgs = {
  _set?: InputMaybe<Auth_Providers_Set_Input>;
  pk_columns: Auth_Providers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Refresh_TokensArgs = {
  _set?: InputMaybe<Auth_Refresh_Tokens_Set_Input>;
  where: Auth_Refresh_Tokens_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Refresh_Tokens_By_PkArgs = {
  _set?: InputMaybe<Auth_Refresh_Tokens_Set_Input>;
  pk_columns: Auth_Refresh_Tokens_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_RolesArgs = {
  _set?: InputMaybe<Auth_Roles_Set_Input>;
  where: Auth_Roles_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Auth_Roles_By_PkArgs = {
  _set?: InputMaybe<Auth_Roles_Set_Input>;
  pk_columns: Auth_Roles_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_File_TypesArgs = {
  _set?: InputMaybe<File_Types_Set_Input>;
  where: File_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_File_Types_By_PkArgs = {
  _set?: InputMaybe<File_Types_Set_Input>;
  pk_columns: File_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_FilesArgs = {
  _inc?: InputMaybe<Files_Inc_Input>;
  _set?: InputMaybe<Files_Set_Input>;
  where: Files_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Files_By_PkArgs = {
  _inc?: InputMaybe<Files_Inc_Input>;
  _set?: InputMaybe<Files_Set_Input>;
  pk_columns: Files_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Geometry_ColumnsArgs = {
  _inc?: InputMaybe<Geometry_Columns_Inc_Input>;
  _set?: InputMaybe<Geometry_Columns_Set_Input>;
  where: Geometry_Columns_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_I18nArgs = {
  _inc?: InputMaybe<I18n_Inc_Input>;
  _set?: InputMaybe<I18n_Set_Input>;
  where: I18n_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_I18n_By_PkArgs = {
  _inc?: InputMaybe<I18n_Inc_Input>;
  _set?: InputMaybe<I18n_Set_Input>;
  pk_columns: I18n_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_I18n_CategoriesArgs = {
  _set?: InputMaybe<I18n_Categories_Set_Input>;
  where: I18n_Categories_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_I18n_Categories_By_PkArgs = {
  _set?: InputMaybe<I18n_Categories_Set_Input>;
  pk_columns: I18n_Categories_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Comment_ReactionsArgs = {
  _inc?: InputMaybe<Initiative_Comment_Reactions_Inc_Input>;
  _set?: InputMaybe<Initiative_Comment_Reactions_Set_Input>;
  where: Initiative_Comment_Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Comment_Reactions_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Comment_Reactions_Inc_Input>;
  _set?: InputMaybe<Initiative_Comment_Reactions_Set_Input>;
  pk_columns: Initiative_Comment_Reactions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_CommentsArgs = {
  _inc?: InputMaybe<Initiative_Comments_Inc_Input>;
  _set?: InputMaybe<Initiative_Comments_Set_Input>;
  where: Initiative_Comments_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Comments_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Comments_Inc_Input>;
  _set?: InputMaybe<Initiative_Comments_Set_Input>;
  pk_columns: Initiative_Comments_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_DonationsArgs = {
  _inc?: InputMaybe<Initiative_Donations_Inc_Input>;
  _set?: InputMaybe<Initiative_Donations_Set_Input>;
  where: Initiative_Donations_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Donations_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Donations_Inc_Input>;
  _set?: InputMaybe<Initiative_Donations_Set_Input>;
  pk_columns: Initiative_Donations_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_EditsArgs = {
  _inc?: InputMaybe<Initiative_Edits_Inc_Input>;
  _set?: InputMaybe<Initiative_Edits_Set_Input>;
  where: Initiative_Edits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Edits_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Edits_Inc_Input>;
  _set?: InputMaybe<Initiative_Edits_Set_Input>;
  pk_columns: Initiative_Edits_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_ExpensesArgs = {
  _inc?: InputMaybe<Initiative_Expenses_Inc_Input>;
  _set?: InputMaybe<Initiative_Expenses_Set_Input>;
  where: Initiative_Expenses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Expenses_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Expenses_Inc_Input>;
  _set?: InputMaybe<Initiative_Expenses_Set_Input>;
  pk_columns: Initiative_Expenses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_InfoArgs = {
  _inc?: InputMaybe<Initiative_Info_Inc_Input>;
  _set?: InputMaybe<Initiative_Info_Set_Input>;
  where: Initiative_Info_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Info_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Info_Inc_Input>;
  _set?: InputMaybe<Initiative_Info_Set_Input>;
  pk_columns: Initiative_Info_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_MembersArgs = {
  _inc?: InputMaybe<Initiative_Members_Inc_Input>;
  _set?: InputMaybe<Initiative_Members_Set_Input>;
  where: Initiative_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Members_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Members_Inc_Input>;
  _set?: InputMaybe<Initiative_Members_Set_Input>;
  pk_columns: Initiative_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Poll_VotesArgs = {
  _inc?: InputMaybe<Initiative_Poll_Votes_Inc_Input>;
  _set?: InputMaybe<Initiative_Poll_Votes_Set_Input>;
  where: Initiative_Poll_Votes_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Poll_Votes_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Poll_Votes_Inc_Input>;
  _set?: InputMaybe<Initiative_Poll_Votes_Set_Input>;
  pk_columns: Initiative_Poll_Votes_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_PollsArgs = {
  _inc?: InputMaybe<Initiative_Polls_Inc_Input>;
  _set?: InputMaybe<Initiative_Polls_Set_Input>;
  where: Initiative_Polls_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Polls_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Polls_Inc_Input>;
  _set?: InputMaybe<Initiative_Polls_Set_Input>;
  pk_columns: Initiative_Polls_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Post_ReactionsArgs = {
  _inc?: InputMaybe<Initiative_Post_Reactions_Inc_Input>;
  _set?: InputMaybe<Initiative_Post_Reactions_Set_Input>;
  where: Initiative_Post_Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Post_Reactions_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Post_Reactions_Inc_Input>;
  _set?: InputMaybe<Initiative_Post_Reactions_Set_Input>;
  pk_columns: Initiative_Post_Reactions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_PostsArgs = {
  _inc?: InputMaybe<Initiative_Posts_Inc_Input>;
  _set?: InputMaybe<Initiative_Posts_Set_Input>;
  where: Initiative_Posts_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Posts_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Posts_Inc_Input>;
  _set?: InputMaybe<Initiative_Posts_Set_Input>;
  pk_columns: Initiative_Posts_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_ProjectsArgs = {
  _inc?: InputMaybe<Initiative_Projects_Inc_Input>;
  _set?: InputMaybe<Initiative_Projects_Set_Input>;
  where: Initiative_Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Projects_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Projects_Inc_Input>;
  _set?: InputMaybe<Initiative_Projects_Set_Input>;
  pk_columns: Initiative_Projects_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_TagsArgs = {
  _inc?: InputMaybe<Initiative_Tags_Inc_Input>;
  _set?: InputMaybe<Initiative_Tags_Set_Input>;
  where: Initiative_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Tags_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Tags_Inc_Input>;
  _set?: InputMaybe<Initiative_Tags_Set_Input>;
  pk_columns: Initiative_Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_TasksArgs = {
  _inc?: InputMaybe<Initiative_Tasks_Inc_Input>;
  _set?: InputMaybe<Initiative_Tasks_Set_Input>;
  where: Initiative_Tasks_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Tasks_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Tasks_Inc_Input>;
  _set?: InputMaybe<Initiative_Tasks_Set_Input>;
  pk_columns: Initiative_Tasks_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_VisitsArgs = {
  _inc?: InputMaybe<Initiative_Visits_Inc_Input>;
  _set?: InputMaybe<Initiative_Visits_Set_Input>;
  where: Initiative_Visits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Visits_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Visits_Inc_Input>;
  _set?: InputMaybe<Initiative_Visits_Set_Input>;
  pk_columns: Initiative_Visits_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_VolunteersArgs = {
  _inc?: InputMaybe<Initiative_Volunteers_Inc_Input>;
  _set?: InputMaybe<Initiative_Volunteers_Set_Input>;
  where: Initiative_Volunteers_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiative_Volunteers_By_PkArgs = {
  _inc?: InputMaybe<Initiative_Volunteers_Inc_Input>;
  _set?: InputMaybe<Initiative_Volunteers_Set_Input>;
  pk_columns: Initiative_Volunteers_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_InitiativesArgs = {
  _set?: InputMaybe<Initiatives_Set_Input>;
  where: Initiatives_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Initiatives_By_PkArgs = {
  _set?: InputMaybe<Initiatives_Set_Input>;
  pk_columns: Initiatives_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Org_MembersArgs = {
  _inc?: InputMaybe<Org_Members_Inc_Input>;
  _set?: InputMaybe<Org_Members_Set_Input>;
  where: Org_Members_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Org_Members_By_PkArgs = {
  _inc?: InputMaybe<Org_Members_Inc_Input>;
  _set?: InputMaybe<Org_Members_Set_Input>;
  pk_columns: Org_Members_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Org_ProjectsArgs = {
  _inc?: InputMaybe<Org_Projects_Inc_Input>;
  _set?: InputMaybe<Org_Projects_Set_Input>;
  where: Org_Projects_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Org_Projects_By_PkArgs = {
  _inc?: InputMaybe<Org_Projects_Inc_Input>;
  _set?: InputMaybe<Org_Projects_Set_Input>;
  pk_columns: Org_Projects_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Org_TagsArgs = {
  _inc?: InputMaybe<Org_Tags_Inc_Input>;
  _set?: InputMaybe<Org_Tags_Set_Input>;
  where: Org_Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Org_Tags_By_PkArgs = {
  _inc?: InputMaybe<Org_Tags_Inc_Input>;
  _set?: InputMaybe<Org_Tags_Set_Input>;
  pk_columns: Org_Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Org_VisitsArgs = {
  _inc?: InputMaybe<Org_Visits_Inc_Input>;
  _set?: InputMaybe<Org_Visits_Set_Input>;
  where: Org_Visits_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_OrgsArgs = {
  _set?: InputMaybe<Orgs_Set_Input>;
  where: Orgs_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Orgs_By_PkArgs = {
  _set?: InputMaybe<Orgs_Set_Input>;
  pk_columns: Orgs_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Post_TypesArgs = {
  _set?: InputMaybe<Post_Types_Set_Input>;
  where: Post_Types_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Post_Types_By_PkArgs = {
  _set?: InputMaybe<Post_Types_Set_Input>;
  pk_columns: Post_Types_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ReactionsArgs = {
  _set?: InputMaybe<Reactions_Set_Input>;
  where: Reactions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Reactions_By_PkArgs = {
  _set?: InputMaybe<Reactions_Set_Input>;
  pk_columns: Reactions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Spatial_Ref_SysArgs = {
  _inc?: InputMaybe<Spatial_Ref_Sys_Inc_Input>;
  _set?: InputMaybe<Spatial_Ref_Sys_Set_Input>;
  where: Spatial_Ref_Sys_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Spatial_Ref_Sys_By_PkArgs = {
  _inc?: InputMaybe<Spatial_Ref_Sys_Inc_Input>;
  _set?: InputMaybe<Spatial_Ref_Sys_Set_Input>;
  pk_columns: Spatial_Ref_Sys_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TagsArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  where: Tags_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tags_By_PkArgs = {
  _set?: InputMaybe<Tags_Set_Input>;
  pk_columns: Tags_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Task_StatusesArgs = {
  _set?: InputMaybe<Task_Statuses_Set_Input>;
  where: Task_Statuses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Task_Statuses_By_PkArgs = {
  _set?: InputMaybe<Task_Statuses_Set_Input>;
  pk_columns: Task_Statuses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TendersArgs = {
  _inc?: InputMaybe<Tenders_Inc_Input>;
  _set?: InputMaybe<Tenders_Set_Input>;
  where: Tenders_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tenders_By_PkArgs = {
  _inc?: InputMaybe<Tenders_Inc_Input>;
  _set?: InputMaybe<Tenders_Set_Input>;
  pk_columns: Tenders_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_SettingsArgs = {
  _set?: InputMaybe<User_Settings_Set_Input>;
  where: User_Settings_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Settings_By_PkArgs = {
  _set?: InputMaybe<User_Settings_Set_Input>;
  pk_columns: User_Settings_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_SubscriptionsArgs = {
  _set?: InputMaybe<User_Subscriptions_Set_Input>;
  where: User_Subscriptions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_Subscriptions_By_PkArgs = {
  _set?: InputMaybe<User_Subscriptions_Set_Input>;
  pk_columns: User_Subscriptions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UsersArgs = {
  _set?: InputMaybe<Users_Set_Input>;
  where: Users_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Users_By_PkArgs = {
  _set?: InputMaybe<Users_Set_Input>;
  pk_columns: Users_Pk_Columns_Input;
};

/** Boolean expression to compare columns of type "name". All fields are combined with logical 'AND'. */
export type Name_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['name']>;
  _gt?: InputMaybe<Scalars['name']>;
  _gte?: InputMaybe<Scalars['name']>;
  _in?: InputMaybe<Array<Scalars['name']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['name']>;
  _lte?: InputMaybe<Scalars['name']>;
  _neq?: InputMaybe<Scalars['name']>;
  _nin?: InputMaybe<Array<Scalars['name']>>;
};

/** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
export type Numeric_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['numeric']>;
  _gt?: InputMaybe<Scalars['numeric']>;
  _gte?: InputMaybe<Scalars['numeric']>;
  _in?: InputMaybe<Array<Scalars['numeric']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['numeric']>;
  _lte?: InputMaybe<Scalars['numeric']>;
  _neq?: InputMaybe<Scalars['numeric']>;
  _nin?: InputMaybe<Array<Scalars['numeric']>>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "org_members" */
export type Org_Members = {
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  /** An object relationship */
  org?: Maybe<Orgs>;
  org_id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  role_description?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregated selection of "org_members" */
export type Org_Members_Aggregate = {
  aggregate?: Maybe<Org_Members_Aggregate_Fields>;
  nodes: Array<Org_Members>;
};

/** aggregate fields of "org_members" */
export type Org_Members_Aggregate_Fields = {
  avg?: Maybe<Org_Members_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Org_Members_Max_Fields>;
  min?: Maybe<Org_Members_Min_Fields>;
  stddev?: Maybe<Org_Members_Stddev_Fields>;
  stddev_pop?: Maybe<Org_Members_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Org_Members_Stddev_Samp_Fields>;
  sum?: Maybe<Org_Members_Sum_Fields>;
  var_pop?: Maybe<Org_Members_Var_Pop_Fields>;
  var_samp?: Maybe<Org_Members_Var_Samp_Fields>;
  variance?: Maybe<Org_Members_Variance_Fields>;
};


/** aggregate fields of "org_members" */
export type Org_Members_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Org_Members_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "org_members" */
export type Org_Members_Aggregate_Order_By = {
  avg?: InputMaybe<Org_Members_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Org_Members_Max_Order_By>;
  min?: InputMaybe<Org_Members_Min_Order_By>;
  stddev?: InputMaybe<Org_Members_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Org_Members_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Org_Members_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Org_Members_Sum_Order_By>;
  var_pop?: InputMaybe<Org_Members_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Org_Members_Var_Samp_Order_By>;
  variance?: InputMaybe<Org_Members_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "org_members" */
export type Org_Members_Arr_Rel_Insert_Input = {
  data: Array<Org_Members_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Org_Members_On_Conflict>;
};

/** aggregate avg on columns */
export type Org_Members_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "org_members" */
export type Org_Members_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "org_members". All fields are combined with a logical 'AND'. */
export type Org_Members_Bool_Exp = {
  _and?: InputMaybe<Array<Org_Members_Bool_Exp>>;
  _not?: InputMaybe<Org_Members_Bool_Exp>;
  _or?: InputMaybe<Array<Org_Members_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  org?: InputMaybe<Orgs_Bool_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  role_description?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "org_members" */
export enum Org_Members_Constraint {
  /** unique or primary key constraint */
  OrgMemberPkey = 'org_member_pkey'
}

/** input type for incrementing numeric columns in table "org_members" */
export type Org_Members_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "org_members" */
export type Org_Members_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  org?: InputMaybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
  role_description?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Org_Members_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  role_description?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "org_members" */
export type Org_Members_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  role_description?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Org_Members_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Scalars['String']>;
  role_description?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "org_members" */
export type Org_Members_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  role_description?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "org_members" */
export type Org_Members_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Org_Members>;
};

/** on_conflict condition type for table "org_members" */
export type Org_Members_On_Conflict = {
  constraint: Org_Members_Constraint;
  update_columns?: Array<Org_Members_Update_Column>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};

/** Ordering options when selecting data from "org_members". */
export type Org_Members_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  org?: InputMaybe<Orgs_Order_By>;
  org_id?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  role_description?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: org_members */
export type Org_Members_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "org_members" */
export enum Org_Members_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Role = 'role',
  /** column name */
  RoleDescription = 'role_description',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "org_members" */
export type Org_Members_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['Int']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  role?: InputMaybe<Scalars['String']>;
  role_description?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Org_Members_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "org_members" */
export type Org_Members_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Org_Members_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "org_members" */
export type Org_Members_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Org_Members_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "org_members" */
export type Org_Members_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Org_Members_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "org_members" */
export type Org_Members_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "org_members" */
export enum Org_Members_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Role = 'role',
  /** column name */
  RoleDescription = 'role_description',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Org_Members_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "org_members" */
export type Org_Members_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Org_Members_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "org_members" */
export type Org_Members_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Org_Members_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "org_members" */
export type Org_Members_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "org_projects" */
export type Org_Projects = {
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  id: Scalars['Int'];
  /** An array relationship */
  initiative_projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  initiative_projects_aggregate: Initiative_Projects_Aggregate;
  /** An object relationship */
  org?: Maybe<Orgs>;
  org_id?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "org_projects" */
export type Org_ProjectsInitiative_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "org_projects" */
export type Org_ProjectsInitiative_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "org_projects" */
export type Org_ProjectsTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "org_projects" */
export type Org_ProjectsTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};

/** aggregated selection of "org_projects" */
export type Org_Projects_Aggregate = {
  aggregate?: Maybe<Org_Projects_Aggregate_Fields>;
  nodes: Array<Org_Projects>;
};

/** aggregate fields of "org_projects" */
export type Org_Projects_Aggregate_Fields = {
  avg?: Maybe<Org_Projects_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Org_Projects_Max_Fields>;
  min?: Maybe<Org_Projects_Min_Fields>;
  stddev?: Maybe<Org_Projects_Stddev_Fields>;
  stddev_pop?: Maybe<Org_Projects_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Org_Projects_Stddev_Samp_Fields>;
  sum?: Maybe<Org_Projects_Sum_Fields>;
  var_pop?: Maybe<Org_Projects_Var_Pop_Fields>;
  var_samp?: Maybe<Org_Projects_Var_Samp_Fields>;
  variance?: Maybe<Org_Projects_Variance_Fields>;
};


/** aggregate fields of "org_projects" */
export type Org_Projects_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Org_Projects_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "org_projects" */
export type Org_Projects_Aggregate_Order_By = {
  avg?: InputMaybe<Org_Projects_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Org_Projects_Max_Order_By>;
  min?: InputMaybe<Org_Projects_Min_Order_By>;
  stddev?: InputMaybe<Org_Projects_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Org_Projects_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Org_Projects_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Org_Projects_Sum_Order_By>;
  var_pop?: InputMaybe<Org_Projects_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Org_Projects_Var_Samp_Order_By>;
  variance?: InputMaybe<Org_Projects_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "org_projects" */
export type Org_Projects_Arr_Rel_Insert_Input = {
  data: Array<Org_Projects_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Org_Projects_On_Conflict>;
};

/** aggregate avg on columns */
export type Org_Projects_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "org_projects" */
export type Org_Projects_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "org_projects". All fields are combined with a logical 'AND'. */
export type Org_Projects_Bool_Exp = {
  _and?: InputMaybe<Array<Org_Projects_Bool_Exp>>;
  _not?: InputMaybe<Org_Projects_Bool_Exp>;
  _or?: InputMaybe<Array<Org_Projects_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  initiative_projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  org?: InputMaybe<Orgs_Bool_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  tenders?: InputMaybe<Tenders_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "org_projects" */
export enum Org_Projects_Constraint {
  /** unique or primary key constraint */
  OrgProjectPkey = 'org_project_pkey'
}

/** input type for incrementing numeric columns in table "org_projects" */
export type Org_Projects_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "org_projects" */
export type Org_Projects_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  initiative_projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  org?: InputMaybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: InputMaybe<Scalars['uuid']>;
  tenders?: InputMaybe<Tenders_Arr_Rel_Insert_Input>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Org_Projects_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "org_projects" */
export type Org_Projects_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Org_Projects_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "org_projects" */
export type Org_Projects_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "org_projects" */
export type Org_Projects_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Org_Projects>;
};

/** input type for inserting object relation for remote table "org_projects" */
export type Org_Projects_Obj_Rel_Insert_Input = {
  data: Org_Projects_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Org_Projects_On_Conflict>;
};

/** on_conflict condition type for table "org_projects" */
export type Org_Projects_On_Conflict = {
  constraint: Org_Projects_Constraint;
  update_columns?: Array<Org_Projects_Update_Column>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};

/** Ordering options when selecting data from "org_projects". */
export type Org_Projects_Order_By = {
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  org?: InputMaybe<Orgs_Order_By>;
  org_id?: InputMaybe<Order_By>;
  tenders_aggregate?: InputMaybe<Tenders_Aggregate_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: org_projects */
export type Org_Projects_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "org_projects" */
export enum Org_Projects_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "org_projects" */
export type Org_Projects_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['Int']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Org_Projects_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "org_projects" */
export type Org_Projects_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Org_Projects_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "org_projects" */
export type Org_Projects_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Org_Projects_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "org_projects" */
export type Org_Projects_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Org_Projects_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "org_projects" */
export type Org_Projects_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "org_projects" */
export enum Org_Projects_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Org_Projects_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "org_projects" */
export type Org_Projects_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Org_Projects_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "org_projects" */
export type Org_Projects_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Org_Projects_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "org_projects" */
export type Org_Projects_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "org_tags" */
export type Org_Tags = {
  id: Scalars['Int'];
  /** An object relationship */
  org?: Maybe<Orgs>;
  org_id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Scalars['String']>;
  /** An object relationship */
  tags?: Maybe<Tags>;
};

/** aggregated selection of "org_tags" */
export type Org_Tags_Aggregate = {
  aggregate?: Maybe<Org_Tags_Aggregate_Fields>;
  nodes: Array<Org_Tags>;
};

/** aggregate fields of "org_tags" */
export type Org_Tags_Aggregate_Fields = {
  avg?: Maybe<Org_Tags_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Org_Tags_Max_Fields>;
  min?: Maybe<Org_Tags_Min_Fields>;
  stddev?: Maybe<Org_Tags_Stddev_Fields>;
  stddev_pop?: Maybe<Org_Tags_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Org_Tags_Stddev_Samp_Fields>;
  sum?: Maybe<Org_Tags_Sum_Fields>;
  var_pop?: Maybe<Org_Tags_Var_Pop_Fields>;
  var_samp?: Maybe<Org_Tags_Var_Samp_Fields>;
  variance?: Maybe<Org_Tags_Variance_Fields>;
};


/** aggregate fields of "org_tags" */
export type Org_Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Org_Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "org_tags" */
export type Org_Tags_Aggregate_Order_By = {
  avg?: InputMaybe<Org_Tags_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Org_Tags_Max_Order_By>;
  min?: InputMaybe<Org_Tags_Min_Order_By>;
  stddev?: InputMaybe<Org_Tags_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Org_Tags_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Org_Tags_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Org_Tags_Sum_Order_By>;
  var_pop?: InputMaybe<Org_Tags_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Org_Tags_Var_Samp_Order_By>;
  variance?: InputMaybe<Org_Tags_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "org_tags" */
export type Org_Tags_Arr_Rel_Insert_Input = {
  data: Array<Org_Tags_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Org_Tags_On_Conflict>;
};

/** aggregate avg on columns */
export type Org_Tags_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "org_tags" */
export type Org_Tags_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "org_tags". All fields are combined with a logical 'AND'. */
export type Org_Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Org_Tags_Bool_Exp>>;
  _not?: InputMaybe<Org_Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Org_Tags_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  org?: InputMaybe<Orgs_Bool_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  tag?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<Tags_Bool_Exp>;
};

/** unique or primary key constraints on table "org_tags" */
export enum Org_Tags_Constraint {
  /** unique or primary key constraint */
  OrgTagPkey = 'org_tag_pkey'
}

/** input type for incrementing numeric columns in table "org_tags" */
export type Org_Tags_Inc_Input = {
  id?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "org_tags" */
export type Org_Tags_Insert_Input = {
  id?: InputMaybe<Scalars['Int']>;
  org?: InputMaybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: InputMaybe<Scalars['uuid']>;
  tag?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<Tags_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Org_Tags_Max_Fields = {
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "org_tags" */
export type Org_Tags_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Org_Tags_Min_Fields = {
  id?: Maybe<Scalars['Int']>;
  org_id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "org_tags" */
export type Org_Tags_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "org_tags" */
export type Org_Tags_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Org_Tags>;
};

/** on_conflict condition type for table "org_tags" */
export type Org_Tags_On_Conflict = {
  constraint: Org_Tags_Constraint;
  update_columns?: Array<Org_Tags_Update_Column>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "org_tags". */
export type Org_Tags_Order_By = {
  id?: InputMaybe<Order_By>;
  org?: InputMaybe<Orgs_Order_By>;
  org_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Order_By>;
  tags?: InputMaybe<Tags_Order_By>;
};

/** primary key columns input for table: org_tags */
export type Org_Tags_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "org_tags" */
export enum Org_Tags_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Tag = 'tag'
}

/** input type for updating data in table "org_tags" */
export type Org_Tags_Set_Input = {
  id?: InputMaybe<Scalars['Int']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  tag?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Org_Tags_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "org_tags" */
export type Org_Tags_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Org_Tags_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "org_tags" */
export type Org_Tags_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Org_Tags_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "org_tags" */
export type Org_Tags_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Org_Tags_Sum_Fields = {
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "org_tags" */
export type Org_Tags_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** update columns of table "org_tags" */
export enum Org_Tags_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  Tag = 'tag'
}

/** aggregate var_pop on columns */
export type Org_Tags_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "org_tags" */
export type Org_Tags_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Org_Tags_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "org_tags" */
export type Org_Tags_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Org_Tags_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "org_tags" */
export type Org_Tags_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "org_visits" */
export type Org_Visits = {
  id: Scalars['bigint'];
  org_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at: Scalars['timestamptz'];
};

/** aggregated selection of "org_visits" */
export type Org_Visits_Aggregate = {
  aggregate?: Maybe<Org_Visits_Aggregate_Fields>;
  nodes: Array<Org_Visits>;
};

/** aggregate fields of "org_visits" */
export type Org_Visits_Aggregate_Fields = {
  avg?: Maybe<Org_Visits_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Org_Visits_Max_Fields>;
  min?: Maybe<Org_Visits_Min_Fields>;
  stddev?: Maybe<Org_Visits_Stddev_Fields>;
  stddev_pop?: Maybe<Org_Visits_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Org_Visits_Stddev_Samp_Fields>;
  sum?: Maybe<Org_Visits_Sum_Fields>;
  var_pop?: Maybe<Org_Visits_Var_Pop_Fields>;
  var_samp?: Maybe<Org_Visits_Var_Samp_Fields>;
  variance?: Maybe<Org_Visits_Variance_Fields>;
};


/** aggregate fields of "org_visits" */
export type Org_Visits_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Org_Visits_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Org_Visits_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "org_visits". All fields are combined with a logical 'AND'. */
export type Org_Visits_Bool_Exp = {
  _and?: InputMaybe<Array<Org_Visits_Bool_Exp>>;
  _not?: InputMaybe<Org_Visits_Bool_Exp>;
  _or?: InputMaybe<Array<Org_Visits_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
  visited_at?: InputMaybe<Timestamptz_Comparison_Exp>;
};

/** input type for incrementing numeric columns in table "org_visits" */
export type Org_Visits_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
};

/** input type for inserting data into table "org_visits" */
export type Org_Visits_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  user_id?: InputMaybe<Scalars['uuid']>;
  visited_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Org_Visits_Max_Fields = {
  id?: Maybe<Scalars['bigint']>;
  org_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Org_Visits_Min_Fields = {
  id?: Maybe<Scalars['bigint']>;
  org_id?: Maybe<Scalars['uuid']>;
  user_id?: Maybe<Scalars['uuid']>;
  visited_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "org_visits" */
export type Org_Visits_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Org_Visits>;
};

/** Ordering options when selecting data from "org_visits". */
export type Org_Visits_Order_By = {
  id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
  visited_at?: InputMaybe<Order_By>;
};

/** select columns of table "org_visits" */
export enum Org_Visits_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  UserId = 'user_id',
  /** column name */
  VisitedAt = 'visited_at'
}

/** input type for updating data in table "org_visits" */
export type Org_Visits_Set_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  user_id?: InputMaybe<Scalars['uuid']>;
  visited_at?: InputMaybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Org_Visits_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Org_Visits_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Org_Visits_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Org_Visits_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Org_Visits_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Org_Visits_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Org_Visits_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "orgs" */
export type Orgs = {
  address?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  description?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id: Scalars['uuid'];
  image?: Maybe<Scalars['String']>;
  /** An array relationship */
  initiative_projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  initiative_projects_aggregate: Initiative_Projects_Aggregate;
  /** An array relationship */
  members: Array<Org_Members>;
  /** An aggregate relationship */
  members_aggregate: Org_Members_Aggregate;
  modified_at: Scalars['timestamptz'];
  name?: Maybe<Scalars['String']>;
  /** An array relationship */
  projects: Array<Org_Projects>;
  /** An aggregate relationship */
  projects_aggregate: Org_Projects_Aggregate;
  /** An array relationship */
  tags: Array<Org_Tags>;
  /** An aggregate relationship */
  tags_aggregate: Org_Tags_Aggregate;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
};


/** columns and relationships of "orgs" */
export type OrgsInitiative_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsInitiative_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsMembersArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsMembers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsProjectsArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsTagsArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "orgs" */
export type OrgsTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};

/** aggregated selection of "orgs" */
export type Orgs_Aggregate = {
  aggregate?: Maybe<Orgs_Aggregate_Fields>;
  nodes: Array<Orgs>;
};

/** aggregate fields of "orgs" */
export type Orgs_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Orgs_Max_Fields>;
  min?: Maybe<Orgs_Min_Fields>;
};


/** aggregate fields of "orgs" */
export type Orgs_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Orgs_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "orgs". All fields are combined with a logical 'AND'. */
export type Orgs_Bool_Exp = {
  _and?: InputMaybe<Array<Orgs_Bool_Exp>>;
  _not?: InputMaybe<Orgs_Bool_Exp>;
  _or?: InputMaybe<Array<Orgs_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  initiative_projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  members?: InputMaybe<Org_Members_Bool_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  projects?: InputMaybe<Org_Projects_Bool_Exp>;
  tags?: InputMaybe<Org_Tags_Bool_Exp>;
  tenders?: InputMaybe<Tenders_Bool_Exp>;
};

/** unique or primary key constraints on table "orgs" */
export enum Orgs_Constraint {
  /** unique or primary key constraint */
  OrgPkey = 'org_pkey'
}

/** input type for inserting data into table "orgs" */
export type Orgs_Insert_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  geom?: InputMaybe<Scalars['geometry']>;
  id?: InputMaybe<Scalars['uuid']>;
  image?: InputMaybe<Scalars['String']>;
  initiative_projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  members?: InputMaybe<Org_Members_Arr_Rel_Insert_Input>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
  projects?: InputMaybe<Org_Projects_Arr_Rel_Insert_Input>;
  tags?: InputMaybe<Org_Tags_Arr_Rel_Insert_Input>;
  tenders?: InputMaybe<Tenders_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Orgs_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Orgs_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "orgs" */
export type Orgs_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Orgs>;
};

export type Orgs_Nearby_Args = {
  limit?: InputMaybe<Scalars['Int']>;
  location?: InputMaybe<Scalars['geometry']>;
  max_date?: InputMaybe<Scalars['timestamptz']>;
  max_distance?: InputMaybe<Scalars['float8']>;
  min_date?: InputMaybe<Scalars['timestamptz']>;
  min_distance?: InputMaybe<Scalars['float8']>;
  own?: InputMaybe<Scalars['Boolean']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** input type for inserting object relation for remote table "orgs" */
export type Orgs_Obj_Rel_Insert_Input = {
  data: Orgs_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Orgs_On_Conflict>;
};

/** on_conflict condition type for table "orgs" */
export type Orgs_On_Conflict = {
  constraint: Orgs_Constraint;
  update_columns?: Array<Orgs_Update_Column>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};

/** Ordering options when selecting data from "orgs". */
export type Orgs_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  initiative_projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  members_aggregate?: InputMaybe<Org_Members_Aggregate_Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Org_Projects_Aggregate_Order_By>;
  tags_aggregate?: InputMaybe<Org_Tags_Aggregate_Order_By>;
  tenders_aggregate?: InputMaybe<Tenders_Aggregate_Order_By>;
};

/** primary key columns input for table: orgs */
export type Orgs_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "orgs" */
export enum Orgs_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "orgs" */
export type Orgs_Set_Input = {
  address?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  description?: InputMaybe<Scalars['String']>;
  geom?: InputMaybe<Scalars['geometry']>;
  id?: InputMaybe<Scalars['uuid']>;
  image?: InputMaybe<Scalars['String']>;
  modified_at?: InputMaybe<Scalars['timestamptz']>;
  name?: InputMaybe<Scalars['String']>;
};

/** update columns of table "orgs" */
export enum Orgs_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** columns and relationships of "orgs_view" */
export type Orgs_View = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  geom?: Maybe<Scalars['geometry']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregated selection of "orgs_view" */
export type Orgs_View_Aggregate = {
  aggregate?: Maybe<Orgs_View_Aggregate_Fields>;
  nodes: Array<Orgs_View>;
};

/** aggregate fields of "orgs_view" */
export type Orgs_View_Aggregate_Fields = {
  avg?: Maybe<Orgs_View_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Orgs_View_Max_Fields>;
  min?: Maybe<Orgs_View_Min_Fields>;
  stddev?: Maybe<Orgs_View_Stddev_Fields>;
  stddev_pop?: Maybe<Orgs_View_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Orgs_View_Stddev_Samp_Fields>;
  sum?: Maybe<Orgs_View_Sum_Fields>;
  var_pop?: Maybe<Orgs_View_Var_Pop_Fields>;
  var_samp?: Maybe<Orgs_View_Var_Samp_Fields>;
  variance?: Maybe<Orgs_View_Variance_Fields>;
};


/** aggregate fields of "orgs_view" */
export type Orgs_View_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Orgs_View_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Orgs_View_Avg_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "orgs_view". All fields are combined with a logical 'AND'. */
export type Orgs_View_Bool_Exp = {
  _and?: InputMaybe<Array<Orgs_View_Bool_Exp>>;
  _not?: InputMaybe<Orgs_View_Bool_Exp>;
  _or?: InputMaybe<Array<Orgs_View_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  geom?: InputMaybe<Geometry_Comparison_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  image?: InputMaybe<String_Comparison_Exp>;
  members_count?: InputMaybe<Bigint_Comparison_Exp>;
  modified_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type Orgs_View_Max_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Orgs_View_Min_Fields = {
  address?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  image?: Maybe<Scalars['String']>;
  members_count?: Maybe<Scalars['bigint']>;
  modified_at?: Maybe<Scalars['timestamptz']>;
  name?: Maybe<Scalars['String']>;
};

/** Ordering options when selecting data from "orgs_view". */
export type Orgs_View_Order_By = {
  address?: InputMaybe<Order_By>;
  created_at?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  geom?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  image?: InputMaybe<Order_By>;
  members_count?: InputMaybe<Order_By>;
  modified_at?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** select columns of table "orgs_view" */
export enum Orgs_View_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Description = 'description',
  /** column name */
  Geom = 'geom',
  /** column name */
  Id = 'id',
  /** column name */
  Image = 'image',
  /** column name */
  MembersCount = 'members_count',
  /** column name */
  ModifiedAt = 'modified_at',
  /** column name */
  Name = 'name'
}

/** aggregate stddev on columns */
export type Orgs_View_Stddev_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Orgs_View_Stddev_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Orgs_View_Stddev_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Orgs_View_Sum_Fields = {
  members_count?: Maybe<Scalars['bigint']>;
};

/** aggregate var_pop on columns */
export type Orgs_View_Var_Pop_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Orgs_View_Var_Samp_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Orgs_View_Variance_Fields = {
  members_count?: Maybe<Scalars['Float']>;
};

/** columns and relationships of "post_types" */
export type Post_Types = {
  /** An array relationship */
  initiative_posts: Array<Initiative_Posts>;
  /** An aggregate relationship */
  initiative_posts_aggregate: Initiative_Posts_Aggregate;
  type: Scalars['String'];
};


/** columns and relationships of "post_types" */
export type Post_TypesInitiative_PostsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


/** columns and relationships of "post_types" */
export type Post_TypesInitiative_Posts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};

/** aggregated selection of "post_types" */
export type Post_Types_Aggregate = {
  aggregate?: Maybe<Post_Types_Aggregate_Fields>;
  nodes: Array<Post_Types>;
};

/** aggregate fields of "post_types" */
export type Post_Types_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Post_Types_Max_Fields>;
  min?: Maybe<Post_Types_Min_Fields>;
};


/** aggregate fields of "post_types" */
export type Post_Types_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Post_Types_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "post_types". All fields are combined with a logical 'AND'. */
export type Post_Types_Bool_Exp = {
  _and?: InputMaybe<Array<Post_Types_Bool_Exp>>;
  _not?: InputMaybe<Post_Types_Bool_Exp>;
  _or?: InputMaybe<Array<Post_Types_Bool_Exp>>;
  initiative_posts?: InputMaybe<Initiative_Posts_Bool_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "post_types" */
export enum Post_Types_Constraint {
  /** unique or primary key constraint */
  PostTypesPkey = 'post_types_pkey'
}

export enum Post_Types_Enum {
  Donation = 'donation',
  Edit = 'edit',
  Expense = 'expense',
  Initiation = 'initiation',
  Message = 'message',
  Project = 'project',
  Report = 'report',
  Task = 'task',
  Volunteer = 'volunteer'
}

/** Boolean expression to compare columns of type "post_types_enum". All fields are combined with logical 'AND'. */
export type Post_Types_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Post_Types_Enum>;
  _in?: InputMaybe<Array<Post_Types_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Post_Types_Enum>;
  _nin?: InputMaybe<Array<Post_Types_Enum>>;
};

/** input type for inserting data into table "post_types" */
export type Post_Types_Insert_Input = {
  initiative_posts?: InputMaybe<Initiative_Posts_Arr_Rel_Insert_Input>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Post_Types_Max_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Post_Types_Min_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "post_types" */
export type Post_Types_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Post_Types>;
};

/** on_conflict condition type for table "post_types" */
export type Post_Types_On_Conflict = {
  constraint: Post_Types_Constraint;
  update_columns?: Array<Post_Types_Update_Column>;
  where?: InputMaybe<Post_Types_Bool_Exp>;
};

/** Ordering options when selecting data from "post_types". */
export type Post_Types_Order_By = {
  initiative_posts_aggregate?: InputMaybe<Initiative_Posts_Aggregate_Order_By>;
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: post_types */
export type Post_Types_Pk_Columns_Input = {
  type: Scalars['String'];
};

/** select columns of table "post_types" */
export enum Post_Types_Select_Column {
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "post_types" */
export type Post_Types_Set_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "post_types" */
export enum Post_Types_Update_Column {
  /** column name */
  Type = 'type'
}

export type Query_Root = {
  /** fetch data from the table: "auth.account_providers" */
  auth_account_providers: Array<Auth_Account_Providers>;
  /** fetch aggregated fields from the table: "auth.account_providers" */
  auth_account_providers_aggregate: Auth_Account_Providers_Aggregate;
  /** fetch data from the table: "auth.account_providers" using primary key columns */
  auth_account_providers_by_pk?: Maybe<Auth_Account_Providers>;
  /** fetch data from the table: "auth.account_roles" */
  auth_account_roles: Array<Auth_Account_Roles>;
  /** fetch aggregated fields from the table: "auth.account_roles" */
  auth_account_roles_aggregate: Auth_Account_Roles_Aggregate;
  /** fetch data from the table: "auth.account_roles" using primary key columns */
  auth_account_roles_by_pk?: Maybe<Auth_Account_Roles>;
  /** fetch data from the table: "auth.accounts" */
  auth_accounts: Array<Auth_Accounts>;
  /** fetch aggregated fields from the table: "auth.accounts" */
  auth_accounts_aggregate: Auth_Accounts_Aggregate;
  /** fetch data from the table: "auth.accounts" using primary key columns */
  auth_accounts_by_pk?: Maybe<Auth_Accounts>;
  /** fetch data from the table: "auth.migrations" */
  auth_migrations: Array<Auth_Migrations>;
  /** fetch aggregated fields from the table: "auth.migrations" */
  auth_migrations_aggregate: Auth_Migrations_Aggregate;
  /** fetch data from the table: "auth.migrations" using primary key columns */
  auth_migrations_by_pk?: Maybe<Auth_Migrations>;
  /** fetch data from the table: "auth.providers" */
  auth_providers: Array<Auth_Providers>;
  /** fetch aggregated fields from the table: "auth.providers" */
  auth_providers_aggregate: Auth_Providers_Aggregate;
  /** fetch data from the table: "auth.providers" using primary key columns */
  auth_providers_by_pk?: Maybe<Auth_Providers>;
  /** fetch data from the table: "auth.refresh_tokens" */
  auth_refresh_tokens: Array<Auth_Refresh_Tokens>;
  /** fetch aggregated fields from the table: "auth.refresh_tokens" */
  auth_refresh_tokens_aggregate: Auth_Refresh_Tokens_Aggregate;
  /** fetch data from the table: "auth.refresh_tokens" using primary key columns */
  auth_refresh_tokens_by_pk?: Maybe<Auth_Refresh_Tokens>;
  /** fetch data from the table: "auth.roles" */
  auth_roles: Array<Auth_Roles>;
  /** fetch aggregated fields from the table: "auth.roles" */
  auth_roles_aggregate: Auth_Roles_Aggregate;
  /** fetch data from the table: "auth.roles" using primary key columns */
  auth_roles_by_pk?: Maybe<Auth_Roles>;
  /** fetch data from the table: "entries" */
  entries: Array<Entries>;
  /** fetch aggregated fields from the table: "entries" */
  entries_aggregate: Entries_Aggregate;
  /** execute function "entries_nearby" which returns "entries" */
  entries_nearby: Array<Entries>;
  /** execute function "entries_nearby" and query aggregates on result of table type "entries" */
  entries_nearby_aggregate: Entries_Aggregate;
  /** fetch data from the table: "entry_members" */
  entry_members: Array<Entry_Members>;
  /** fetch aggregated fields from the table: "entry_members" */
  entry_members_aggregate: Entry_Members_Aggregate;
  /** fetch data from the table: "entry_visits" */
  entry_visits: Array<Entry_Visits>;
  /** fetch aggregated fields from the table: "entry_visits" */
  entry_visits_aggregate: Entry_Visits_Aggregate;
  /** fetch data from the table: "file_types" */
  file_types: Array<File_Types>;
  /** fetch aggregated fields from the table: "file_types" */
  file_types_aggregate: File_Types_Aggregate;
  /** fetch data from the table: "file_types" using primary key columns */
  file_types_by_pk?: Maybe<File_Types>;
  /** An array relationship */
  files: Array<Files>;
  /** An aggregate relationship */
  files_aggregate: Files_Aggregate;
  /** fetch data from the table: "files" using primary key columns */
  files_by_pk?: Maybe<Files>;
  /** fetch data from the table: "geography_columns" */
  geography_columns: Array<Geography_Columns>;
  /** fetch aggregated fields from the table: "geography_columns" */
  geography_columns_aggregate: Geography_Columns_Aggregate;
  /** fetch data from the table: "geometry_columns" */
  geometry_columns: Array<Geometry_Columns>;
  /** fetch aggregated fields from the table: "geometry_columns" */
  geometry_columns_aggregate: Geometry_Columns_Aggregate;
  /** fetch data from the table: "i18n" */
  i18n: Array<I18n>;
  /** fetch aggregated fields from the table: "i18n" */
  i18n_aggregate: I18n_Aggregate;
  /** fetch data from the table: "i18n" using primary key columns */
  i18n_by_pk?: Maybe<I18n>;
  /** fetch data from the table: "i18n_categories" */
  i18n_categories: Array<I18n_Categories>;
  /** fetch aggregated fields from the table: "i18n_categories" */
  i18n_categories_aggregate: I18n_Categories_Aggregate;
  /** fetch data from the table: "i18n_categories" using primary key columns */
  i18n_categories_by_pk?: Maybe<I18n_Categories>;
  /** fetch data from the table: "initiative_comment_reactions" */
  initiative_comment_reactions: Array<Initiative_Comment_Reactions>;
  /** fetch aggregated fields from the table: "initiative_comment_reactions" */
  initiative_comment_reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  /** fetch data from the table: "initiative_comment_reactions" using primary key columns */
  initiative_comment_reactions_by_pk?: Maybe<Initiative_Comment_Reactions>;
  /** fetch data from the table: "initiative_comments" */
  initiative_comments: Array<Initiative_Comments>;
  /** fetch aggregated fields from the table: "initiative_comments" */
  initiative_comments_aggregate: Initiative_Comments_Aggregate;
  /** fetch data from the table: "initiative_comments" using primary key columns */
  initiative_comments_by_pk?: Maybe<Initiative_Comments>;
  /** fetch data from the table: "initiative_donations" */
  initiative_donations: Array<Initiative_Donations>;
  /** fetch aggregated fields from the table: "initiative_donations" */
  initiative_donations_aggregate: Initiative_Donations_Aggregate;
  /** fetch data from the table: "initiative_donations" using primary key columns */
  initiative_donations_by_pk?: Maybe<Initiative_Donations>;
  /** fetch data from the table: "initiative_edits" */
  initiative_edits: Array<Initiative_Edits>;
  /** fetch aggregated fields from the table: "initiative_edits" */
  initiative_edits_aggregate: Initiative_Edits_Aggregate;
  /** fetch data from the table: "initiative_edits" using primary key columns */
  initiative_edits_by_pk?: Maybe<Initiative_Edits>;
  /** fetch data from the table: "initiative_expenses" */
  initiative_expenses: Array<Initiative_Expenses>;
  /** fetch aggregated fields from the table: "initiative_expenses" */
  initiative_expenses_aggregate: Initiative_Expenses_Aggregate;
  /** fetch data from the table: "initiative_expenses" using primary key columns */
  initiative_expenses_by_pk?: Maybe<Initiative_Expenses>;
  /** fetch data from the table: "initiative_info" */
  initiative_info: Array<Initiative_Info>;
  /** fetch aggregated fields from the table: "initiative_info" */
  initiative_info_aggregate: Initiative_Info_Aggregate;
  /** fetch data from the table: "initiative_info" using primary key columns */
  initiative_info_by_pk?: Maybe<Initiative_Info>;
  /** An array relationship */
  initiative_members: Array<Initiative_Members>;
  /** An aggregate relationship */
  initiative_members_aggregate: Initiative_Members_Aggregate;
  /** fetch data from the table: "initiative_members" using primary key columns */
  initiative_members_by_pk?: Maybe<Initiative_Members>;
  /** fetch data from the table: "initiative_poll_votes" */
  initiative_poll_votes: Array<Initiative_Poll_Votes>;
  /** fetch aggregated fields from the table: "initiative_poll_votes" */
  initiative_poll_votes_aggregate: Initiative_Poll_Votes_Aggregate;
  /** fetch data from the table: "initiative_poll_votes" using primary key columns */
  initiative_poll_votes_by_pk?: Maybe<Initiative_Poll_Votes>;
  /** fetch data from the table: "initiative_polls" */
  initiative_polls: Array<Initiative_Polls>;
  /** fetch aggregated fields from the table: "initiative_polls" */
  initiative_polls_aggregate: Initiative_Polls_Aggregate;
  /** fetch data from the table: "initiative_polls" using primary key columns */
  initiative_polls_by_pk?: Maybe<Initiative_Polls>;
  /** fetch data from the table: "initiative_post_reactions" */
  initiative_post_reactions: Array<Initiative_Post_Reactions>;
  /** fetch aggregated fields from the table: "initiative_post_reactions" */
  initiative_post_reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  /** fetch data from the table: "initiative_post_reactions" using primary key columns */
  initiative_post_reactions_by_pk?: Maybe<Initiative_Post_Reactions>;
  /** An array relationship */
  initiative_posts: Array<Initiative_Posts>;
  /** An aggregate relationship */
  initiative_posts_aggregate: Initiative_Posts_Aggregate;
  /** fetch data from the table: "initiative_posts" using primary key columns */
  initiative_posts_by_pk?: Maybe<Initiative_Posts>;
  /** An array relationship */
  initiative_projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  initiative_projects_aggregate: Initiative_Projects_Aggregate;
  /** fetch data from the table: "initiative_projects" using primary key columns */
  initiative_projects_by_pk?: Maybe<Initiative_Projects>;
  /** An array relationship */
  initiative_tags: Array<Initiative_Tags>;
  /** An aggregate relationship */
  initiative_tags_aggregate: Initiative_Tags_Aggregate;
  /** fetch data from the table: "initiative_tags" using primary key columns */
  initiative_tags_by_pk?: Maybe<Initiative_Tags>;
  /** fetch data from the table: "initiative_tasks" */
  initiative_tasks: Array<Initiative_Tasks>;
  /** fetch aggregated fields from the table: "initiative_tasks" */
  initiative_tasks_aggregate: Initiative_Tasks_Aggregate;
  /** fetch data from the table: "initiative_tasks" using primary key columns */
  initiative_tasks_by_pk?: Maybe<Initiative_Tasks>;
  /** An array relationship */
  initiative_visits: Array<Initiative_Visits>;
  /** An aggregate relationship */
  initiative_visits_aggregate: Initiative_Visits_Aggregate;
  /** fetch data from the table: "initiative_visits" using primary key columns */
  initiative_visits_by_pk?: Maybe<Initiative_Visits>;
  /** An array relationship */
  initiative_volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  initiative_volunteers_aggregate: Initiative_Volunteers_Aggregate;
  /** fetch data from the table: "initiative_volunteers" using primary key columns */
  initiative_volunteers_by_pk?: Maybe<Initiative_Volunteers>;
  /** fetch data from the table: "initiatives" */
  initiatives: Array<Initiatives>;
  /** fetch aggregated fields from the table: "initiatives" */
  initiatives_aggregate: Initiatives_Aggregate;
  /** fetch data from the table: "initiatives" using primary key columns */
  initiatives_by_pk?: Maybe<Initiatives>;
  /** execute function "initiatives_nearby" which returns "initiatives" */
  initiatives_nearby: Array<Initiatives>;
  /** execute function "initiatives_nearby" and query aggregates on result of table type "initiatives" */
  initiatives_nearby_aggregate: Initiatives_Aggregate;
  /** fetch data from the table: "initiatives_view" */
  initiatives_view: Array<Initiatives_View>;
  /** fetch aggregated fields from the table: "initiatives_view" */
  initiatives_view_aggregate: Initiatives_View_Aggregate;
  /** fetch data from the table: "map_entries" */
  map_entries: Array<Map_Entries>;
  /** fetch aggregated fields from the table: "map_entries" */
  map_entries_aggregate: Map_Entries_Aggregate;
  /** An array relationship */
  org_members: Array<Org_Members>;
  /** An aggregate relationship */
  org_members_aggregate: Org_Members_Aggregate;
  /** fetch data from the table: "org_members" using primary key columns */
  org_members_by_pk?: Maybe<Org_Members>;
  /** An array relationship */
  org_projects: Array<Org_Projects>;
  /** An aggregate relationship */
  org_projects_aggregate: Org_Projects_Aggregate;
  /** fetch data from the table: "org_projects" using primary key columns */
  org_projects_by_pk?: Maybe<Org_Projects>;
  /** An array relationship */
  org_tags: Array<Org_Tags>;
  /** An aggregate relationship */
  org_tags_aggregate: Org_Tags_Aggregate;
  /** fetch data from the table: "org_tags" using primary key columns */
  org_tags_by_pk?: Maybe<Org_Tags>;
  /** fetch data from the table: "org_visits" */
  org_visits: Array<Org_Visits>;
  /** fetch aggregated fields from the table: "org_visits" */
  org_visits_aggregate: Org_Visits_Aggregate;
  /** fetch data from the table: "orgs" */
  orgs: Array<Orgs>;
  /** fetch aggregated fields from the table: "orgs" */
  orgs_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs" using primary key columns */
  orgs_by_pk?: Maybe<Orgs>;
  /** execute function "orgs_nearby" which returns "orgs" */
  orgs_nearby: Array<Orgs>;
  /** execute function "orgs_nearby" and query aggregates on result of table type "orgs" */
  orgs_nearby_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs_view" */
  orgs_view: Array<Orgs_View>;
  /** fetch aggregated fields from the table: "orgs_view" */
  orgs_view_aggregate: Orgs_View_Aggregate;
  /** fetch data from the table: "post_types" */
  post_types: Array<Post_Types>;
  /** fetch aggregated fields from the table: "post_types" */
  post_types_aggregate: Post_Types_Aggregate;
  /** fetch data from the table: "post_types" using primary key columns */
  post_types_by_pk?: Maybe<Post_Types>;
  /** fetch data from the table: "reactions" */
  reactions: Array<Reactions>;
  /** fetch aggregated fields from the table: "reactions" */
  reactions_aggregate: Reactions_Aggregate;
  /** fetch data from the table: "reactions" using primary key columns */
  reactions_by_pk?: Maybe<Reactions>;
  /** fetch data from the table: "spatial_ref_sys" */
  spatial_ref_sys: Array<Spatial_Ref_Sys>;
  /** fetch aggregated fields from the table: "spatial_ref_sys" */
  spatial_ref_sys_aggregate: Spatial_Ref_Sys_Aggregate;
  /** fetch data from the table: "spatial_ref_sys" using primary key columns */
  spatial_ref_sys_by_pk?: Maybe<Spatial_Ref_Sys>;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "task_statuses" */
  task_statuses: Array<Task_Statuses>;
  /** fetch aggregated fields from the table: "task_statuses" */
  task_statuses_aggregate: Task_Statuses_Aggregate;
  /** fetch data from the table: "task_statuses" using primary key columns */
  task_statuses_by_pk?: Maybe<Task_Statuses>;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
  /** fetch data from the table: "tenders" using primary key columns */
  tenders_by_pk?: Maybe<Tenders>;
  /** fetch data from the table: "user_settings" */
  user_settings: Array<User_Settings>;
  /** fetch aggregated fields from the table: "user_settings" */
  user_settings_aggregate: User_Settings_Aggregate;
  /** fetch data from the table: "user_settings" using primary key columns */
  user_settings_by_pk?: Maybe<User_Settings>;
  /** fetch data from the table: "user_subscriptions" */
  user_subscriptions: Array<User_Subscriptions>;
  /** fetch aggregated fields from the table: "user_subscriptions" */
  user_subscriptions_aggregate: User_Subscriptions_Aggregate;
  /** fetch data from the table: "user_subscriptions" using primary key columns */
  user_subscriptions_by_pk?: Maybe<User_Subscriptions>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
};


export type Query_RootAuth_Account_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


export type Query_RootAuth_Account_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


export type Query_RootAuth_Account_Providers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAuth_Account_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


export type Query_RootAuth_Account_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


export type Query_RootAuth_Account_Roles_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAuth_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};


export type Query_RootAuth_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};


export type Query_RootAuth_Accounts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootAuth_MigrationsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Migrations_Order_By>>;
  where?: InputMaybe<Auth_Migrations_Bool_Exp>;
};


export type Query_RootAuth_Migrations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Migrations_Order_By>>;
  where?: InputMaybe<Auth_Migrations_Bool_Exp>;
};


export type Query_RootAuth_Migrations_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootAuth_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Providers_Order_By>>;
  where?: InputMaybe<Auth_Providers_Bool_Exp>;
};


export type Query_RootAuth_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Providers_Order_By>>;
  where?: InputMaybe<Auth_Providers_Bool_Exp>;
};


export type Query_RootAuth_Providers_By_PkArgs = {
  provider: Scalars['String'];
};


export type Query_RootAuth_Refresh_TokensArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};


export type Query_RootAuth_Refresh_Tokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};


export type Query_RootAuth_Refresh_Tokens_By_PkArgs = {
  refresh_token: Scalars['uuid'];
};


export type Query_RootAuth_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Roles_Order_By>>;
  where?: InputMaybe<Auth_Roles_Bool_Exp>;
};


export type Query_RootAuth_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Roles_Order_By>>;
  where?: InputMaybe<Auth_Roles_Bool_Exp>;
};


export type Query_RootAuth_Roles_By_PkArgs = {
  role: Scalars['String'];
};


export type Query_RootEntriesArgs = {
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Query_RootEntries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Query_RootEntries_NearbyArgs = {
  args: Entries_Nearby_Args;
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Query_RootEntries_Nearby_AggregateArgs = {
  args: Entries_Nearby_Args;
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Query_RootEntry_MembersArgs = {
  distinct_on?: InputMaybe<Array<Entry_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Members_Order_By>>;
  where?: InputMaybe<Entry_Members_Bool_Exp>;
};


export type Query_RootEntry_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entry_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Members_Order_By>>;
  where?: InputMaybe<Entry_Members_Bool_Exp>;
};


export type Query_RootEntry_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Entry_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Visits_Order_By>>;
  where?: InputMaybe<Entry_Visits_Bool_Exp>;
};


export type Query_RootEntry_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entry_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Visits_Order_By>>;
  where?: InputMaybe<Entry_Visits_Bool_Exp>;
};


export type Query_RootFile_TypesArgs = {
  distinct_on?: InputMaybe<Array<File_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<File_Types_Order_By>>;
  where?: InputMaybe<File_Types_Bool_Exp>;
};


export type Query_RootFile_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<File_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<File_Types_Order_By>>;
  where?: InputMaybe<File_Types_Bool_Exp>;
};


export type Query_RootFile_Types_By_PkArgs = {
  type: Scalars['String'];
};


export type Query_RootFilesArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


export type Query_RootFiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


export type Query_RootFiles_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootGeography_ColumnsArgs = {
  distinct_on?: InputMaybe<Array<Geography_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geography_Columns_Order_By>>;
  where?: InputMaybe<Geography_Columns_Bool_Exp>;
};


export type Query_RootGeography_Columns_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Geography_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geography_Columns_Order_By>>;
  where?: InputMaybe<Geography_Columns_Bool_Exp>;
};


export type Query_RootGeometry_ColumnsArgs = {
  distinct_on?: InputMaybe<Array<Geometry_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geometry_Columns_Order_By>>;
  where?: InputMaybe<Geometry_Columns_Bool_Exp>;
};


export type Query_RootGeometry_Columns_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Geometry_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geometry_Columns_Order_By>>;
  where?: InputMaybe<Geometry_Columns_Bool_Exp>;
};


export type Query_RootI18nArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};


export type Query_RootI18n_AggregateArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};


export type Query_RootI18n_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootI18n_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<I18n_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Categories_Order_By>>;
  where?: InputMaybe<I18n_Categories_Bool_Exp>;
};


export type Query_RootI18n_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<I18n_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Categories_Order_By>>;
  where?: InputMaybe<I18n_Categories_Bool_Exp>;
};


export type Query_RootI18n_Categories_By_PkArgs = {
  category: Scalars['String'];
};


export type Query_RootInitiative_Comment_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


export type Query_RootInitiative_Comment_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


export type Query_RootInitiative_Comment_Reactions_By_PkArgs = {
  comment_id: Scalars['Int'];
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


export type Query_RootInitiative_CommentsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


export type Query_RootInitiative_Comments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


export type Query_RootInitiative_Comments_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['Int'];
};


export type Query_RootInitiative_DonationsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


export type Query_RootInitiative_Donations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


export type Query_RootInitiative_Donations_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_EditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


export type Query_RootInitiative_Edits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


export type Query_RootInitiative_Edits_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_ExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


export type Query_RootInitiative_Expenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


export type Query_RootInitiative_Expenses_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_InfoArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


export type Query_RootInitiative_Info_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


export type Query_RootInitiative_Info_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_MembersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


export type Query_RootInitiative_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


export type Query_RootInitiative_Members_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_Poll_VotesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


export type Query_RootInitiative_Poll_Votes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


export type Query_RootInitiative_Poll_Votes_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  poll_id: Scalars['Int'];
};


export type Query_RootInitiative_PollsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


export type Query_RootInitiative_Polls_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


export type Query_RootInitiative_Polls_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_Post_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


export type Query_RootInitiative_Post_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


export type Query_RootInitiative_Post_Reactions_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


export type Query_RootInitiative_PostsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


export type Query_RootInitiative_Posts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


export type Query_RootInitiative_Posts_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


export type Query_RootInitiative_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


export type Query_RootInitiative_Projects_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_TagsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


export type Query_RootInitiative_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


export type Query_RootInitiative_Tags_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_TasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


export type Query_RootInitiative_Tasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


export type Query_RootInitiative_Tasks_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


export type Query_RootInitiative_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


export type Query_RootInitiative_Visits_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiative_VolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


export type Query_RootInitiative_Volunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


export type Query_RootInitiative_Volunteers_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Query_RootInitiativesArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Query_RootInitiatives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Query_RootInitiatives_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootInitiatives_NearbyArgs = {
  args: Initiatives_Nearby_Args;
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Query_RootInitiatives_Nearby_AggregateArgs = {
  args: Initiatives_Nearby_Args;
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Query_RootInitiatives_ViewArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_View_Order_By>>;
  where?: InputMaybe<Initiatives_View_Bool_Exp>;
};


export type Query_RootInitiatives_View_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_View_Order_By>>;
  where?: InputMaybe<Initiatives_View_Bool_Exp>;
};


export type Query_RootMap_EntriesArgs = {
  distinct_on?: InputMaybe<Array<Map_Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Map_Entries_Order_By>>;
  where?: InputMaybe<Map_Entries_Bool_Exp>;
};


export type Query_RootMap_Entries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Map_Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Map_Entries_Order_By>>;
  where?: InputMaybe<Map_Entries_Bool_Exp>;
};


export type Query_RootOrg_MembersArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


export type Query_RootOrg_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


export type Query_RootOrg_Members_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootOrg_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


export type Query_RootOrg_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


export type Query_RootOrg_Projects_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootOrg_TagsArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


export type Query_RootOrg_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


export type Query_RootOrg_Tags_By_PkArgs = {
  id: Scalars['Int'];
};


export type Query_RootOrg_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Org_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Visits_Order_By>>;
  where?: InputMaybe<Org_Visits_Bool_Exp>;
};


export type Query_RootOrg_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Visits_Order_By>>;
  where?: InputMaybe<Org_Visits_Bool_Exp>;
};


export type Query_RootOrgsArgs = {
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Query_RootOrgs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Query_RootOrgs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Query_RootOrgs_NearbyArgs = {
  args: Orgs_Nearby_Args;
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Query_RootOrgs_Nearby_AggregateArgs = {
  args: Orgs_Nearby_Args;
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Query_RootOrgs_ViewArgs = {
  distinct_on?: InputMaybe<Array<Orgs_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_View_Order_By>>;
  where?: InputMaybe<Orgs_View_Bool_Exp>;
};


export type Query_RootOrgs_View_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Orgs_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_View_Order_By>>;
  where?: InputMaybe<Orgs_View_Bool_Exp>;
};


export type Query_RootPost_TypesArgs = {
  distinct_on?: InputMaybe<Array<Post_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Post_Types_Order_By>>;
  where?: InputMaybe<Post_Types_Bool_Exp>;
};


export type Query_RootPost_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Post_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Post_Types_Order_By>>;
  where?: InputMaybe<Post_Types_Bool_Exp>;
};


export type Query_RootPost_Types_By_PkArgs = {
  type: Scalars['String'];
};


export type Query_RootReactionsArgs = {
  distinct_on?: InputMaybe<Array<Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Reactions_Order_By>>;
  where?: InputMaybe<Reactions_Bool_Exp>;
};


export type Query_RootReactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Reactions_Order_By>>;
  where?: InputMaybe<Reactions_Bool_Exp>;
};


export type Query_RootReactions_By_PkArgs = {
  type: Scalars['String'];
};


export type Query_RootSpatial_Ref_SysArgs = {
  distinct_on?: InputMaybe<Array<Spatial_Ref_Sys_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Spatial_Ref_Sys_Order_By>>;
  where?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
};


export type Query_RootSpatial_Ref_Sys_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Spatial_Ref_Sys_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Spatial_Ref_Sys_Order_By>>;
  where?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
};


export type Query_RootSpatial_Ref_Sys_By_PkArgs = {
  srid: Scalars['Int'];
};


export type Query_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Query_RootTags_By_PkArgs = {
  tag: Scalars['String'];
};


export type Query_RootTask_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Task_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Task_Statuses_Order_By>>;
  where?: InputMaybe<Task_Statuses_Bool_Exp>;
};


export type Query_RootTask_Statuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Task_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Task_Statuses_Order_By>>;
  where?: InputMaybe<Task_Statuses_Bool_Exp>;
};


export type Query_RootTask_Statuses_By_PkArgs = {
  status: Scalars['String'];
};


export type Query_RootTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


export type Query_RootTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


export type Query_RootTenders_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Query_RootUser_SettingsArgs = {
  distinct_on?: InputMaybe<Array<User_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Settings_Order_By>>;
  where?: InputMaybe<User_Settings_Bool_Exp>;
};


export type Query_RootUser_Settings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Settings_Order_By>>;
  where?: InputMaybe<User_Settings_Bool_Exp>;
};


export type Query_RootUser_Settings_By_PkArgs = {
  user_id: Scalars['uuid'];
};


export type Query_RootUser_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


export type Query_RootUser_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


export type Query_RootUser_Subscriptions_By_PkArgs = {
  id: Scalars['String'];
};


export type Query_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Query_RootUsers_By_PkArgs = {
  id: Scalars['uuid'];
};

/** columns and relationships of "reactions" */
export type Reactions = {
  /** fetch data from the table: "initiative_comment_reactions" */
  initiative_comment_reactions: Array<Initiative_Comment_Reactions>;
  /** fetch aggregated fields from the table: "initiative_comment_reactions" */
  initiative_comment_reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  /** fetch data from the table: "initiative_post_reactions" */
  initiative_post_reactions: Array<Initiative_Post_Reactions>;
  /** fetch aggregated fields from the table: "initiative_post_reactions" */
  initiative_post_reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  type: Scalars['String'];
};


/** columns and relationships of "reactions" */
export type ReactionsInitiative_Comment_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


/** columns and relationships of "reactions" */
export type ReactionsInitiative_Comment_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


/** columns and relationships of "reactions" */
export type ReactionsInitiative_Post_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


/** columns and relationships of "reactions" */
export type ReactionsInitiative_Post_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};

/** aggregated selection of "reactions" */
export type Reactions_Aggregate = {
  aggregate?: Maybe<Reactions_Aggregate_Fields>;
  nodes: Array<Reactions>;
};

/** aggregate fields of "reactions" */
export type Reactions_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Reactions_Max_Fields>;
  min?: Maybe<Reactions_Min_Fields>;
};


/** aggregate fields of "reactions" */
export type Reactions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Reactions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "reactions". All fields are combined with a logical 'AND'. */
export type Reactions_Bool_Exp = {
  _and?: InputMaybe<Array<Reactions_Bool_Exp>>;
  _not?: InputMaybe<Reactions_Bool_Exp>;
  _or?: InputMaybe<Array<Reactions_Bool_Exp>>;
  initiative_comment_reactions?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
  initiative_post_reactions?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "reactions" */
export enum Reactions_Constraint {
  /** unique or primary key constraint */
  ReactionsPkey = 'reactions_pkey'
}

export enum Reactions_Enum {
  Dislike = 'dislike',
  Like = 'like'
}

/** Boolean expression to compare columns of type "reactions_enum". All fields are combined with logical 'AND'. */
export type Reactions_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Reactions_Enum>;
  _in?: InputMaybe<Array<Reactions_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Reactions_Enum>;
  _nin?: InputMaybe<Array<Reactions_Enum>>;
};

/** input type for inserting data into table "reactions" */
export type Reactions_Insert_Input = {
  initiative_comment_reactions?: InputMaybe<Initiative_Comment_Reactions_Arr_Rel_Insert_Input>;
  initiative_post_reactions?: InputMaybe<Initiative_Post_Reactions_Arr_Rel_Insert_Input>;
  type?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Reactions_Max_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Reactions_Min_Fields = {
  type?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "reactions" */
export type Reactions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Reactions>;
};

/** on_conflict condition type for table "reactions" */
export type Reactions_On_Conflict = {
  constraint: Reactions_Constraint;
  update_columns?: Array<Reactions_Update_Column>;
  where?: InputMaybe<Reactions_Bool_Exp>;
};

/** Ordering options when selecting data from "reactions". */
export type Reactions_Order_By = {
  initiative_comment_reactions_aggregate?: InputMaybe<Initiative_Comment_Reactions_Aggregate_Order_By>;
  initiative_post_reactions_aggregate?: InputMaybe<Initiative_Post_Reactions_Aggregate_Order_By>;
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reactions */
export type Reactions_Pk_Columns_Input = {
  type: Scalars['String'];
};

/** select columns of table "reactions" */
export enum Reactions_Select_Column {
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "reactions" */
export type Reactions_Set_Input = {
  type?: InputMaybe<Scalars['String']>;
};

/** update columns of table "reactions" */
export enum Reactions_Update_Column {
  /** column name */
  Type = 'type'
}

/** columns and relationships of "spatial_ref_sys" */
export type Spatial_Ref_Sys = {
  auth_name?: Maybe<Scalars['String']>;
  auth_srid?: Maybe<Scalars['Int']>;
  proj4text?: Maybe<Scalars['String']>;
  srid: Scalars['Int'];
  srtext?: Maybe<Scalars['String']>;
};

/** aggregated selection of "spatial_ref_sys" */
export type Spatial_Ref_Sys_Aggregate = {
  aggregate?: Maybe<Spatial_Ref_Sys_Aggregate_Fields>;
  nodes: Array<Spatial_Ref_Sys>;
};

/** aggregate fields of "spatial_ref_sys" */
export type Spatial_Ref_Sys_Aggregate_Fields = {
  avg?: Maybe<Spatial_Ref_Sys_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Spatial_Ref_Sys_Max_Fields>;
  min?: Maybe<Spatial_Ref_Sys_Min_Fields>;
  stddev?: Maybe<Spatial_Ref_Sys_Stddev_Fields>;
  stddev_pop?: Maybe<Spatial_Ref_Sys_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Spatial_Ref_Sys_Stddev_Samp_Fields>;
  sum?: Maybe<Spatial_Ref_Sys_Sum_Fields>;
  var_pop?: Maybe<Spatial_Ref_Sys_Var_Pop_Fields>;
  var_samp?: Maybe<Spatial_Ref_Sys_Var_Samp_Fields>;
  variance?: Maybe<Spatial_Ref_Sys_Variance_Fields>;
};


/** aggregate fields of "spatial_ref_sys" */
export type Spatial_Ref_Sys_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Spatial_Ref_Sys_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** aggregate avg on columns */
export type Spatial_Ref_Sys_Avg_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** Boolean expression to filter rows from the table "spatial_ref_sys". All fields are combined with a logical 'AND'. */
export type Spatial_Ref_Sys_Bool_Exp = {
  _and?: InputMaybe<Array<Spatial_Ref_Sys_Bool_Exp>>;
  _not?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
  _or?: InputMaybe<Array<Spatial_Ref_Sys_Bool_Exp>>;
  auth_name?: InputMaybe<String_Comparison_Exp>;
  auth_srid?: InputMaybe<Int_Comparison_Exp>;
  proj4text?: InputMaybe<String_Comparison_Exp>;
  srid?: InputMaybe<Int_Comparison_Exp>;
  srtext?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "spatial_ref_sys" */
export enum Spatial_Ref_Sys_Constraint {
  /** unique or primary key constraint */
  SpatialRefSysPkey = 'spatial_ref_sys_pkey'
}

/** input type for incrementing numeric columns in table "spatial_ref_sys" */
export type Spatial_Ref_Sys_Inc_Input = {
  auth_srid?: InputMaybe<Scalars['Int']>;
  srid?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "spatial_ref_sys" */
export type Spatial_Ref_Sys_Insert_Input = {
  auth_name?: InputMaybe<Scalars['String']>;
  auth_srid?: InputMaybe<Scalars['Int']>;
  proj4text?: InputMaybe<Scalars['String']>;
  srid?: InputMaybe<Scalars['Int']>;
  srtext?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Spatial_Ref_Sys_Max_Fields = {
  auth_name?: Maybe<Scalars['String']>;
  auth_srid?: Maybe<Scalars['Int']>;
  proj4text?: Maybe<Scalars['String']>;
  srid?: Maybe<Scalars['Int']>;
  srtext?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Spatial_Ref_Sys_Min_Fields = {
  auth_name?: Maybe<Scalars['String']>;
  auth_srid?: Maybe<Scalars['Int']>;
  proj4text?: Maybe<Scalars['String']>;
  srid?: Maybe<Scalars['Int']>;
  srtext?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "spatial_ref_sys" */
export type Spatial_Ref_Sys_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Spatial_Ref_Sys>;
};

/** on_conflict condition type for table "spatial_ref_sys" */
export type Spatial_Ref_Sys_On_Conflict = {
  constraint: Spatial_Ref_Sys_Constraint;
  update_columns?: Array<Spatial_Ref_Sys_Update_Column>;
  where?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
};

/** Ordering options when selecting data from "spatial_ref_sys". */
export type Spatial_Ref_Sys_Order_By = {
  auth_name?: InputMaybe<Order_By>;
  auth_srid?: InputMaybe<Order_By>;
  proj4text?: InputMaybe<Order_By>;
  srid?: InputMaybe<Order_By>;
  srtext?: InputMaybe<Order_By>;
};

/** primary key columns input for table: spatial_ref_sys */
export type Spatial_Ref_Sys_Pk_Columns_Input = {
  srid: Scalars['Int'];
};

/** select columns of table "spatial_ref_sys" */
export enum Spatial_Ref_Sys_Select_Column {
  /** column name */
  AuthName = 'auth_name',
  /** column name */
  AuthSrid = 'auth_srid',
  /** column name */
  Proj4text = 'proj4text',
  /** column name */
  Srid = 'srid',
  /** column name */
  Srtext = 'srtext'
}

/** input type for updating data in table "spatial_ref_sys" */
export type Spatial_Ref_Sys_Set_Input = {
  auth_name?: InputMaybe<Scalars['String']>;
  auth_srid?: InputMaybe<Scalars['Int']>;
  proj4text?: InputMaybe<Scalars['String']>;
  srid?: InputMaybe<Scalars['Int']>;
  srtext?: InputMaybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Spatial_Ref_Sys_Stddev_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_pop on columns */
export type Spatial_Ref_Sys_Stddev_Pop_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate stddev_samp on columns */
export type Spatial_Ref_Sys_Stddev_Samp_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate sum on columns */
export type Spatial_Ref_Sys_Sum_Fields = {
  auth_srid?: Maybe<Scalars['Int']>;
  srid?: Maybe<Scalars['Int']>;
};

/** update columns of table "spatial_ref_sys" */
export enum Spatial_Ref_Sys_Update_Column {
  /** column name */
  AuthName = 'auth_name',
  /** column name */
  AuthSrid = 'auth_srid',
  /** column name */
  Proj4text = 'proj4text',
  /** column name */
  Srid = 'srid',
  /** column name */
  Srtext = 'srtext'
}

/** aggregate var_pop on columns */
export type Spatial_Ref_Sys_Var_Pop_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate var_samp on columns */
export type Spatial_Ref_Sys_Var_Samp_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

/** aggregate variance on columns */
export type Spatial_Ref_Sys_Variance_Fields = {
  auth_srid?: Maybe<Scalars['Float']>;
  srid?: Maybe<Scalars['Float']>;
};

export type St_D_Within_Geography_Input = {
  distance: Scalars['Float'];
  from: Scalars['geography'];
  use_spheroid?: InputMaybe<Scalars['Boolean']>;
};

export type St_D_Within_Input = {
  distance: Scalars['Float'];
  from: Scalars['geometry'];
};

export type Subscription_Root = {
  /** fetch data from the table: "auth.account_providers" */
  auth_account_providers: Array<Auth_Account_Providers>;
  /** fetch aggregated fields from the table: "auth.account_providers" */
  auth_account_providers_aggregate: Auth_Account_Providers_Aggregate;
  /** fetch data from the table: "auth.account_providers" using primary key columns */
  auth_account_providers_by_pk?: Maybe<Auth_Account_Providers>;
  /** fetch data from the table: "auth.account_roles" */
  auth_account_roles: Array<Auth_Account_Roles>;
  /** fetch aggregated fields from the table: "auth.account_roles" */
  auth_account_roles_aggregate: Auth_Account_Roles_Aggregate;
  /** fetch data from the table: "auth.account_roles" using primary key columns */
  auth_account_roles_by_pk?: Maybe<Auth_Account_Roles>;
  /** fetch data from the table: "auth.accounts" */
  auth_accounts: Array<Auth_Accounts>;
  /** fetch aggregated fields from the table: "auth.accounts" */
  auth_accounts_aggregate: Auth_Accounts_Aggregate;
  /** fetch data from the table: "auth.accounts" using primary key columns */
  auth_accounts_by_pk?: Maybe<Auth_Accounts>;
  /** fetch data from the table: "auth.migrations" */
  auth_migrations: Array<Auth_Migrations>;
  /** fetch aggregated fields from the table: "auth.migrations" */
  auth_migrations_aggregate: Auth_Migrations_Aggregate;
  /** fetch data from the table: "auth.migrations" using primary key columns */
  auth_migrations_by_pk?: Maybe<Auth_Migrations>;
  /** fetch data from the table: "auth.providers" */
  auth_providers: Array<Auth_Providers>;
  /** fetch aggregated fields from the table: "auth.providers" */
  auth_providers_aggregate: Auth_Providers_Aggregate;
  /** fetch data from the table: "auth.providers" using primary key columns */
  auth_providers_by_pk?: Maybe<Auth_Providers>;
  /** fetch data from the table: "auth.refresh_tokens" */
  auth_refresh_tokens: Array<Auth_Refresh_Tokens>;
  /** fetch aggregated fields from the table: "auth.refresh_tokens" */
  auth_refresh_tokens_aggregate: Auth_Refresh_Tokens_Aggregate;
  /** fetch data from the table: "auth.refresh_tokens" using primary key columns */
  auth_refresh_tokens_by_pk?: Maybe<Auth_Refresh_Tokens>;
  /** fetch data from the table: "auth.roles" */
  auth_roles: Array<Auth_Roles>;
  /** fetch aggregated fields from the table: "auth.roles" */
  auth_roles_aggregate: Auth_Roles_Aggregate;
  /** fetch data from the table: "auth.roles" using primary key columns */
  auth_roles_by_pk?: Maybe<Auth_Roles>;
  /** fetch data from the table: "entries" */
  entries: Array<Entries>;
  /** fetch aggregated fields from the table: "entries" */
  entries_aggregate: Entries_Aggregate;
  /** execute function "entries_nearby" which returns "entries" */
  entries_nearby: Array<Entries>;
  /** execute function "entries_nearby" and query aggregates on result of table type "entries" */
  entries_nearby_aggregate: Entries_Aggregate;
  /** fetch data from the table: "entry_members" */
  entry_members: Array<Entry_Members>;
  /** fetch aggregated fields from the table: "entry_members" */
  entry_members_aggregate: Entry_Members_Aggregate;
  /** fetch data from the table: "entry_visits" */
  entry_visits: Array<Entry_Visits>;
  /** fetch aggregated fields from the table: "entry_visits" */
  entry_visits_aggregate: Entry_Visits_Aggregate;
  /** fetch data from the table: "file_types" */
  file_types: Array<File_Types>;
  /** fetch aggregated fields from the table: "file_types" */
  file_types_aggregate: File_Types_Aggregate;
  /** fetch data from the table: "file_types" using primary key columns */
  file_types_by_pk?: Maybe<File_Types>;
  /** An array relationship */
  files: Array<Files>;
  /** An aggregate relationship */
  files_aggregate: Files_Aggregate;
  /** fetch data from the table: "files" using primary key columns */
  files_by_pk?: Maybe<Files>;
  /** fetch data from the table: "geography_columns" */
  geography_columns: Array<Geography_Columns>;
  /** fetch aggregated fields from the table: "geography_columns" */
  geography_columns_aggregate: Geography_Columns_Aggregate;
  /** fetch data from the table: "geometry_columns" */
  geometry_columns: Array<Geometry_Columns>;
  /** fetch aggregated fields from the table: "geometry_columns" */
  geometry_columns_aggregate: Geometry_Columns_Aggregate;
  /** fetch data from the table: "i18n" */
  i18n: Array<I18n>;
  /** fetch aggregated fields from the table: "i18n" */
  i18n_aggregate: I18n_Aggregate;
  /** fetch data from the table: "i18n" using primary key columns */
  i18n_by_pk?: Maybe<I18n>;
  /** fetch data from the table: "i18n_categories" */
  i18n_categories: Array<I18n_Categories>;
  /** fetch aggregated fields from the table: "i18n_categories" */
  i18n_categories_aggregate: I18n_Categories_Aggregate;
  /** fetch data from the table: "i18n_categories" using primary key columns */
  i18n_categories_by_pk?: Maybe<I18n_Categories>;
  /** fetch data from the table: "initiative_comment_reactions" */
  initiative_comment_reactions: Array<Initiative_Comment_Reactions>;
  /** fetch aggregated fields from the table: "initiative_comment_reactions" */
  initiative_comment_reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  /** fetch data from the table: "initiative_comment_reactions" using primary key columns */
  initiative_comment_reactions_by_pk?: Maybe<Initiative_Comment_Reactions>;
  /** fetch data from the table: "initiative_comments" */
  initiative_comments: Array<Initiative_Comments>;
  /** fetch aggregated fields from the table: "initiative_comments" */
  initiative_comments_aggregate: Initiative_Comments_Aggregate;
  /** fetch data from the table: "initiative_comments" using primary key columns */
  initiative_comments_by_pk?: Maybe<Initiative_Comments>;
  /** fetch data from the table: "initiative_donations" */
  initiative_donations: Array<Initiative_Donations>;
  /** fetch aggregated fields from the table: "initiative_donations" */
  initiative_donations_aggregate: Initiative_Donations_Aggregate;
  /** fetch data from the table: "initiative_donations" using primary key columns */
  initiative_donations_by_pk?: Maybe<Initiative_Donations>;
  /** fetch data from the table: "initiative_edits" */
  initiative_edits: Array<Initiative_Edits>;
  /** fetch aggregated fields from the table: "initiative_edits" */
  initiative_edits_aggregate: Initiative_Edits_Aggregate;
  /** fetch data from the table: "initiative_edits" using primary key columns */
  initiative_edits_by_pk?: Maybe<Initiative_Edits>;
  /** fetch data from the table: "initiative_expenses" */
  initiative_expenses: Array<Initiative_Expenses>;
  /** fetch aggregated fields from the table: "initiative_expenses" */
  initiative_expenses_aggregate: Initiative_Expenses_Aggregate;
  /** fetch data from the table: "initiative_expenses" using primary key columns */
  initiative_expenses_by_pk?: Maybe<Initiative_Expenses>;
  /** fetch data from the table: "initiative_info" */
  initiative_info: Array<Initiative_Info>;
  /** fetch aggregated fields from the table: "initiative_info" */
  initiative_info_aggregate: Initiative_Info_Aggregate;
  /** fetch data from the table: "initiative_info" using primary key columns */
  initiative_info_by_pk?: Maybe<Initiative_Info>;
  /** An array relationship */
  initiative_members: Array<Initiative_Members>;
  /** An aggregate relationship */
  initiative_members_aggregate: Initiative_Members_Aggregate;
  /** fetch data from the table: "initiative_members" using primary key columns */
  initiative_members_by_pk?: Maybe<Initiative_Members>;
  /** fetch data from the table: "initiative_poll_votes" */
  initiative_poll_votes: Array<Initiative_Poll_Votes>;
  /** fetch aggregated fields from the table: "initiative_poll_votes" */
  initiative_poll_votes_aggregate: Initiative_Poll_Votes_Aggregate;
  /** fetch data from the table: "initiative_poll_votes" using primary key columns */
  initiative_poll_votes_by_pk?: Maybe<Initiative_Poll_Votes>;
  /** fetch data from the table: "initiative_polls" */
  initiative_polls: Array<Initiative_Polls>;
  /** fetch aggregated fields from the table: "initiative_polls" */
  initiative_polls_aggregate: Initiative_Polls_Aggregate;
  /** fetch data from the table: "initiative_polls" using primary key columns */
  initiative_polls_by_pk?: Maybe<Initiative_Polls>;
  /** fetch data from the table: "initiative_post_reactions" */
  initiative_post_reactions: Array<Initiative_Post_Reactions>;
  /** fetch aggregated fields from the table: "initiative_post_reactions" */
  initiative_post_reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  /** fetch data from the table: "initiative_post_reactions" using primary key columns */
  initiative_post_reactions_by_pk?: Maybe<Initiative_Post_Reactions>;
  /** An array relationship */
  initiative_posts: Array<Initiative_Posts>;
  /** An aggregate relationship */
  initiative_posts_aggregate: Initiative_Posts_Aggregate;
  /** fetch data from the table: "initiative_posts" using primary key columns */
  initiative_posts_by_pk?: Maybe<Initiative_Posts>;
  /** An array relationship */
  initiative_projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  initiative_projects_aggregate: Initiative_Projects_Aggregate;
  /** fetch data from the table: "initiative_projects" using primary key columns */
  initiative_projects_by_pk?: Maybe<Initiative_Projects>;
  /** An array relationship */
  initiative_tags: Array<Initiative_Tags>;
  /** An aggregate relationship */
  initiative_tags_aggregate: Initiative_Tags_Aggregate;
  /** fetch data from the table: "initiative_tags" using primary key columns */
  initiative_tags_by_pk?: Maybe<Initiative_Tags>;
  /** fetch data from the table: "initiative_tasks" */
  initiative_tasks: Array<Initiative_Tasks>;
  /** fetch aggregated fields from the table: "initiative_tasks" */
  initiative_tasks_aggregate: Initiative_Tasks_Aggregate;
  /** fetch data from the table: "initiative_tasks" using primary key columns */
  initiative_tasks_by_pk?: Maybe<Initiative_Tasks>;
  /** An array relationship */
  initiative_visits: Array<Initiative_Visits>;
  /** An aggregate relationship */
  initiative_visits_aggregate: Initiative_Visits_Aggregate;
  /** fetch data from the table: "initiative_visits" using primary key columns */
  initiative_visits_by_pk?: Maybe<Initiative_Visits>;
  /** An array relationship */
  initiative_volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  initiative_volunteers_aggregate: Initiative_Volunteers_Aggregate;
  /** fetch data from the table: "initiative_volunteers" using primary key columns */
  initiative_volunteers_by_pk?: Maybe<Initiative_Volunteers>;
  /** fetch data from the table: "initiatives" */
  initiatives: Array<Initiatives>;
  /** fetch aggregated fields from the table: "initiatives" */
  initiatives_aggregate: Initiatives_Aggregate;
  /** fetch data from the table: "initiatives" using primary key columns */
  initiatives_by_pk?: Maybe<Initiatives>;
  /** execute function "initiatives_nearby" which returns "initiatives" */
  initiatives_nearby: Array<Initiatives>;
  /** execute function "initiatives_nearby" and query aggregates on result of table type "initiatives" */
  initiatives_nearby_aggregate: Initiatives_Aggregate;
  /** fetch data from the table: "initiatives_view" */
  initiatives_view: Array<Initiatives_View>;
  /** fetch aggregated fields from the table: "initiatives_view" */
  initiatives_view_aggregate: Initiatives_View_Aggregate;
  /** fetch data from the table: "map_entries" */
  map_entries: Array<Map_Entries>;
  /** fetch aggregated fields from the table: "map_entries" */
  map_entries_aggregate: Map_Entries_Aggregate;
  /** An array relationship */
  org_members: Array<Org_Members>;
  /** An aggregate relationship */
  org_members_aggregate: Org_Members_Aggregate;
  /** fetch data from the table: "org_members" using primary key columns */
  org_members_by_pk?: Maybe<Org_Members>;
  /** An array relationship */
  org_projects: Array<Org_Projects>;
  /** An aggregate relationship */
  org_projects_aggregate: Org_Projects_Aggregate;
  /** fetch data from the table: "org_projects" using primary key columns */
  org_projects_by_pk?: Maybe<Org_Projects>;
  /** An array relationship */
  org_tags: Array<Org_Tags>;
  /** An aggregate relationship */
  org_tags_aggregate: Org_Tags_Aggregate;
  /** fetch data from the table: "org_tags" using primary key columns */
  org_tags_by_pk?: Maybe<Org_Tags>;
  /** fetch data from the table: "org_visits" */
  org_visits: Array<Org_Visits>;
  /** fetch aggregated fields from the table: "org_visits" */
  org_visits_aggregate: Org_Visits_Aggregate;
  /** fetch data from the table: "orgs" */
  orgs: Array<Orgs>;
  /** fetch aggregated fields from the table: "orgs" */
  orgs_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs" using primary key columns */
  orgs_by_pk?: Maybe<Orgs>;
  /** execute function "orgs_nearby" which returns "orgs" */
  orgs_nearby: Array<Orgs>;
  /** execute function "orgs_nearby" and query aggregates on result of table type "orgs" */
  orgs_nearby_aggregate: Orgs_Aggregate;
  /** fetch data from the table: "orgs_view" */
  orgs_view: Array<Orgs_View>;
  /** fetch aggregated fields from the table: "orgs_view" */
  orgs_view_aggregate: Orgs_View_Aggregate;
  /** fetch data from the table: "post_types" */
  post_types: Array<Post_Types>;
  /** fetch aggregated fields from the table: "post_types" */
  post_types_aggregate: Post_Types_Aggregate;
  /** fetch data from the table: "post_types" using primary key columns */
  post_types_by_pk?: Maybe<Post_Types>;
  /** fetch data from the table: "reactions" */
  reactions: Array<Reactions>;
  /** fetch aggregated fields from the table: "reactions" */
  reactions_aggregate: Reactions_Aggregate;
  /** fetch data from the table: "reactions" using primary key columns */
  reactions_by_pk?: Maybe<Reactions>;
  /** fetch data from the table: "spatial_ref_sys" */
  spatial_ref_sys: Array<Spatial_Ref_Sys>;
  /** fetch aggregated fields from the table: "spatial_ref_sys" */
  spatial_ref_sys_aggregate: Spatial_Ref_Sys_Aggregate;
  /** fetch data from the table: "spatial_ref_sys" using primary key columns */
  spatial_ref_sys_by_pk?: Maybe<Spatial_Ref_Sys>;
  /** fetch data from the table: "tags" */
  tags: Array<Tags>;
  /** fetch aggregated fields from the table: "tags" */
  tags_aggregate: Tags_Aggregate;
  /** fetch data from the table: "tags" using primary key columns */
  tags_by_pk?: Maybe<Tags>;
  /** fetch data from the table: "task_statuses" */
  task_statuses: Array<Task_Statuses>;
  /** fetch aggregated fields from the table: "task_statuses" */
  task_statuses_aggregate: Task_Statuses_Aggregate;
  /** fetch data from the table: "task_statuses" using primary key columns */
  task_statuses_by_pk?: Maybe<Task_Statuses>;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
  /** fetch data from the table: "tenders" using primary key columns */
  tenders_by_pk?: Maybe<Tenders>;
  /** fetch data from the table: "user_settings" */
  user_settings: Array<User_Settings>;
  /** fetch aggregated fields from the table: "user_settings" */
  user_settings_aggregate: User_Settings_Aggregate;
  /** fetch data from the table: "user_settings" using primary key columns */
  user_settings_by_pk?: Maybe<User_Settings>;
  /** fetch data from the table: "user_subscriptions" */
  user_subscriptions: Array<User_Subscriptions>;
  /** fetch aggregated fields from the table: "user_subscriptions" */
  user_subscriptions_aggregate: User_Subscriptions_Aggregate;
  /** fetch data from the table: "user_subscriptions" using primary key columns */
  user_subscriptions_by_pk?: Maybe<User_Subscriptions>;
  /** fetch data from the table: "users" */
  users: Array<Users>;
  /** fetch aggregated fields from the table: "users" */
  users_aggregate: Users_Aggregate;
  /** fetch data from the table: "users" using primary key columns */
  users_by_pk?: Maybe<Users>;
};


export type Subscription_RootAuth_Account_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


export type Subscription_RootAuth_Account_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Providers_Order_By>>;
  where?: InputMaybe<Auth_Account_Providers_Bool_Exp>;
};


export type Subscription_RootAuth_Account_Providers_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAuth_Account_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


export type Subscription_RootAuth_Account_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Account_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Account_Roles_Order_By>>;
  where?: InputMaybe<Auth_Account_Roles_Bool_Exp>;
};


export type Subscription_RootAuth_Account_Roles_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAuth_AccountsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};


export type Subscription_RootAuth_Accounts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Accounts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Accounts_Order_By>>;
  where?: InputMaybe<Auth_Accounts_Bool_Exp>;
};


export type Subscription_RootAuth_Accounts_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootAuth_MigrationsArgs = {
  distinct_on?: InputMaybe<Array<Auth_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Migrations_Order_By>>;
  where?: InputMaybe<Auth_Migrations_Bool_Exp>;
};


export type Subscription_RootAuth_Migrations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Migrations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Migrations_Order_By>>;
  where?: InputMaybe<Auth_Migrations_Bool_Exp>;
};


export type Subscription_RootAuth_Migrations_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootAuth_ProvidersArgs = {
  distinct_on?: InputMaybe<Array<Auth_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Providers_Order_By>>;
  where?: InputMaybe<Auth_Providers_Bool_Exp>;
};


export type Subscription_RootAuth_Providers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Providers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Providers_Order_By>>;
  where?: InputMaybe<Auth_Providers_Bool_Exp>;
};


export type Subscription_RootAuth_Providers_By_PkArgs = {
  provider: Scalars['String'];
};


export type Subscription_RootAuth_Refresh_TokensArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};


export type Subscription_RootAuth_Refresh_Tokens_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Refresh_Tokens_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Refresh_Tokens_Order_By>>;
  where?: InputMaybe<Auth_Refresh_Tokens_Bool_Exp>;
};


export type Subscription_RootAuth_Refresh_Tokens_By_PkArgs = {
  refresh_token: Scalars['uuid'];
};


export type Subscription_RootAuth_RolesArgs = {
  distinct_on?: InputMaybe<Array<Auth_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Roles_Order_By>>;
  where?: InputMaybe<Auth_Roles_Bool_Exp>;
};


export type Subscription_RootAuth_Roles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Auth_Roles_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Auth_Roles_Order_By>>;
  where?: InputMaybe<Auth_Roles_Bool_Exp>;
};


export type Subscription_RootAuth_Roles_By_PkArgs = {
  role: Scalars['String'];
};


export type Subscription_RootEntriesArgs = {
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Subscription_RootEntries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Subscription_RootEntries_NearbyArgs = {
  args: Entries_Nearby_Args;
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Subscription_RootEntries_Nearby_AggregateArgs = {
  args: Entries_Nearby_Args;
  distinct_on?: InputMaybe<Array<Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entries_Order_By>>;
  where?: InputMaybe<Entries_Bool_Exp>;
};


export type Subscription_RootEntry_MembersArgs = {
  distinct_on?: InputMaybe<Array<Entry_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Members_Order_By>>;
  where?: InputMaybe<Entry_Members_Bool_Exp>;
};


export type Subscription_RootEntry_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entry_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Members_Order_By>>;
  where?: InputMaybe<Entry_Members_Bool_Exp>;
};


export type Subscription_RootEntry_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Entry_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Visits_Order_By>>;
  where?: InputMaybe<Entry_Visits_Bool_Exp>;
};


export type Subscription_RootEntry_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Entry_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Entry_Visits_Order_By>>;
  where?: InputMaybe<Entry_Visits_Bool_Exp>;
};


export type Subscription_RootFile_TypesArgs = {
  distinct_on?: InputMaybe<Array<File_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<File_Types_Order_By>>;
  where?: InputMaybe<File_Types_Bool_Exp>;
};


export type Subscription_RootFile_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<File_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<File_Types_Order_By>>;
  where?: InputMaybe<File_Types_Bool_Exp>;
};


export type Subscription_RootFile_Types_By_PkArgs = {
  type: Scalars['String'];
};


export type Subscription_RootFilesArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


export type Subscription_RootFiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


export type Subscription_RootFiles_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootGeography_ColumnsArgs = {
  distinct_on?: InputMaybe<Array<Geography_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geography_Columns_Order_By>>;
  where?: InputMaybe<Geography_Columns_Bool_Exp>;
};


export type Subscription_RootGeography_Columns_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Geography_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geography_Columns_Order_By>>;
  where?: InputMaybe<Geography_Columns_Bool_Exp>;
};


export type Subscription_RootGeometry_ColumnsArgs = {
  distinct_on?: InputMaybe<Array<Geometry_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geometry_Columns_Order_By>>;
  where?: InputMaybe<Geometry_Columns_Bool_Exp>;
};


export type Subscription_RootGeometry_Columns_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Geometry_Columns_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Geometry_Columns_Order_By>>;
  where?: InputMaybe<Geometry_Columns_Bool_Exp>;
};


export type Subscription_RootI18nArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};


export type Subscription_RootI18n_AggregateArgs = {
  distinct_on?: InputMaybe<Array<I18n_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Order_By>>;
  where?: InputMaybe<I18n_Bool_Exp>;
};


export type Subscription_RootI18n_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootI18n_CategoriesArgs = {
  distinct_on?: InputMaybe<Array<I18n_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Categories_Order_By>>;
  where?: InputMaybe<I18n_Categories_Bool_Exp>;
};


export type Subscription_RootI18n_Categories_AggregateArgs = {
  distinct_on?: InputMaybe<Array<I18n_Categories_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<I18n_Categories_Order_By>>;
  where?: InputMaybe<I18n_Categories_Bool_Exp>;
};


export type Subscription_RootI18n_Categories_By_PkArgs = {
  category: Scalars['String'];
};


export type Subscription_RootInitiative_Comment_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


export type Subscription_RootInitiative_Comment_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


export type Subscription_RootInitiative_Comment_Reactions_By_PkArgs = {
  comment_id: Scalars['Int'];
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


export type Subscription_RootInitiative_CommentsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


export type Subscription_RootInitiative_Comments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


export type Subscription_RootInitiative_Comments_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['Int'];
};


export type Subscription_RootInitiative_DonationsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


export type Subscription_RootInitiative_Donations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


export type Subscription_RootInitiative_Donations_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_EditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


export type Subscription_RootInitiative_Edits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


export type Subscription_RootInitiative_Edits_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_ExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


export type Subscription_RootInitiative_Expenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


export type Subscription_RootInitiative_Expenses_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_InfoArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


export type Subscription_RootInitiative_Info_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


export type Subscription_RootInitiative_Info_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_MembersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


export type Subscription_RootInitiative_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


export type Subscription_RootInitiative_Members_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_Poll_VotesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


export type Subscription_RootInitiative_Poll_Votes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


export type Subscription_RootInitiative_Poll_Votes_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  poll_id: Scalars['Int'];
};


export type Subscription_RootInitiative_PollsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


export type Subscription_RootInitiative_Polls_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Polls_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Polls_Order_By>>;
  where?: InputMaybe<Initiative_Polls_Bool_Exp>;
};


export type Subscription_RootInitiative_Polls_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_Post_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


export type Subscription_RootInitiative_Post_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


export type Subscription_RootInitiative_Post_Reactions_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
  post_id: Scalars['bigint'];
};


export type Subscription_RootInitiative_PostsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


export type Subscription_RootInitiative_Posts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


export type Subscription_RootInitiative_Posts_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


export type Subscription_RootInitiative_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


export type Subscription_RootInitiative_Projects_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_TagsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


export type Subscription_RootInitiative_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


export type Subscription_RootInitiative_Tags_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_TasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


export type Subscription_RootInitiative_Tasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


export type Subscription_RootInitiative_Tasks_By_PkArgs = {
  id: Scalars['Int'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


export type Subscription_RootInitiative_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


export type Subscription_RootInitiative_Visits_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiative_VolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


export type Subscription_RootInitiative_Volunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


export type Subscription_RootInitiative_Volunteers_By_PkArgs = {
  id: Scalars['bigint'];
  initiative_id: Scalars['uuid'];
};


export type Subscription_RootInitiativesArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Subscription_RootInitiatives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Subscription_RootInitiatives_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootInitiatives_NearbyArgs = {
  args: Initiatives_Nearby_Args;
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Subscription_RootInitiatives_Nearby_AggregateArgs = {
  args: Initiatives_Nearby_Args;
  distinct_on?: InputMaybe<Array<Initiatives_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_Order_By>>;
  where?: InputMaybe<Initiatives_Bool_Exp>;
};


export type Subscription_RootInitiatives_ViewArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_View_Order_By>>;
  where?: InputMaybe<Initiatives_View_Bool_Exp>;
};


export type Subscription_RootInitiatives_View_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiatives_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiatives_View_Order_By>>;
  where?: InputMaybe<Initiatives_View_Bool_Exp>;
};


export type Subscription_RootMap_EntriesArgs = {
  distinct_on?: InputMaybe<Array<Map_Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Map_Entries_Order_By>>;
  where?: InputMaybe<Map_Entries_Bool_Exp>;
};


export type Subscription_RootMap_Entries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Map_Entries_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Map_Entries_Order_By>>;
  where?: InputMaybe<Map_Entries_Bool_Exp>;
};


export type Subscription_RootOrg_MembersArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


export type Subscription_RootOrg_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


export type Subscription_RootOrg_Members_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootOrg_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


export type Subscription_RootOrg_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


export type Subscription_RootOrg_Projects_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootOrg_TagsArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


export type Subscription_RootOrg_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


export type Subscription_RootOrg_Tags_By_PkArgs = {
  id: Scalars['Int'];
};


export type Subscription_RootOrg_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Org_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Visits_Order_By>>;
  where?: InputMaybe<Org_Visits_Bool_Exp>;
};


export type Subscription_RootOrg_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Visits_Order_By>>;
  where?: InputMaybe<Org_Visits_Bool_Exp>;
};


export type Subscription_RootOrgsArgs = {
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Subscription_RootOrgs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Subscription_RootOrgs_By_PkArgs = {
  id: Scalars['uuid'];
};


export type Subscription_RootOrgs_NearbyArgs = {
  args: Orgs_Nearby_Args;
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Subscription_RootOrgs_Nearby_AggregateArgs = {
  args: Orgs_Nearby_Args;
  distinct_on?: InputMaybe<Array<Orgs_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_Order_By>>;
  where?: InputMaybe<Orgs_Bool_Exp>;
};


export type Subscription_RootOrgs_ViewArgs = {
  distinct_on?: InputMaybe<Array<Orgs_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_View_Order_By>>;
  where?: InputMaybe<Orgs_View_Bool_Exp>;
};


export type Subscription_RootOrgs_View_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Orgs_View_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Orgs_View_Order_By>>;
  where?: InputMaybe<Orgs_View_Bool_Exp>;
};


export type Subscription_RootPost_TypesArgs = {
  distinct_on?: InputMaybe<Array<Post_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Post_Types_Order_By>>;
  where?: InputMaybe<Post_Types_Bool_Exp>;
};


export type Subscription_RootPost_Types_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Post_Types_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Post_Types_Order_By>>;
  where?: InputMaybe<Post_Types_Bool_Exp>;
};


export type Subscription_RootPost_Types_By_PkArgs = {
  type: Scalars['String'];
};


export type Subscription_RootReactionsArgs = {
  distinct_on?: InputMaybe<Array<Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Reactions_Order_By>>;
  where?: InputMaybe<Reactions_Bool_Exp>;
};


export type Subscription_RootReactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Reactions_Order_By>>;
  where?: InputMaybe<Reactions_Bool_Exp>;
};


export type Subscription_RootReactions_By_PkArgs = {
  type: Scalars['String'];
};


export type Subscription_RootSpatial_Ref_SysArgs = {
  distinct_on?: InputMaybe<Array<Spatial_Ref_Sys_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Spatial_Ref_Sys_Order_By>>;
  where?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
};


export type Subscription_RootSpatial_Ref_Sys_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Spatial_Ref_Sys_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Spatial_Ref_Sys_Order_By>>;
  where?: InputMaybe<Spatial_Ref_Sys_Bool_Exp>;
};


export type Subscription_RootSpatial_Ref_Sys_By_PkArgs = {
  srid: Scalars['Int'];
};


export type Subscription_RootTagsArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tags_Order_By>>;
  where?: InputMaybe<Tags_Bool_Exp>;
};


export type Subscription_RootTags_By_PkArgs = {
  tag: Scalars['String'];
};


export type Subscription_RootTask_StatusesArgs = {
  distinct_on?: InputMaybe<Array<Task_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Task_Statuses_Order_By>>;
  where?: InputMaybe<Task_Statuses_Bool_Exp>;
};


export type Subscription_RootTask_Statuses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Task_Statuses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Task_Statuses_Order_By>>;
  where?: InputMaybe<Task_Statuses_Bool_Exp>;
};


export type Subscription_RootTask_Statuses_By_PkArgs = {
  status: Scalars['String'];
};


export type Subscription_RootTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


export type Subscription_RootTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


export type Subscription_RootTenders_By_PkArgs = {
  id: Scalars['bigint'];
};


export type Subscription_RootUser_SettingsArgs = {
  distinct_on?: InputMaybe<Array<User_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Settings_Order_By>>;
  where?: InputMaybe<User_Settings_Bool_Exp>;
};


export type Subscription_RootUser_Settings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Settings_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Settings_Order_By>>;
  where?: InputMaybe<User_Settings_Bool_Exp>;
};


export type Subscription_RootUser_Settings_By_PkArgs = {
  user_id: Scalars['uuid'];
};


export type Subscription_RootUser_SubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


export type Subscription_RootUser_Subscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


export type Subscription_RootUser_Subscriptions_By_PkArgs = {
  id: Scalars['String'];
};


export type Subscription_RootUsersArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Users_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Users_Order_By>>;
  where?: InputMaybe<Users_Bool_Exp>;
};


export type Subscription_RootUsers_By_PkArgs = {
  id: Scalars['uuid'];
};

/** columns and relationships of "tags" */
export type Tags = {
  /** An array relationship */
  initiative_tags: Array<Initiative_Tags>;
  /** An aggregate relationship */
  initiative_tags_aggregate: Initiative_Tags_Aggregate;
  /** An array relationship */
  org_tags: Array<Org_Tags>;
  /** An aggregate relationship */
  org_tags_aggregate: Org_Tags_Aggregate;
  tag: Scalars['String'];
};


/** columns and relationships of "tags" */
export type TagsInitiative_TagsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


/** columns and relationships of "tags" */
export type TagsInitiative_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tags_Order_By>>;
  where?: InputMaybe<Initiative_Tags_Bool_Exp>;
};


/** columns and relationships of "tags" */
export type TagsOrg_TagsArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};


/** columns and relationships of "tags" */
export type TagsOrg_Tags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Tags_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Tags_Order_By>>;
  where?: InputMaybe<Org_Tags_Bool_Exp>;
};

/** aggregated selection of "tags" */
export type Tags_Aggregate = {
  aggregate?: Maybe<Tags_Aggregate_Fields>;
  nodes: Array<Tags>;
};

/** aggregate fields of "tags" */
export type Tags_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Tags_Max_Fields>;
  min?: Maybe<Tags_Min_Fields>;
};


/** aggregate fields of "tags" */
export type Tags_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tags_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'. */
export type Tags_Bool_Exp = {
  _and?: InputMaybe<Array<Tags_Bool_Exp>>;
  _not?: InputMaybe<Tags_Bool_Exp>;
  _or?: InputMaybe<Array<Tags_Bool_Exp>>;
  initiative_tags?: InputMaybe<Initiative_Tags_Bool_Exp>;
  org_tags?: InputMaybe<Org_Tags_Bool_Exp>;
  tag?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "tags" */
export enum Tags_Constraint {
  /** unique or primary key constraint */
  TagsPkey = 'tags_pkey'
}

/** input type for inserting data into table "tags" */
export type Tags_Insert_Input = {
  initiative_tags?: InputMaybe<Initiative_Tags_Arr_Rel_Insert_Input>;
  org_tags?: InputMaybe<Org_Tags_Arr_Rel_Insert_Input>;
  tag?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Tags_Max_Fields = {
  tag?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Tags_Min_Fields = {
  tag?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "tags" */
export type Tags_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tags>;
};

/** input type for inserting object relation for remote table "tags" */
export type Tags_Obj_Rel_Insert_Input = {
  data: Tags_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tags_On_Conflict>;
};

/** on_conflict condition type for table "tags" */
export type Tags_On_Conflict = {
  constraint: Tags_Constraint;
  update_columns?: Array<Tags_Update_Column>;
  where?: InputMaybe<Tags_Bool_Exp>;
};

/** Ordering options when selecting data from "tags". */
export type Tags_Order_By = {
  initiative_tags_aggregate?: InputMaybe<Initiative_Tags_Aggregate_Order_By>;
  org_tags_aggregate?: InputMaybe<Org_Tags_Aggregate_Order_By>;
  tag?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tags */
export type Tags_Pk_Columns_Input = {
  tag: Scalars['String'];
};

/** select columns of table "tags" */
export enum Tags_Select_Column {
  /** column name */
  Tag = 'tag'
}

/** input type for updating data in table "tags" */
export type Tags_Set_Input = {
  tag?: InputMaybe<Scalars['String']>;
};

/** update columns of table "tags" */
export enum Tags_Update_Column {
  /** column name */
  Tag = 'tag'
}

/** columns and relationships of "task_statuses" */
export type Task_Statuses = {
  status: Scalars['String'];
};

/** aggregated selection of "task_statuses" */
export type Task_Statuses_Aggregate = {
  aggregate?: Maybe<Task_Statuses_Aggregate_Fields>;
  nodes: Array<Task_Statuses>;
};

/** aggregate fields of "task_statuses" */
export type Task_Statuses_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Task_Statuses_Max_Fields>;
  min?: Maybe<Task_Statuses_Min_Fields>;
};


/** aggregate fields of "task_statuses" */
export type Task_Statuses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Task_Statuses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "task_statuses". All fields are combined with a logical 'AND'. */
export type Task_Statuses_Bool_Exp = {
  _and?: InputMaybe<Array<Task_Statuses_Bool_Exp>>;
  _not?: InputMaybe<Task_Statuses_Bool_Exp>;
  _or?: InputMaybe<Array<Task_Statuses_Bool_Exp>>;
  status?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "task_statuses" */
export enum Task_Statuses_Constraint {
  /** unique or primary key constraint */
  TaskStatusesPkey = 'task_statuses_pkey'
}

export enum Task_Statuses_Enum {
  Cancelled = 'CANCELLED',
  Completed = 'COMPLETED',
  InProgress = 'IN_PROGRESS',
  Pending = 'PENDING'
}

/** Boolean expression to compare columns of type "task_statuses_enum". All fields are combined with logical 'AND'. */
export type Task_Statuses_Enum_Comparison_Exp = {
  _eq?: InputMaybe<Task_Statuses_Enum>;
  _in?: InputMaybe<Array<Task_Statuses_Enum>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _neq?: InputMaybe<Task_Statuses_Enum>;
  _nin?: InputMaybe<Array<Task_Statuses_Enum>>;
};

/** input type for inserting data into table "task_statuses" */
export type Task_Statuses_Insert_Input = {
  status?: InputMaybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Task_Statuses_Max_Fields = {
  status?: Maybe<Scalars['String']>;
};

/** aggregate min on columns */
export type Task_Statuses_Min_Fields = {
  status?: Maybe<Scalars['String']>;
};

/** response of any mutation on the table "task_statuses" */
export type Task_Statuses_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Task_Statuses>;
};

/** on_conflict condition type for table "task_statuses" */
export type Task_Statuses_On_Conflict = {
  constraint: Task_Statuses_Constraint;
  update_columns?: Array<Task_Statuses_Update_Column>;
  where?: InputMaybe<Task_Statuses_Bool_Exp>;
};

/** Ordering options when selecting data from "task_statuses". */
export type Task_Statuses_Order_By = {
  status?: InputMaybe<Order_By>;
};

/** primary key columns input for table: task_statuses */
export type Task_Statuses_Pk_Columns_Input = {
  status: Scalars['String'];
};

/** select columns of table "task_statuses" */
export enum Task_Statuses_Select_Column {
  /** column name */
  Status = 'status'
}

/** input type for updating data in table "task_statuses" */
export type Task_Statuses_Set_Input = {
  status?: InputMaybe<Scalars['String']>;
};

/** update columns of table "task_statuses" */
export enum Task_Statuses_Update_Column {
  /** column name */
  Status = 'status'
}

/** columns and relationships of "tenders" */
export type Tenders = {
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  initiative: Initiatives;
  initiative_id: Scalars['uuid'];
  /** An object relationship */
  org?: Maybe<Orgs>;
  org_id?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  org_project: Org_Projects;
  parent_project: Scalars['Int'];
  /** An array relationship */
  projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  projects_aggregate: Initiative_Projects_Aggregate;
  /** An object relationship */
  user?: Maybe<Users>;
  user_id?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "tenders" */
export type TendersProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "tenders" */
export type TendersProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};

/** aggregated selection of "tenders" */
export type Tenders_Aggregate = {
  aggregate?: Maybe<Tenders_Aggregate_Fields>;
  nodes: Array<Tenders>;
};

/** aggregate fields of "tenders" */
export type Tenders_Aggregate_Fields = {
  avg?: Maybe<Tenders_Avg_Fields>;
  count: Scalars['Int'];
  max?: Maybe<Tenders_Max_Fields>;
  min?: Maybe<Tenders_Min_Fields>;
  stddev?: Maybe<Tenders_Stddev_Fields>;
  stddev_pop?: Maybe<Tenders_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tenders_Stddev_Samp_Fields>;
  sum?: Maybe<Tenders_Sum_Fields>;
  var_pop?: Maybe<Tenders_Var_Pop_Fields>;
  var_samp?: Maybe<Tenders_Var_Samp_Fields>;
  variance?: Maybe<Tenders_Variance_Fields>;
};


/** aggregate fields of "tenders" */
export type Tenders_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tenders_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "tenders" */
export type Tenders_Aggregate_Order_By = {
  avg?: InputMaybe<Tenders_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Tenders_Max_Order_By>;
  min?: InputMaybe<Tenders_Min_Order_By>;
  stddev?: InputMaybe<Tenders_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Tenders_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Tenders_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Tenders_Sum_Order_By>;
  var_pop?: InputMaybe<Tenders_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Tenders_Var_Samp_Order_By>;
  variance?: InputMaybe<Tenders_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "tenders" */
export type Tenders_Arr_Rel_Insert_Input = {
  data: Array<Tenders_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Tenders_On_Conflict>;
};

/** aggregate avg on columns */
export type Tenders_Avg_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "tenders" */
export type Tenders_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "tenders". All fields are combined with a logical 'AND'. */
export type Tenders_Bool_Exp = {
  _and?: InputMaybe<Array<Tenders_Bool_Exp>>;
  _not?: InputMaybe<Tenders_Bool_Exp>;
  _or?: InputMaybe<Array<Tenders_Bool_Exp>>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  initiative?: InputMaybe<Initiatives_Bool_Exp>;
  initiative_id?: InputMaybe<Uuid_Comparison_Exp>;
  org?: InputMaybe<Orgs_Bool_Exp>;
  org_id?: InputMaybe<Uuid_Comparison_Exp>;
  org_project?: InputMaybe<Org_Projects_Bool_Exp>;
  parent_project?: InputMaybe<Int_Comparison_Exp>;
  projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "tenders" */
export enum Tenders_Constraint {
  /** unique or primary key constraint */
  PkTendersId = 'pk_tenders_id'
}

/** input type for incrementing numeric columns in table "tenders" */
export type Tenders_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']>;
  parent_project?: InputMaybe<Scalars['Int']>;
};

/** input type for inserting data into table "tenders" */
export type Tenders_Insert_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative?: InputMaybe<Initiatives_Obj_Rel_Insert_Input>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  org?: InputMaybe<Orgs_Obj_Rel_Insert_Input>;
  org_id?: InputMaybe<Scalars['uuid']>;
  org_project?: InputMaybe<Org_Projects_Obj_Rel_Insert_Input>;
  parent_project?: InputMaybe<Scalars['Int']>;
  projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Tenders_Max_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  org_id?: Maybe<Scalars['uuid']>;
  parent_project?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "tenders" */
export type Tenders_Max_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Tenders_Min_Fields = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  initiative_id?: Maybe<Scalars['uuid']>;
  org_id?: Maybe<Scalars['uuid']>;
  parent_project?: Maybe<Scalars['Int']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "tenders" */
export type Tenders_Min_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org_id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "tenders" */
export type Tenders_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Tenders>;
};

/** input type for inserting object relation for remote table "tenders" */
export type Tenders_Obj_Rel_Insert_Input = {
  data: Tenders_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tenders_On_Conflict>;
};

/** on_conflict condition type for table "tenders" */
export type Tenders_On_Conflict = {
  constraint: Tenders_Constraint;
  update_columns?: Array<Tenders_Update_Column>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};

/** Ordering options when selecting data from "tenders". */
export type Tenders_Order_By = {
  created_at?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  initiative?: InputMaybe<Initiatives_Order_By>;
  initiative_id?: InputMaybe<Order_By>;
  org?: InputMaybe<Orgs_Order_By>;
  org_id?: InputMaybe<Order_By>;
  org_project?: InputMaybe<Org_Projects_Order_By>;
  parent_project?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: tenders */
export type Tenders_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "tenders" */
export enum Tenders_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  ParentProject = 'parent_project',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "tenders" */
export type Tenders_Set_Input = {
  created_at?: InputMaybe<Scalars['timestamptz']>;
  id?: InputMaybe<Scalars['bigint']>;
  initiative_id?: InputMaybe<Scalars['uuid']>;
  org_id?: InputMaybe<Scalars['uuid']>;
  parent_project?: InputMaybe<Scalars['Int']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate stddev on columns */
export type Tenders_Stddev_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "tenders" */
export type Tenders_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tenders_Stddev_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "tenders" */
export type Tenders_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tenders_Stddev_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "tenders" */
export type Tenders_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** aggregate sum on columns */
export type Tenders_Sum_Fields = {
  id?: Maybe<Scalars['bigint']>;
  parent_project?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "tenders" */
export type Tenders_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** update columns of table "tenders" */
export enum Tenders_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  InitiativeId = 'initiative_id',
  /** column name */
  OrgId = 'org_id',
  /** column name */
  ParentProject = 'parent_project',
  /** column name */
  UserId = 'user_id'
}

/** aggregate var_pop on columns */
export type Tenders_Var_Pop_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "tenders" */
export type Tenders_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tenders_Var_Samp_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "tenders" */
export type Tenders_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Tenders_Variance_Fields = {
  id?: Maybe<Scalars['Float']>;
  parent_project?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "tenders" */
export type Tenders_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  parent_project?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
export type Timestamp_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamp']>;
  _gt?: InputMaybe<Scalars['timestamp']>;
  _gte?: InputMaybe<Scalars['timestamp']>;
  _in?: InputMaybe<Array<Scalars['timestamp']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamp']>;
  _lte?: InputMaybe<Scalars['timestamp']>;
  _neq?: InputMaybe<Scalars['timestamp']>;
  _nin?: InputMaybe<Array<Scalars['timestamp']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']>;
  _gt?: InputMaybe<Scalars['timestamptz']>;
  _gte?: InputMaybe<Scalars['timestamptz']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['timestamptz']>;
  _lte?: InputMaybe<Scalars['timestamptz']>;
  _neq?: InputMaybe<Scalars['timestamptz']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']>>;
};

/** columns and relationships of "user_settings" */
export type User_Settings = {
  email_notifications?: Maybe<Scalars['Boolean']>;
  push_notifications?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  user: Users;
  user_id: Scalars['uuid'];
};

/** aggregated selection of "user_settings" */
export type User_Settings_Aggregate = {
  aggregate?: Maybe<User_Settings_Aggregate_Fields>;
  nodes: Array<User_Settings>;
};

/** aggregate fields of "user_settings" */
export type User_Settings_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<User_Settings_Max_Fields>;
  min?: Maybe<User_Settings_Min_Fields>;
};


/** aggregate fields of "user_settings" */
export type User_Settings_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Settings_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "user_settings". All fields are combined with a logical 'AND'. */
export type User_Settings_Bool_Exp = {
  _and?: InputMaybe<Array<User_Settings_Bool_Exp>>;
  _not?: InputMaybe<User_Settings_Bool_Exp>;
  _or?: InputMaybe<Array<User_Settings_Bool_Exp>>;
  email_notifications?: InputMaybe<Boolean_Comparison_Exp>;
  push_notifications?: InputMaybe<Boolean_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_settings" */
export enum User_Settings_Constraint {
  /** unique or primary key constraint */
  UserSettingsPkey = 'user_settings_pkey'
}

/** input type for inserting data into table "user_settings" */
export type User_Settings_Insert_Input = {
  email_notifications?: InputMaybe<Scalars['Boolean']>;
  push_notifications?: InputMaybe<Scalars['Boolean']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type User_Settings_Max_Fields = {
  user_id?: Maybe<Scalars['uuid']>;
};

/** aggregate min on columns */
export type User_Settings_Min_Fields = {
  user_id?: Maybe<Scalars['uuid']>;
};

/** response of any mutation on the table "user_settings" */
export type User_Settings_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Settings>;
};

/** input type for inserting object relation for remote table "user_settings" */
export type User_Settings_Obj_Rel_Insert_Input = {
  data: User_Settings_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Settings_On_Conflict>;
};

/** on_conflict condition type for table "user_settings" */
export type User_Settings_On_Conflict = {
  constraint: User_Settings_Constraint;
  update_columns?: Array<User_Settings_Update_Column>;
  where?: InputMaybe<User_Settings_Bool_Exp>;
};

/** Ordering options when selecting data from "user_settings". */
export type User_Settings_Order_By = {
  email_notifications?: InputMaybe<Order_By>;
  push_notifications?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_settings */
export type User_Settings_Pk_Columns_Input = {
  user_id: Scalars['uuid'];
};

/** select columns of table "user_settings" */
export enum User_Settings_Select_Column {
  /** column name */
  EmailNotifications = 'email_notifications',
  /** column name */
  PushNotifications = 'push_notifications',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_settings" */
export type User_Settings_Set_Input = {
  email_notifications?: InputMaybe<Scalars['Boolean']>;
  push_notifications?: InputMaybe<Scalars['Boolean']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_settings" */
export enum User_Settings_Update_Column {
  /** column name */
  EmailNotifications = 'email_notifications',
  /** column name */
  PushNotifications = 'push_notifications',
  /** column name */
  UserId = 'user_id'
}

/**
 * Push subscriptions
 *
 *
 * columns and relationships of "user_subscriptions"
 *
 */
export type User_Subscriptions = {
  id: Scalars['String'];
  platform?: Maybe<Scalars['String']>;
  service?: Maybe<Scalars['String']>;
  subscription: Scalars['String'];
  /** An object relationship */
  user?: Maybe<Users>;
  user_id: Scalars['uuid'];
};

/** aggregated selection of "user_subscriptions" */
export type User_Subscriptions_Aggregate = {
  aggregate?: Maybe<User_Subscriptions_Aggregate_Fields>;
  nodes: Array<User_Subscriptions>;
};

/** aggregate fields of "user_subscriptions" */
export type User_Subscriptions_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<User_Subscriptions_Max_Fields>;
  min?: Maybe<User_Subscriptions_Min_Fields>;
};


/** aggregate fields of "user_subscriptions" */
export type User_Subscriptions_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "user_subscriptions" */
export type User_Subscriptions_Aggregate_Order_By = {
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<User_Subscriptions_Max_Order_By>;
  min?: InputMaybe<User_Subscriptions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "user_subscriptions" */
export type User_Subscriptions_Arr_Rel_Insert_Input = {
  data: Array<User_Subscriptions_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<User_Subscriptions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "user_subscriptions". All fields are combined with a logical 'AND'. */
export type User_Subscriptions_Bool_Exp = {
  _and?: InputMaybe<Array<User_Subscriptions_Bool_Exp>>;
  _not?: InputMaybe<User_Subscriptions_Bool_Exp>;
  _or?: InputMaybe<Array<User_Subscriptions_Bool_Exp>>;
  id?: InputMaybe<String_Comparison_Exp>;
  platform?: InputMaybe<String_Comparison_Exp>;
  service?: InputMaybe<String_Comparison_Exp>;
  subscription?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<Users_Bool_Exp>;
  user_id?: InputMaybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "user_subscriptions" */
export enum User_Subscriptions_Constraint {
  /** unique or primary key constraint */
  UserSubscriptionsPkey = 'user_subscriptions_pkey'
}

/** input type for inserting data into table "user_subscriptions" */
export type User_Subscriptions_Insert_Input = {
  id?: InputMaybe<Scalars['String']>;
  platform?: InputMaybe<Scalars['String']>;
  service?: InputMaybe<Scalars['String']>;
  subscription?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<Users_Obj_Rel_Insert_Input>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type User_Subscriptions_Max_Fields = {
  id?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  service?: Maybe<Scalars['String']>;
  subscription?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "user_subscriptions" */
export type User_Subscriptions_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  service?: InputMaybe<Order_By>;
  subscription?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type User_Subscriptions_Min_Fields = {
  id?: Maybe<Scalars['String']>;
  platform?: Maybe<Scalars['String']>;
  service?: Maybe<Scalars['String']>;
  subscription?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "user_subscriptions" */
export type User_Subscriptions_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  service?: InputMaybe<Order_By>;
  subscription?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "user_subscriptions" */
export type User_Subscriptions_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<User_Subscriptions>;
};

/** on_conflict condition type for table "user_subscriptions" */
export type User_Subscriptions_On_Conflict = {
  constraint: User_Subscriptions_Constraint;
  update_columns?: Array<User_Subscriptions_Update_Column>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};

/** Ordering options when selecting data from "user_subscriptions". */
export type User_Subscriptions_Order_By = {
  id?: InputMaybe<Order_By>;
  platform?: InputMaybe<Order_By>;
  service?: InputMaybe<Order_By>;
  subscription?: InputMaybe<Order_By>;
  user?: InputMaybe<Users_Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: user_subscriptions */
export type User_Subscriptions_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** select columns of table "user_subscriptions" */
export enum User_Subscriptions_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Platform = 'platform',
  /** column name */
  Service = 'service',
  /** column name */
  Subscription = 'subscription',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "user_subscriptions" */
export type User_Subscriptions_Set_Input = {
  id?: InputMaybe<Scalars['String']>;
  platform?: InputMaybe<Scalars['String']>;
  service?: InputMaybe<Scalars['String']>;
  subscription?: InputMaybe<Scalars['String']>;
  user_id?: InputMaybe<Scalars['uuid']>;
};

/** update columns of table "user_subscriptions" */
export enum User_Subscriptions_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Platform = 'platform',
  /** column name */
  Service = 'service',
  /** column name */
  Subscription = 'subscription',
  /** column name */
  UserId = 'user_id'
}

/** columns and relationships of "users" */
export type Users = {
  /** An object relationship */
  account?: Maybe<Auth_Accounts>;
  avatar_url?: Maybe<Scalars['String']>;
  /** An array relationship */
  comment_reactions: Array<Initiative_Comment_Reactions>;
  /** An aggregate relationship */
  comment_reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  /** An array relationship */
  comments: Array<Initiative_Comments>;
  /** An aggregate relationship */
  comments_aggregate: Initiative_Comments_Aggregate;
  created_at: Scalars['timestamptz'];
  display_name?: Maybe<Scalars['String']>;
  /** An array relationship */
  donations: Array<Initiative_Donations>;
  /** An aggregate relationship */
  donations_aggregate: Initiative_Donations_Aggregate;
  /** An array relationship */
  edits: Array<Initiative_Edits>;
  /** An aggregate relationship */
  edits_aggregate: Initiative_Edits_Aggregate;
  /** An array relationship */
  expenses: Array<Initiative_Expenses>;
  /** An aggregate relationship */
  expenses_aggregate: Initiative_Expenses_Aggregate;
  /** An array relationship */
  files: Array<Files>;
  /** An aggregate relationship */
  files_aggregate: Files_Aggregate;
  id: Scalars['uuid'];
  /** An array relationship */
  initiative_infos: Array<Initiative_Info>;
  /** An aggregate relationship */
  initiative_infos_aggregate: Initiative_Info_Aggregate;
  /** An array relationship */
  initiative_members: Array<Initiative_Members>;
  /** An aggregate relationship */
  initiative_members_aggregate: Initiative_Members_Aggregate;
  /** An array relationship */
  initiative_visits: Array<Initiative_Visits>;
  /** An aggregate relationship */
  initiative_visits_aggregate: Initiative_Visits_Aggregate;
  /** An array relationship */
  initiative_volunteers: Array<Initiative_Volunteers>;
  /** An aggregate relationship */
  initiative_volunteers_aggregate: Initiative_Volunteers_Aggregate;
  /** An array relationship */
  org_members: Array<Org_Members>;
  /** An aggregate relationship */
  org_members_aggregate: Org_Members_Aggregate;
  /** An array relationship */
  org_projects: Array<Org_Projects>;
  /** An aggregate relationship */
  org_projects_aggregate: Org_Projects_Aggregate;
  /** An array relationship */
  post_reactions: Array<Initiative_Post_Reactions>;
  /** An aggregate relationship */
  post_reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  /** An array relationship */
  posts: Array<Initiative_Posts>;
  /** An aggregate relationship */
  posts_aggregate: Initiative_Posts_Aggregate;
  /** An array relationship */
  projects: Array<Initiative_Projects>;
  /** An aggregate relationship */
  projects_aggregate: Initiative_Projects_Aggregate;
  /** An object relationship */
  settings?: Maybe<User_Settings>;
  /** An array relationship */
  subscriptions: Array<User_Subscriptions>;
  /** An aggregate relationship */
  subscriptions_aggregate: User_Subscriptions_Aggregate;
  /** An array relationship */
  tasks: Array<Initiative_Tasks>;
  /** An aggregate relationship */
  tasks_aggregate: Initiative_Tasks_Aggregate;
  /** An array relationship */
  tenders: Array<Tenders>;
  /** An aggregate relationship */
  tenders_aggregate: Tenders_Aggregate;
  updated_at: Scalars['timestamptz'];
  /** An array relationship */
  votes: Array<Initiative_Poll_Votes>;
  /** An aggregate relationship */
  votes_aggregate: Initiative_Poll_Votes_Aggregate;
};


/** columns and relationships of "users" */
export type UsersComment_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersComment_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comment_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comment_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersCommentsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Comments_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Comments_Order_By>>;
  where?: InputMaybe<Initiative_Comments_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersDonationsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersDonations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Donations_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Donations_Order_By>>;
  where?: InputMaybe<Initiative_Donations_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersEditsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersEdits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Edits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Edits_Order_By>>;
  where?: InputMaybe<Initiative_Edits_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersExpensesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersExpenses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Expenses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Expenses_Order_By>>;
  where?: InputMaybe<Initiative_Expenses_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersFilesArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersFiles_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Files_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Files_Order_By>>;
  where?: InputMaybe<Files_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_InfosArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_Infos_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Info_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Info_Order_By>>;
  where?: InputMaybe<Initiative_Info_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_MembersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Members_Order_By>>;
  where?: InputMaybe<Initiative_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_VisitsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_Visits_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Visits_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Visits_Order_By>>;
  where?: InputMaybe<Initiative_Visits_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_VolunteersArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersInitiative_Volunteers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Volunteers_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Volunteers_Order_By>>;
  where?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersOrg_MembersArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersOrg_Members_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Members_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Members_Order_By>>;
  where?: InputMaybe<Org_Members_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersOrg_ProjectsArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersOrg_Projects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Org_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Org_Projects_Order_By>>;
  where?: InputMaybe<Org_Projects_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPost_ReactionsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPost_Reactions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Post_Reactions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Post_Reactions_Order_By>>;
  where?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPostsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersPosts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Posts_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Posts_Order_By>>;
  where?: InputMaybe<Initiative_Posts_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersProjectsArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Projects_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Projects_Order_By>>;
  where?: InputMaybe<Initiative_Projects_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersSubscriptionsArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersSubscriptions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Subscriptions_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<User_Subscriptions_Order_By>>;
  where?: InputMaybe<User_Subscriptions_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTasksArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Tasks_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Tasks_Order_By>>;
  where?: InputMaybe<Initiative_Tasks_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTendersArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersTenders_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tenders_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Tenders_Order_By>>;
  where?: InputMaybe<Tenders_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersVotesArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};


/** columns and relationships of "users" */
export type UsersVotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Initiative_Poll_Votes_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  order_by?: InputMaybe<Array<Initiative_Poll_Votes_Order_By>>;
  where?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};

/** aggregated selection of "users" */
export type Users_Aggregate = {
  aggregate?: Maybe<Users_Aggregate_Fields>;
  nodes: Array<Users>;
};

/** aggregate fields of "users" */
export type Users_Aggregate_Fields = {
  count: Scalars['Int'];
  max?: Maybe<Users_Max_Fields>;
  min?: Maybe<Users_Min_Fields>;
};


/** aggregate fields of "users" */
export type Users_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Users_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']>;
};

/** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
export type Users_Bool_Exp = {
  _and?: InputMaybe<Array<Users_Bool_Exp>>;
  _not?: InputMaybe<Users_Bool_Exp>;
  _or?: InputMaybe<Array<Users_Bool_Exp>>;
  account?: InputMaybe<Auth_Accounts_Bool_Exp>;
  avatar_url?: InputMaybe<String_Comparison_Exp>;
  comment_reactions?: InputMaybe<Initiative_Comment_Reactions_Bool_Exp>;
  comments?: InputMaybe<Initiative_Comments_Bool_Exp>;
  created_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  display_name?: InputMaybe<String_Comparison_Exp>;
  donations?: InputMaybe<Initiative_Donations_Bool_Exp>;
  edits?: InputMaybe<Initiative_Edits_Bool_Exp>;
  expenses?: InputMaybe<Initiative_Expenses_Bool_Exp>;
  files?: InputMaybe<Files_Bool_Exp>;
  id?: InputMaybe<Uuid_Comparison_Exp>;
  initiative_infos?: InputMaybe<Initiative_Info_Bool_Exp>;
  initiative_members?: InputMaybe<Initiative_Members_Bool_Exp>;
  initiative_visits?: InputMaybe<Initiative_Visits_Bool_Exp>;
  initiative_volunteers?: InputMaybe<Initiative_Volunteers_Bool_Exp>;
  org_members?: InputMaybe<Org_Members_Bool_Exp>;
  org_projects?: InputMaybe<Org_Projects_Bool_Exp>;
  post_reactions?: InputMaybe<Initiative_Post_Reactions_Bool_Exp>;
  posts?: InputMaybe<Initiative_Posts_Bool_Exp>;
  projects?: InputMaybe<Initiative_Projects_Bool_Exp>;
  settings?: InputMaybe<User_Settings_Bool_Exp>;
  subscriptions?: InputMaybe<User_Subscriptions_Bool_Exp>;
  tasks?: InputMaybe<Initiative_Tasks_Bool_Exp>;
  tenders?: InputMaybe<Tenders_Bool_Exp>;
  updated_at?: InputMaybe<Timestamptz_Comparison_Exp>;
  votes?: InputMaybe<Initiative_Poll_Votes_Bool_Exp>;
};

/** unique or primary key constraints on table "users" */
export enum Users_Constraint {
  /** unique or primary key constraint */
  UsersPkey = 'users_pkey'
}

/** input type for inserting data into table "users" */
export type Users_Insert_Input = {
  account?: InputMaybe<Auth_Accounts_Obj_Rel_Insert_Input>;
  avatar_url?: InputMaybe<Scalars['String']>;
  comment_reactions?: InputMaybe<Initiative_Comment_Reactions_Arr_Rel_Insert_Input>;
  comments?: InputMaybe<Initiative_Comments_Arr_Rel_Insert_Input>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  display_name?: InputMaybe<Scalars['String']>;
  donations?: InputMaybe<Initiative_Donations_Arr_Rel_Insert_Input>;
  edits?: InputMaybe<Initiative_Edits_Arr_Rel_Insert_Input>;
  expenses?: InputMaybe<Initiative_Expenses_Arr_Rel_Insert_Input>;
  files?: InputMaybe<Files_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['uuid']>;
  initiative_infos?: InputMaybe<Initiative_Info_Arr_Rel_Insert_Input>;
  initiative_members?: InputMaybe<Initiative_Members_Arr_Rel_Insert_Input>;
  initiative_visits?: InputMaybe<Initiative_Visits_Arr_Rel_Insert_Input>;
  initiative_volunteers?: InputMaybe<Initiative_Volunteers_Arr_Rel_Insert_Input>;
  org_members?: InputMaybe<Org_Members_Arr_Rel_Insert_Input>;
  org_projects?: InputMaybe<Org_Projects_Arr_Rel_Insert_Input>;
  post_reactions?: InputMaybe<Initiative_Post_Reactions_Arr_Rel_Insert_Input>;
  posts?: InputMaybe<Initiative_Posts_Arr_Rel_Insert_Input>;
  projects?: InputMaybe<Initiative_Projects_Arr_Rel_Insert_Input>;
  settings?: InputMaybe<User_Settings_Obj_Rel_Insert_Input>;
  subscriptions?: InputMaybe<User_Subscriptions_Arr_Rel_Insert_Input>;
  tasks?: InputMaybe<Initiative_Tasks_Arr_Rel_Insert_Input>;
  tenders?: InputMaybe<Tenders_Arr_Rel_Insert_Input>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
  votes?: InputMaybe<Initiative_Poll_Votes_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Users_Max_Fields = {
  avatar_url?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  display_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate min on columns */
export type Users_Min_Fields = {
  avatar_url?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  display_name?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** response of any mutation on the table "users" */
export type Users_Mutation_Response = {
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int'];
  /** data from the rows affected by the mutation */
  returning: Array<Users>;
};

/** input type for inserting object relation for remote table "users" */
export type Users_Obj_Rel_Insert_Input = {
  data: Users_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Users_On_Conflict>;
};

/** on_conflict condition type for table "users" */
export type Users_On_Conflict = {
  constraint: Users_Constraint;
  update_columns?: Array<Users_Update_Column>;
  where?: InputMaybe<Users_Bool_Exp>;
};

/** Ordering options when selecting data from "users". */
export type Users_Order_By = {
  account?: InputMaybe<Auth_Accounts_Order_By>;
  avatar_url?: InputMaybe<Order_By>;
  comment_reactions_aggregate?: InputMaybe<Initiative_Comment_Reactions_Aggregate_Order_By>;
  comments_aggregate?: InputMaybe<Initiative_Comments_Aggregate_Order_By>;
  created_at?: InputMaybe<Order_By>;
  display_name?: InputMaybe<Order_By>;
  donations_aggregate?: InputMaybe<Initiative_Donations_Aggregate_Order_By>;
  edits_aggregate?: InputMaybe<Initiative_Edits_Aggregate_Order_By>;
  expenses_aggregate?: InputMaybe<Initiative_Expenses_Aggregate_Order_By>;
  files_aggregate?: InputMaybe<Files_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  initiative_infos_aggregate?: InputMaybe<Initiative_Info_Aggregate_Order_By>;
  initiative_members_aggregate?: InputMaybe<Initiative_Members_Aggregate_Order_By>;
  initiative_visits_aggregate?: InputMaybe<Initiative_Visits_Aggregate_Order_By>;
  initiative_volunteers_aggregate?: InputMaybe<Initiative_Volunteers_Aggregate_Order_By>;
  org_members_aggregate?: InputMaybe<Org_Members_Aggregate_Order_By>;
  org_projects_aggregate?: InputMaybe<Org_Projects_Aggregate_Order_By>;
  post_reactions_aggregate?: InputMaybe<Initiative_Post_Reactions_Aggregate_Order_By>;
  posts_aggregate?: InputMaybe<Initiative_Posts_Aggregate_Order_By>;
  projects_aggregate?: InputMaybe<Initiative_Projects_Aggregate_Order_By>;
  settings?: InputMaybe<User_Settings_Order_By>;
  subscriptions_aggregate?: InputMaybe<User_Subscriptions_Aggregate_Order_By>;
  tasks_aggregate?: InputMaybe<Initiative_Tasks_Aggregate_Order_By>;
  tenders_aggregate?: InputMaybe<Tenders_Aggregate_Order_By>;
  updated_at?: InputMaybe<Order_By>;
  votes_aggregate?: InputMaybe<Initiative_Poll_Votes_Aggregate_Order_By>;
};

/** primary key columns input for table: users */
export type Users_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "users" */
export enum Users_Select_Column {
  /** column name */
  AvatarUrl = 'avatar_url',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisplayName = 'display_name',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "users" */
export type Users_Set_Input = {
  avatar_url?: InputMaybe<Scalars['String']>;
  created_at?: InputMaybe<Scalars['timestamptz']>;
  display_name?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['uuid']>;
  updated_at?: InputMaybe<Scalars['timestamptz']>;
};

/** update columns of table "users" */
export enum Users_Update_Column {
  /** column name */
  AvatarUrl = 'avatar_url',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DisplayName = 'display_name',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['uuid']>;
  _gt?: InputMaybe<Scalars['uuid']>;
  _gte?: InputMaybe<Scalars['uuid']>;
  _in?: InputMaybe<Array<Scalars['uuid']>>;
  _is_null?: InputMaybe<Scalars['Boolean']>;
  _lt?: InputMaybe<Scalars['uuid']>;
  _lte?: InputMaybe<Scalars['uuid']>;
  _neq?: InputMaybe<Scalars['uuid']>;
  _nin?: InputMaybe<Array<Scalars['uuid']>>;
};



export type ResolverTypeWrapper<T> = Promise<T> | T;


export type ResolverWithResolve<TResult, TParent, TContext, TArgs> = {
  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;
};
export type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> = ResolverFn<TResult, TParent, TContext, TArgs> | ResolverWithResolve<TResult, TParent, TContext, TArgs>;

export type ResolverFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => Promise<TResult> | TResult;

export type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>;

export type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => TResult | Promise<TResult>;

export interface SubscriptionSubscriberObject<TResult, TKey extends string, TParent, TContext, TArgs> {
  subscribe: SubscriptionSubscribeFn<{ [key in TKey]: TResult }, TParent, TContext, TArgs>;
  resolve?: SubscriptionResolveFn<TResult, { [key in TKey]: TResult }, TContext, TArgs>;
}

export interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {
  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;
  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;
}

export type SubscriptionObject<TResult, TKey extends string, TParent, TContext, TArgs> =
  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>
  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;

export type SubscriptionResolver<TResult, TKey extends string, TParent = {}, TContext = {}, TArgs = {}> =
  | ((...args: any[]) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)
  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;

export type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (
  parent: TParent,
  context: TContext,
  info: GraphQLResolveInfo
) => Maybe<TTypes> | Promise<Maybe<TTypes>>;

export type IsTypeOfResolverFn<T = {}, TContext = {}> = (obj: T, context: TContext, info: GraphQLResolveInfo) => boolean | Promise<boolean>;

export type NextResolverFn<T> = () => Promise<T>;

export type DirectiveResolverFn<TResult = {}, TParent = {}, TContext = {}, TArgs = {}> = (
  next: NextResolverFn<TResult>,
  parent: TParent,
  args: TArgs,
  context: TContext,
  info: GraphQLResolveInfo
) => TResult | Promise<TResult>;

/** Mapping between all available schema types and the resolvers types */
export type ResolversTypes = {
  Boolean: ResolverTypeWrapper<Scalars['Boolean']>;
  Boolean_comparison_exp: Boolean_Comparison_Exp;
  Float: ResolverTypeWrapper<Scalars['Float']>;
  Int: ResolverTypeWrapper<Scalars['Int']>;
  Int_comparison_exp: Int_Comparison_Exp;
  String: ResolverTypeWrapper<Scalars['String']>;
  String_comparison_exp: String_Comparison_Exp;
  auth_account_providers: ResolverTypeWrapper<Auth_Account_Providers>;
  auth_account_providers_aggregate: ResolverTypeWrapper<Auth_Account_Providers_Aggregate>;
  auth_account_providers_aggregate_fields: ResolverTypeWrapper<Auth_Account_Providers_Aggregate_Fields>;
  auth_account_providers_aggregate_order_by: Auth_Account_Providers_Aggregate_Order_By;
  auth_account_providers_arr_rel_insert_input: Auth_Account_Providers_Arr_Rel_Insert_Input;
  auth_account_providers_bool_exp: Auth_Account_Providers_Bool_Exp;
  auth_account_providers_constraint: Auth_Account_Providers_Constraint;
  auth_account_providers_insert_input: Auth_Account_Providers_Insert_Input;
  auth_account_providers_max_fields: ResolverTypeWrapper<Auth_Account_Providers_Max_Fields>;
  auth_account_providers_max_order_by: Auth_Account_Providers_Max_Order_By;
  auth_account_providers_min_fields: ResolverTypeWrapper<Auth_Account_Providers_Min_Fields>;
  auth_account_providers_min_order_by: Auth_Account_Providers_Min_Order_By;
  auth_account_providers_mutation_response: ResolverTypeWrapper<Auth_Account_Providers_Mutation_Response>;
  auth_account_providers_on_conflict: Auth_Account_Providers_On_Conflict;
  auth_account_providers_order_by: Auth_Account_Providers_Order_By;
  auth_account_providers_pk_columns_input: Auth_Account_Providers_Pk_Columns_Input;
  auth_account_providers_select_column: Auth_Account_Providers_Select_Column;
  auth_account_providers_set_input: Auth_Account_Providers_Set_Input;
  auth_account_providers_update_column: Auth_Account_Providers_Update_Column;
  auth_account_roles: ResolverTypeWrapper<Auth_Account_Roles>;
  auth_account_roles_aggregate: ResolverTypeWrapper<Auth_Account_Roles_Aggregate>;
  auth_account_roles_aggregate_fields: ResolverTypeWrapper<Auth_Account_Roles_Aggregate_Fields>;
  auth_account_roles_aggregate_order_by: Auth_Account_Roles_Aggregate_Order_By;
  auth_account_roles_arr_rel_insert_input: Auth_Account_Roles_Arr_Rel_Insert_Input;
  auth_account_roles_bool_exp: Auth_Account_Roles_Bool_Exp;
  auth_account_roles_constraint: Auth_Account_Roles_Constraint;
  auth_account_roles_insert_input: Auth_Account_Roles_Insert_Input;
  auth_account_roles_max_fields: ResolverTypeWrapper<Auth_Account_Roles_Max_Fields>;
  auth_account_roles_max_order_by: Auth_Account_Roles_Max_Order_By;
  auth_account_roles_min_fields: ResolverTypeWrapper<Auth_Account_Roles_Min_Fields>;
  auth_account_roles_min_order_by: Auth_Account_Roles_Min_Order_By;
  auth_account_roles_mutation_response: ResolverTypeWrapper<Auth_Account_Roles_Mutation_Response>;
  auth_account_roles_on_conflict: Auth_Account_Roles_On_Conflict;
  auth_account_roles_order_by: Auth_Account_Roles_Order_By;
  auth_account_roles_pk_columns_input: Auth_Account_Roles_Pk_Columns_Input;
  auth_account_roles_select_column: Auth_Account_Roles_Select_Column;
  auth_account_roles_set_input: Auth_Account_Roles_Set_Input;
  auth_account_roles_update_column: Auth_Account_Roles_Update_Column;
  auth_accounts: ResolverTypeWrapper<Auth_Accounts>;
  auth_accounts_aggregate: ResolverTypeWrapper<Auth_Accounts_Aggregate>;
  auth_accounts_aggregate_fields: ResolverTypeWrapper<Auth_Accounts_Aggregate_Fields>;
  auth_accounts_aggregate_order_by: Auth_Accounts_Aggregate_Order_By;
  auth_accounts_append_input: Auth_Accounts_Append_Input;
  auth_accounts_arr_rel_insert_input: Auth_Accounts_Arr_Rel_Insert_Input;
  auth_accounts_bool_exp: Auth_Accounts_Bool_Exp;
  auth_accounts_constraint: Auth_Accounts_Constraint;
  auth_accounts_delete_at_path_input: Auth_Accounts_Delete_At_Path_Input;
  auth_accounts_delete_elem_input: Auth_Accounts_Delete_Elem_Input;
  auth_accounts_delete_key_input: Auth_Accounts_Delete_Key_Input;
  auth_accounts_insert_input: Auth_Accounts_Insert_Input;
  auth_accounts_max_fields: ResolverTypeWrapper<Auth_Accounts_Max_Fields>;
  auth_accounts_max_order_by: Auth_Accounts_Max_Order_By;
  auth_accounts_min_fields: ResolverTypeWrapper<Auth_Accounts_Min_Fields>;
  auth_accounts_min_order_by: Auth_Accounts_Min_Order_By;
  auth_accounts_mutation_response: ResolverTypeWrapper<Auth_Accounts_Mutation_Response>;
  auth_accounts_obj_rel_insert_input: Auth_Accounts_Obj_Rel_Insert_Input;
  auth_accounts_on_conflict: Auth_Accounts_On_Conflict;
  auth_accounts_order_by: Auth_Accounts_Order_By;
  auth_accounts_pk_columns_input: Auth_Accounts_Pk_Columns_Input;
  auth_accounts_prepend_input: Auth_Accounts_Prepend_Input;
  auth_accounts_select_column: Auth_Accounts_Select_Column;
  auth_accounts_set_input: Auth_Accounts_Set_Input;
  auth_accounts_update_column: Auth_Accounts_Update_Column;
  auth_migrations: ResolverTypeWrapper<Auth_Migrations>;
  auth_migrations_aggregate: ResolverTypeWrapper<Auth_Migrations_Aggregate>;
  auth_migrations_aggregate_fields: ResolverTypeWrapper<Auth_Migrations_Aggregate_Fields>;
  auth_migrations_avg_fields: ResolverTypeWrapper<Auth_Migrations_Avg_Fields>;
  auth_migrations_bool_exp: Auth_Migrations_Bool_Exp;
  auth_migrations_constraint: Auth_Migrations_Constraint;
  auth_migrations_inc_input: Auth_Migrations_Inc_Input;
  auth_migrations_insert_input: Auth_Migrations_Insert_Input;
  auth_migrations_max_fields: ResolverTypeWrapper<Auth_Migrations_Max_Fields>;
  auth_migrations_min_fields: ResolverTypeWrapper<Auth_Migrations_Min_Fields>;
  auth_migrations_mutation_response: ResolverTypeWrapper<Auth_Migrations_Mutation_Response>;
  auth_migrations_on_conflict: Auth_Migrations_On_Conflict;
  auth_migrations_order_by: Auth_Migrations_Order_By;
  auth_migrations_pk_columns_input: Auth_Migrations_Pk_Columns_Input;
  auth_migrations_select_column: Auth_Migrations_Select_Column;
  auth_migrations_set_input: Auth_Migrations_Set_Input;
  auth_migrations_stddev_fields: ResolverTypeWrapper<Auth_Migrations_Stddev_Fields>;
  auth_migrations_stddev_pop_fields: ResolverTypeWrapper<Auth_Migrations_Stddev_Pop_Fields>;
  auth_migrations_stddev_samp_fields: ResolverTypeWrapper<Auth_Migrations_Stddev_Samp_Fields>;
  auth_migrations_sum_fields: ResolverTypeWrapper<Auth_Migrations_Sum_Fields>;
  auth_migrations_update_column: Auth_Migrations_Update_Column;
  auth_migrations_var_pop_fields: ResolverTypeWrapper<Auth_Migrations_Var_Pop_Fields>;
  auth_migrations_var_samp_fields: ResolverTypeWrapper<Auth_Migrations_Var_Samp_Fields>;
  auth_migrations_variance_fields: ResolverTypeWrapper<Auth_Migrations_Variance_Fields>;
  auth_providers: ResolverTypeWrapper<Auth_Providers>;
  auth_providers_aggregate: ResolverTypeWrapper<Auth_Providers_Aggregate>;
  auth_providers_aggregate_fields: ResolverTypeWrapper<Auth_Providers_Aggregate_Fields>;
  auth_providers_bool_exp: Auth_Providers_Bool_Exp;
  auth_providers_constraint: Auth_Providers_Constraint;
  auth_providers_insert_input: Auth_Providers_Insert_Input;
  auth_providers_max_fields: ResolverTypeWrapper<Auth_Providers_Max_Fields>;
  auth_providers_min_fields: ResolverTypeWrapper<Auth_Providers_Min_Fields>;
  auth_providers_mutation_response: ResolverTypeWrapper<Auth_Providers_Mutation_Response>;
  auth_providers_obj_rel_insert_input: Auth_Providers_Obj_Rel_Insert_Input;
  auth_providers_on_conflict: Auth_Providers_On_Conflict;
  auth_providers_order_by: Auth_Providers_Order_By;
  auth_providers_pk_columns_input: Auth_Providers_Pk_Columns_Input;
  auth_providers_select_column: Auth_Providers_Select_Column;
  auth_providers_set_input: Auth_Providers_Set_Input;
  auth_providers_update_column: Auth_Providers_Update_Column;
  auth_refresh_tokens: ResolverTypeWrapper<Auth_Refresh_Tokens>;
  auth_refresh_tokens_aggregate: ResolverTypeWrapper<Auth_Refresh_Tokens_Aggregate>;
  auth_refresh_tokens_aggregate_fields: ResolverTypeWrapper<Auth_Refresh_Tokens_Aggregate_Fields>;
  auth_refresh_tokens_aggregate_order_by: Auth_Refresh_Tokens_Aggregate_Order_By;
  auth_refresh_tokens_arr_rel_insert_input: Auth_Refresh_Tokens_Arr_Rel_Insert_Input;
  auth_refresh_tokens_bool_exp: Auth_Refresh_Tokens_Bool_Exp;
  auth_refresh_tokens_constraint: Auth_Refresh_Tokens_Constraint;
  auth_refresh_tokens_insert_input: Auth_Refresh_Tokens_Insert_Input;
  auth_refresh_tokens_max_fields: ResolverTypeWrapper<Auth_Refresh_Tokens_Max_Fields>;
  auth_refresh_tokens_max_order_by: Auth_Refresh_Tokens_Max_Order_By;
  auth_refresh_tokens_min_fields: ResolverTypeWrapper<Auth_Refresh_Tokens_Min_Fields>;
  auth_refresh_tokens_min_order_by: Auth_Refresh_Tokens_Min_Order_By;
  auth_refresh_tokens_mutation_response: ResolverTypeWrapper<Auth_Refresh_Tokens_Mutation_Response>;
  auth_refresh_tokens_on_conflict: Auth_Refresh_Tokens_On_Conflict;
  auth_refresh_tokens_order_by: Auth_Refresh_Tokens_Order_By;
  auth_refresh_tokens_pk_columns_input: Auth_Refresh_Tokens_Pk_Columns_Input;
  auth_refresh_tokens_select_column: Auth_Refresh_Tokens_Select_Column;
  auth_refresh_tokens_set_input: Auth_Refresh_Tokens_Set_Input;
  auth_refresh_tokens_update_column: Auth_Refresh_Tokens_Update_Column;
  auth_roles: ResolverTypeWrapper<Auth_Roles>;
  auth_roles_aggregate: ResolverTypeWrapper<Auth_Roles_Aggregate>;
  auth_roles_aggregate_fields: ResolverTypeWrapper<Auth_Roles_Aggregate_Fields>;
  auth_roles_bool_exp: Auth_Roles_Bool_Exp;
  auth_roles_constraint: Auth_Roles_Constraint;
  auth_roles_insert_input: Auth_Roles_Insert_Input;
  auth_roles_max_fields: ResolverTypeWrapper<Auth_Roles_Max_Fields>;
  auth_roles_min_fields: ResolverTypeWrapper<Auth_Roles_Min_Fields>;
  auth_roles_mutation_response: ResolverTypeWrapper<Auth_Roles_Mutation_Response>;
  auth_roles_obj_rel_insert_input: Auth_Roles_Obj_Rel_Insert_Input;
  auth_roles_on_conflict: Auth_Roles_On_Conflict;
  auth_roles_order_by: Auth_Roles_Order_By;
  auth_roles_pk_columns_input: Auth_Roles_Pk_Columns_Input;
  auth_roles_select_column: Auth_Roles_Select_Column;
  auth_roles_set_input: Auth_Roles_Set_Input;
  auth_roles_update_column: Auth_Roles_Update_Column;
  bigint: ResolverTypeWrapper<Scalars['bigint']>;
  bigint_comparison_exp: Bigint_Comparison_Exp;
  citext: ResolverTypeWrapper<Scalars['citext']>;
  citext_comparison_exp: Citext_Comparison_Exp;
  entries: ResolverTypeWrapper<Entries>;
  entries_aggregate: ResolverTypeWrapper<Entries_Aggregate>;
  entries_aggregate_fields: ResolverTypeWrapper<Entries_Aggregate_Fields>;
  entries_avg_fields: ResolverTypeWrapper<Entries_Avg_Fields>;
  entries_bool_exp: Entries_Bool_Exp;
  entries_max_fields: ResolverTypeWrapper<Entries_Max_Fields>;
  entries_min_fields: ResolverTypeWrapper<Entries_Min_Fields>;
  entries_nearby_args: Entries_Nearby_Args;
  entries_order_by: Entries_Order_By;
  entries_select_column: Entries_Select_Column;
  entries_stddev_fields: ResolverTypeWrapper<Entries_Stddev_Fields>;
  entries_stddev_pop_fields: ResolverTypeWrapper<Entries_Stddev_Pop_Fields>;
  entries_stddev_samp_fields: ResolverTypeWrapper<Entries_Stddev_Samp_Fields>;
  entries_sum_fields: ResolverTypeWrapper<Entries_Sum_Fields>;
  entries_var_pop_fields: ResolverTypeWrapper<Entries_Var_Pop_Fields>;
  entries_var_samp_fields: ResolverTypeWrapper<Entries_Var_Samp_Fields>;
  entries_variance_fields: ResolverTypeWrapper<Entries_Variance_Fields>;
  entry_members: ResolverTypeWrapper<Entry_Members>;
  entry_members_aggregate: ResolverTypeWrapper<Entry_Members_Aggregate>;
  entry_members_aggregate_fields: ResolverTypeWrapper<Entry_Members_Aggregate_Fields>;
  entry_members_avg_fields: ResolverTypeWrapper<Entry_Members_Avg_Fields>;
  entry_members_bool_exp: Entry_Members_Bool_Exp;
  entry_members_max_fields: ResolverTypeWrapper<Entry_Members_Max_Fields>;
  entry_members_min_fields: ResolverTypeWrapper<Entry_Members_Min_Fields>;
  entry_members_order_by: Entry_Members_Order_By;
  entry_members_select_column: Entry_Members_Select_Column;
  entry_members_stddev_fields: ResolverTypeWrapper<Entry_Members_Stddev_Fields>;
  entry_members_stddev_pop_fields: ResolverTypeWrapper<Entry_Members_Stddev_Pop_Fields>;
  entry_members_stddev_samp_fields: ResolverTypeWrapper<Entry_Members_Stddev_Samp_Fields>;
  entry_members_sum_fields: ResolverTypeWrapper<Entry_Members_Sum_Fields>;
  entry_members_var_pop_fields: ResolverTypeWrapper<Entry_Members_Var_Pop_Fields>;
  entry_members_var_samp_fields: ResolverTypeWrapper<Entry_Members_Var_Samp_Fields>;
  entry_members_variance_fields: ResolverTypeWrapper<Entry_Members_Variance_Fields>;
  entry_visits: ResolverTypeWrapper<Entry_Visits>;
  entry_visits_aggregate: ResolverTypeWrapper<Entry_Visits_Aggregate>;
  entry_visits_aggregate_fields: ResolverTypeWrapper<Entry_Visits_Aggregate_Fields>;
  entry_visits_avg_fields: ResolverTypeWrapper<Entry_Visits_Avg_Fields>;
  entry_visits_bool_exp: Entry_Visits_Bool_Exp;
  entry_visits_max_fields: ResolverTypeWrapper<Entry_Visits_Max_Fields>;
  entry_visits_min_fields: ResolverTypeWrapper<Entry_Visits_Min_Fields>;
  entry_visits_order_by: Entry_Visits_Order_By;
  entry_visits_select_column: Entry_Visits_Select_Column;
  entry_visits_stddev_fields: ResolverTypeWrapper<Entry_Visits_Stddev_Fields>;
  entry_visits_stddev_pop_fields: ResolverTypeWrapper<Entry_Visits_Stddev_Pop_Fields>;
  entry_visits_stddev_samp_fields: ResolverTypeWrapper<Entry_Visits_Stddev_Samp_Fields>;
  entry_visits_sum_fields: ResolverTypeWrapper<Entry_Visits_Sum_Fields>;
  entry_visits_var_pop_fields: ResolverTypeWrapper<Entry_Visits_Var_Pop_Fields>;
  entry_visits_var_samp_fields: ResolverTypeWrapper<Entry_Visits_Var_Samp_Fields>;
  entry_visits_variance_fields: ResolverTypeWrapper<Entry_Visits_Variance_Fields>;
  file_types: ResolverTypeWrapper<File_Types>;
  file_types_aggregate: ResolverTypeWrapper<File_Types_Aggregate>;
  file_types_aggregate_fields: ResolverTypeWrapper<File_Types_Aggregate_Fields>;
  file_types_bool_exp: File_Types_Bool_Exp;
  file_types_constraint: File_Types_Constraint;
  file_types_enum: File_Types_Enum;
  file_types_enum_comparison_exp: File_Types_Enum_Comparison_Exp;
  file_types_insert_input: File_Types_Insert_Input;
  file_types_max_fields: ResolverTypeWrapper<File_Types_Max_Fields>;
  file_types_min_fields: ResolverTypeWrapper<File_Types_Min_Fields>;
  file_types_mutation_response: ResolverTypeWrapper<File_Types_Mutation_Response>;
  file_types_on_conflict: File_Types_On_Conflict;
  file_types_order_by: File_Types_Order_By;
  file_types_pk_columns_input: File_Types_Pk_Columns_Input;
  file_types_select_column: File_Types_Select_Column;
  file_types_set_input: File_Types_Set_Input;
  file_types_update_column: File_Types_Update_Column;
  files: ResolverTypeWrapper<Files>;
  files_aggregate: ResolverTypeWrapper<Files_Aggregate>;
  files_aggregate_fields: ResolverTypeWrapper<Files_Aggregate_Fields>;
  files_aggregate_order_by: Files_Aggregate_Order_By;
  files_arr_rel_insert_input: Files_Arr_Rel_Insert_Input;
  files_avg_fields: ResolverTypeWrapper<Files_Avg_Fields>;
  files_avg_order_by: Files_Avg_Order_By;
  files_bool_exp: Files_Bool_Exp;
  files_constraint: Files_Constraint;
  files_inc_input: Files_Inc_Input;
  files_insert_input: Files_Insert_Input;
  files_max_fields: ResolverTypeWrapper<Files_Max_Fields>;
  files_max_order_by: Files_Max_Order_By;
  files_min_fields: ResolverTypeWrapper<Files_Min_Fields>;
  files_min_order_by: Files_Min_Order_By;
  files_mutation_response: ResolverTypeWrapper<Files_Mutation_Response>;
  files_on_conflict: Files_On_Conflict;
  files_order_by: Files_Order_By;
  files_pk_columns_input: Files_Pk_Columns_Input;
  files_select_column: Files_Select_Column;
  files_set_input: Files_Set_Input;
  files_stddev_fields: ResolverTypeWrapper<Files_Stddev_Fields>;
  files_stddev_order_by: Files_Stddev_Order_By;
  files_stddev_pop_fields: ResolverTypeWrapper<Files_Stddev_Pop_Fields>;
  files_stddev_pop_order_by: Files_Stddev_Pop_Order_By;
  files_stddev_samp_fields: ResolverTypeWrapper<Files_Stddev_Samp_Fields>;
  files_stddev_samp_order_by: Files_Stddev_Samp_Order_By;
  files_sum_fields: ResolverTypeWrapper<Files_Sum_Fields>;
  files_sum_order_by: Files_Sum_Order_By;
  files_update_column: Files_Update_Column;
  files_var_pop_fields: ResolverTypeWrapper<Files_Var_Pop_Fields>;
  files_var_pop_order_by: Files_Var_Pop_Order_By;
  files_var_samp_fields: ResolverTypeWrapper<Files_Var_Samp_Fields>;
  files_var_samp_order_by: Files_Var_Samp_Order_By;
  files_variance_fields: ResolverTypeWrapper<Files_Variance_Fields>;
  files_variance_order_by: Files_Variance_Order_By;
  float8: ResolverTypeWrapper<Scalars['float8']>;
  geography: ResolverTypeWrapper<Scalars['geography']>;
  geography_cast_exp: Geography_Cast_Exp;
  geography_columns: ResolverTypeWrapper<Geography_Columns>;
  geography_columns_aggregate: ResolverTypeWrapper<Geography_Columns_Aggregate>;
  geography_columns_aggregate_fields: ResolverTypeWrapper<Geography_Columns_Aggregate_Fields>;
  geography_columns_avg_fields: ResolverTypeWrapper<Geography_Columns_Avg_Fields>;
  geography_columns_bool_exp: Geography_Columns_Bool_Exp;
  geography_columns_max_fields: ResolverTypeWrapper<Geography_Columns_Max_Fields>;
  geography_columns_min_fields: ResolverTypeWrapper<Geography_Columns_Min_Fields>;
  geography_columns_order_by: Geography_Columns_Order_By;
  geography_columns_select_column: Geography_Columns_Select_Column;
  geography_columns_stddev_fields: ResolverTypeWrapper<Geography_Columns_Stddev_Fields>;
  geography_columns_stddev_pop_fields: ResolverTypeWrapper<Geography_Columns_Stddev_Pop_Fields>;
  geography_columns_stddev_samp_fields: ResolverTypeWrapper<Geography_Columns_Stddev_Samp_Fields>;
  geography_columns_sum_fields: ResolverTypeWrapper<Geography_Columns_Sum_Fields>;
  geography_columns_var_pop_fields: ResolverTypeWrapper<Geography_Columns_Var_Pop_Fields>;
  geography_columns_var_samp_fields: ResolverTypeWrapper<Geography_Columns_Var_Samp_Fields>;
  geography_columns_variance_fields: ResolverTypeWrapper<Geography_Columns_Variance_Fields>;
  geography_comparison_exp: Geography_Comparison_Exp;
  geometry: ResolverTypeWrapper<Scalars['geometry']>;
  geometry_cast_exp: Geometry_Cast_Exp;
  geometry_columns: ResolverTypeWrapper<Geometry_Columns>;
  geometry_columns_aggregate: ResolverTypeWrapper<Geometry_Columns_Aggregate>;
  geometry_columns_aggregate_fields: ResolverTypeWrapper<Geometry_Columns_Aggregate_Fields>;
  geometry_columns_avg_fields: ResolverTypeWrapper<Geometry_Columns_Avg_Fields>;
  geometry_columns_bool_exp: Geometry_Columns_Bool_Exp;
  geometry_columns_inc_input: Geometry_Columns_Inc_Input;
  geometry_columns_insert_input: Geometry_Columns_Insert_Input;
  geometry_columns_max_fields: ResolverTypeWrapper<Geometry_Columns_Max_Fields>;
  geometry_columns_min_fields: ResolverTypeWrapper<Geometry_Columns_Min_Fields>;
  geometry_columns_mutation_response: ResolverTypeWrapper<Geometry_Columns_Mutation_Response>;
  geometry_columns_order_by: Geometry_Columns_Order_By;
  geometry_columns_select_column: Geometry_Columns_Select_Column;
  geometry_columns_set_input: Geometry_Columns_Set_Input;
  geometry_columns_stddev_fields: ResolverTypeWrapper<Geometry_Columns_Stddev_Fields>;
  geometry_columns_stddev_pop_fields: ResolverTypeWrapper<Geometry_Columns_Stddev_Pop_Fields>;
  geometry_columns_stddev_samp_fields: ResolverTypeWrapper<Geometry_Columns_Stddev_Samp_Fields>;
  geometry_columns_sum_fields: ResolverTypeWrapper<Geometry_Columns_Sum_Fields>;
  geometry_columns_var_pop_fields: ResolverTypeWrapper<Geometry_Columns_Var_Pop_Fields>;
  geometry_columns_var_samp_fields: ResolverTypeWrapper<Geometry_Columns_Var_Samp_Fields>;
  geometry_columns_variance_fields: ResolverTypeWrapper<Geometry_Columns_Variance_Fields>;
  geometry_comparison_exp: Geometry_Comparison_Exp;
  i18n: ResolverTypeWrapper<I18n>;
  i18n_aggregate: ResolverTypeWrapper<I18n_Aggregate>;
  i18n_aggregate_fields: ResolverTypeWrapper<I18n_Aggregate_Fields>;
  i18n_aggregate_order_by: I18n_Aggregate_Order_By;
  i18n_arr_rel_insert_input: I18n_Arr_Rel_Insert_Input;
  i18n_avg_fields: ResolverTypeWrapper<I18n_Avg_Fields>;
  i18n_avg_order_by: I18n_Avg_Order_By;
  i18n_bool_exp: I18n_Bool_Exp;
  i18n_categories: ResolverTypeWrapper<I18n_Categories>;
  i18n_categories_aggregate: ResolverTypeWrapper<I18n_Categories_Aggregate>;
  i18n_categories_aggregate_fields: ResolverTypeWrapper<I18n_Categories_Aggregate_Fields>;
  i18n_categories_bool_exp: I18n_Categories_Bool_Exp;
  i18n_categories_constraint: I18n_Categories_Constraint;
  i18n_categories_insert_input: I18n_Categories_Insert_Input;
  i18n_categories_max_fields: ResolverTypeWrapper<I18n_Categories_Max_Fields>;
  i18n_categories_min_fields: ResolverTypeWrapper<I18n_Categories_Min_Fields>;
  i18n_categories_mutation_response: ResolverTypeWrapper<I18n_Categories_Mutation_Response>;
  i18n_categories_obj_rel_insert_input: I18n_Categories_Obj_Rel_Insert_Input;
  i18n_categories_on_conflict: I18n_Categories_On_Conflict;
  i18n_categories_order_by: I18n_Categories_Order_By;
  i18n_categories_pk_columns_input: I18n_Categories_Pk_Columns_Input;
  i18n_categories_select_column: I18n_Categories_Select_Column;
  i18n_categories_set_input: I18n_Categories_Set_Input;
  i18n_categories_update_column: I18n_Categories_Update_Column;
  i18n_constraint: I18n_Constraint;
  i18n_inc_input: I18n_Inc_Input;
  i18n_insert_input: I18n_Insert_Input;
  i18n_max_fields: ResolverTypeWrapper<I18n_Max_Fields>;
  i18n_max_order_by: I18n_Max_Order_By;
  i18n_min_fields: ResolverTypeWrapper<I18n_Min_Fields>;
  i18n_min_order_by: I18n_Min_Order_By;
  i18n_mutation_response: ResolverTypeWrapper<I18n_Mutation_Response>;
  i18n_on_conflict: I18n_On_Conflict;
  i18n_order_by: I18n_Order_By;
  i18n_pk_columns_input: I18n_Pk_Columns_Input;
  i18n_select_column: I18n_Select_Column;
  i18n_set_input: I18n_Set_Input;
  i18n_stddev_fields: ResolverTypeWrapper<I18n_Stddev_Fields>;
  i18n_stddev_order_by: I18n_Stddev_Order_By;
  i18n_stddev_pop_fields: ResolverTypeWrapper<I18n_Stddev_Pop_Fields>;
  i18n_stddev_pop_order_by: I18n_Stddev_Pop_Order_By;
  i18n_stddev_samp_fields: ResolverTypeWrapper<I18n_Stddev_Samp_Fields>;
  i18n_stddev_samp_order_by: I18n_Stddev_Samp_Order_By;
  i18n_sum_fields: ResolverTypeWrapper<I18n_Sum_Fields>;
  i18n_sum_order_by: I18n_Sum_Order_By;
  i18n_update_column: I18n_Update_Column;
  i18n_var_pop_fields: ResolverTypeWrapper<I18n_Var_Pop_Fields>;
  i18n_var_pop_order_by: I18n_Var_Pop_Order_By;
  i18n_var_samp_fields: ResolverTypeWrapper<I18n_Var_Samp_Fields>;
  i18n_var_samp_order_by: I18n_Var_Samp_Order_By;
  i18n_variance_fields: ResolverTypeWrapper<I18n_Variance_Fields>;
  i18n_variance_order_by: I18n_Variance_Order_By;
  initiative_comment_reactions: ResolverTypeWrapper<Initiative_Comment_Reactions>;
  initiative_comment_reactions_aggregate: ResolverTypeWrapper<Initiative_Comment_Reactions_Aggregate>;
  initiative_comment_reactions_aggregate_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Aggregate_Fields>;
  initiative_comment_reactions_aggregate_order_by: Initiative_Comment_Reactions_Aggregate_Order_By;
  initiative_comment_reactions_arr_rel_insert_input: Initiative_Comment_Reactions_Arr_Rel_Insert_Input;
  initiative_comment_reactions_avg_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Avg_Fields>;
  initiative_comment_reactions_avg_order_by: Initiative_Comment_Reactions_Avg_Order_By;
  initiative_comment_reactions_bool_exp: Initiative_Comment_Reactions_Bool_Exp;
  initiative_comment_reactions_constraint: Initiative_Comment_Reactions_Constraint;
  initiative_comment_reactions_inc_input: Initiative_Comment_Reactions_Inc_Input;
  initiative_comment_reactions_insert_input: Initiative_Comment_Reactions_Insert_Input;
  initiative_comment_reactions_max_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Max_Fields>;
  initiative_comment_reactions_max_order_by: Initiative_Comment_Reactions_Max_Order_By;
  initiative_comment_reactions_min_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Min_Fields>;
  initiative_comment_reactions_min_order_by: Initiative_Comment_Reactions_Min_Order_By;
  initiative_comment_reactions_mutation_response: ResolverTypeWrapper<Initiative_Comment_Reactions_Mutation_Response>;
  initiative_comment_reactions_on_conflict: Initiative_Comment_Reactions_On_Conflict;
  initiative_comment_reactions_order_by: Initiative_Comment_Reactions_Order_By;
  initiative_comment_reactions_pk_columns_input: Initiative_Comment_Reactions_Pk_Columns_Input;
  initiative_comment_reactions_select_column: Initiative_Comment_Reactions_Select_Column;
  initiative_comment_reactions_set_input: Initiative_Comment_Reactions_Set_Input;
  initiative_comment_reactions_stddev_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Stddev_Fields>;
  initiative_comment_reactions_stddev_order_by: Initiative_Comment_Reactions_Stddev_Order_By;
  initiative_comment_reactions_stddev_pop_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Stddev_Pop_Fields>;
  initiative_comment_reactions_stddev_pop_order_by: Initiative_Comment_Reactions_Stddev_Pop_Order_By;
  initiative_comment_reactions_stddev_samp_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Stddev_Samp_Fields>;
  initiative_comment_reactions_stddev_samp_order_by: Initiative_Comment_Reactions_Stddev_Samp_Order_By;
  initiative_comment_reactions_sum_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Sum_Fields>;
  initiative_comment_reactions_sum_order_by: Initiative_Comment_Reactions_Sum_Order_By;
  initiative_comment_reactions_update_column: Initiative_Comment_Reactions_Update_Column;
  initiative_comment_reactions_var_pop_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Var_Pop_Fields>;
  initiative_comment_reactions_var_pop_order_by: Initiative_Comment_Reactions_Var_Pop_Order_By;
  initiative_comment_reactions_var_samp_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Var_Samp_Fields>;
  initiative_comment_reactions_var_samp_order_by: Initiative_Comment_Reactions_Var_Samp_Order_By;
  initiative_comment_reactions_variance_fields: ResolverTypeWrapper<Initiative_Comment_Reactions_Variance_Fields>;
  initiative_comment_reactions_variance_order_by: Initiative_Comment_Reactions_Variance_Order_By;
  initiative_comments: ResolverTypeWrapper<Initiative_Comments>;
  initiative_comments_aggregate: ResolverTypeWrapper<Initiative_Comments_Aggregate>;
  initiative_comments_aggregate_fields: ResolverTypeWrapper<Initiative_Comments_Aggregate_Fields>;
  initiative_comments_aggregate_order_by: Initiative_Comments_Aggregate_Order_By;
  initiative_comments_arr_rel_insert_input: Initiative_Comments_Arr_Rel_Insert_Input;
  initiative_comments_avg_fields: ResolverTypeWrapper<Initiative_Comments_Avg_Fields>;
  initiative_comments_avg_order_by: Initiative_Comments_Avg_Order_By;
  initiative_comments_bool_exp: Initiative_Comments_Bool_Exp;
  initiative_comments_constraint: Initiative_Comments_Constraint;
  initiative_comments_inc_input: Initiative_Comments_Inc_Input;
  initiative_comments_insert_input: Initiative_Comments_Insert_Input;
  initiative_comments_max_fields: ResolverTypeWrapper<Initiative_Comments_Max_Fields>;
  initiative_comments_max_order_by: Initiative_Comments_Max_Order_By;
  initiative_comments_min_fields: ResolverTypeWrapper<Initiative_Comments_Min_Fields>;
  initiative_comments_min_order_by: Initiative_Comments_Min_Order_By;
  initiative_comments_mutation_response: ResolverTypeWrapper<Initiative_Comments_Mutation_Response>;
  initiative_comments_obj_rel_insert_input: Initiative_Comments_Obj_Rel_Insert_Input;
  initiative_comments_on_conflict: Initiative_Comments_On_Conflict;
  initiative_comments_order_by: Initiative_Comments_Order_By;
  initiative_comments_pk_columns_input: Initiative_Comments_Pk_Columns_Input;
  initiative_comments_select_column: Initiative_Comments_Select_Column;
  initiative_comments_set_input: Initiative_Comments_Set_Input;
  initiative_comments_stddev_fields: ResolverTypeWrapper<Initiative_Comments_Stddev_Fields>;
  initiative_comments_stddev_order_by: Initiative_Comments_Stddev_Order_By;
  initiative_comments_stddev_pop_fields: ResolverTypeWrapper<Initiative_Comments_Stddev_Pop_Fields>;
  initiative_comments_stddev_pop_order_by: Initiative_Comments_Stddev_Pop_Order_By;
  initiative_comments_stddev_samp_fields: ResolverTypeWrapper<Initiative_Comments_Stddev_Samp_Fields>;
  initiative_comments_stddev_samp_order_by: Initiative_Comments_Stddev_Samp_Order_By;
  initiative_comments_sum_fields: ResolverTypeWrapper<Initiative_Comments_Sum_Fields>;
  initiative_comments_sum_order_by: Initiative_Comments_Sum_Order_By;
  initiative_comments_update_column: Initiative_Comments_Update_Column;
  initiative_comments_var_pop_fields: ResolverTypeWrapper<Initiative_Comments_Var_Pop_Fields>;
  initiative_comments_var_pop_order_by: Initiative_Comments_Var_Pop_Order_By;
  initiative_comments_var_samp_fields: ResolverTypeWrapper<Initiative_Comments_Var_Samp_Fields>;
  initiative_comments_var_samp_order_by: Initiative_Comments_Var_Samp_Order_By;
  initiative_comments_variance_fields: ResolverTypeWrapper<Initiative_Comments_Variance_Fields>;
  initiative_comments_variance_order_by: Initiative_Comments_Variance_Order_By;
  initiative_donations: ResolverTypeWrapper<Initiative_Donations>;
  initiative_donations_aggregate: ResolverTypeWrapper<Initiative_Donations_Aggregate>;
  initiative_donations_aggregate_fields: ResolverTypeWrapper<Initiative_Donations_Aggregate_Fields>;
  initiative_donations_aggregate_order_by: Initiative_Donations_Aggregate_Order_By;
  initiative_donations_arr_rel_insert_input: Initiative_Donations_Arr_Rel_Insert_Input;
  initiative_donations_avg_fields: ResolverTypeWrapper<Initiative_Donations_Avg_Fields>;
  initiative_donations_avg_order_by: Initiative_Donations_Avg_Order_By;
  initiative_donations_bool_exp: Initiative_Donations_Bool_Exp;
  initiative_donations_constraint: Initiative_Donations_Constraint;
  initiative_donations_inc_input: Initiative_Donations_Inc_Input;
  initiative_donations_insert_input: Initiative_Donations_Insert_Input;
  initiative_donations_max_fields: ResolverTypeWrapper<Initiative_Donations_Max_Fields>;
  initiative_donations_max_order_by: Initiative_Donations_Max_Order_By;
  initiative_donations_min_fields: ResolverTypeWrapper<Initiative_Donations_Min_Fields>;
  initiative_donations_min_order_by: Initiative_Donations_Min_Order_By;
  initiative_donations_mutation_response: ResolverTypeWrapper<Initiative_Donations_Mutation_Response>;
  initiative_donations_on_conflict: Initiative_Donations_On_Conflict;
  initiative_donations_order_by: Initiative_Donations_Order_By;
  initiative_donations_pk_columns_input: Initiative_Donations_Pk_Columns_Input;
  initiative_donations_select_column: Initiative_Donations_Select_Column;
  initiative_donations_set_input: Initiative_Donations_Set_Input;
  initiative_donations_stddev_fields: ResolverTypeWrapper<Initiative_Donations_Stddev_Fields>;
  initiative_donations_stddev_order_by: Initiative_Donations_Stddev_Order_By;
  initiative_donations_stddev_pop_fields: ResolverTypeWrapper<Initiative_Donations_Stddev_Pop_Fields>;
  initiative_donations_stddev_pop_order_by: Initiative_Donations_Stddev_Pop_Order_By;
  initiative_donations_stddev_samp_fields: ResolverTypeWrapper<Initiative_Donations_Stddev_Samp_Fields>;
  initiative_donations_stddev_samp_order_by: Initiative_Donations_Stddev_Samp_Order_By;
  initiative_donations_sum_fields: ResolverTypeWrapper<Initiative_Donations_Sum_Fields>;
  initiative_donations_sum_order_by: Initiative_Donations_Sum_Order_By;
  initiative_donations_update_column: Initiative_Donations_Update_Column;
  initiative_donations_var_pop_fields: ResolverTypeWrapper<Initiative_Donations_Var_Pop_Fields>;
  initiative_donations_var_pop_order_by: Initiative_Donations_Var_Pop_Order_By;
  initiative_donations_var_samp_fields: ResolverTypeWrapper<Initiative_Donations_Var_Samp_Fields>;
  initiative_donations_var_samp_order_by: Initiative_Donations_Var_Samp_Order_By;
  initiative_donations_variance_fields: ResolverTypeWrapper<Initiative_Donations_Variance_Fields>;
  initiative_donations_variance_order_by: Initiative_Donations_Variance_Order_By;
  initiative_edits: ResolverTypeWrapper<Initiative_Edits>;
  initiative_edits_aggregate: ResolverTypeWrapper<Initiative_Edits_Aggregate>;
  initiative_edits_aggregate_fields: ResolverTypeWrapper<Initiative_Edits_Aggregate_Fields>;
  initiative_edits_aggregate_order_by: Initiative_Edits_Aggregate_Order_By;
  initiative_edits_arr_rel_insert_input: Initiative_Edits_Arr_Rel_Insert_Input;
  initiative_edits_avg_fields: ResolverTypeWrapper<Initiative_Edits_Avg_Fields>;
  initiative_edits_avg_order_by: Initiative_Edits_Avg_Order_By;
  initiative_edits_bool_exp: Initiative_Edits_Bool_Exp;
  initiative_edits_constraint: Initiative_Edits_Constraint;
  initiative_edits_inc_input: Initiative_Edits_Inc_Input;
  initiative_edits_insert_input: Initiative_Edits_Insert_Input;
  initiative_edits_max_fields: ResolverTypeWrapper<Initiative_Edits_Max_Fields>;
  initiative_edits_max_order_by: Initiative_Edits_Max_Order_By;
  initiative_edits_min_fields: ResolverTypeWrapper<Initiative_Edits_Min_Fields>;
  initiative_edits_min_order_by: Initiative_Edits_Min_Order_By;
  initiative_edits_mutation_response: ResolverTypeWrapper<Initiative_Edits_Mutation_Response>;
  initiative_edits_on_conflict: Initiative_Edits_On_Conflict;
  initiative_edits_order_by: Initiative_Edits_Order_By;
  initiative_edits_pk_columns_input: Initiative_Edits_Pk_Columns_Input;
  initiative_edits_select_column: Initiative_Edits_Select_Column;
  initiative_edits_set_input: Initiative_Edits_Set_Input;
  initiative_edits_stddev_fields: ResolverTypeWrapper<Initiative_Edits_Stddev_Fields>;
  initiative_edits_stddev_order_by: Initiative_Edits_Stddev_Order_By;
  initiative_edits_stddev_pop_fields: ResolverTypeWrapper<Initiative_Edits_Stddev_Pop_Fields>;
  initiative_edits_stddev_pop_order_by: Initiative_Edits_Stddev_Pop_Order_By;
  initiative_edits_stddev_samp_fields: ResolverTypeWrapper<Initiative_Edits_Stddev_Samp_Fields>;
  initiative_edits_stddev_samp_order_by: Initiative_Edits_Stddev_Samp_Order_By;
  initiative_edits_sum_fields: ResolverTypeWrapper<Initiative_Edits_Sum_Fields>;
  initiative_edits_sum_order_by: Initiative_Edits_Sum_Order_By;
  initiative_edits_update_column: Initiative_Edits_Update_Column;
  initiative_edits_var_pop_fields: ResolverTypeWrapper<Initiative_Edits_Var_Pop_Fields>;
  initiative_edits_var_pop_order_by: Initiative_Edits_Var_Pop_Order_By;
  initiative_edits_var_samp_fields: ResolverTypeWrapper<Initiative_Edits_Var_Samp_Fields>;
  initiative_edits_var_samp_order_by: Initiative_Edits_Var_Samp_Order_By;
  initiative_edits_variance_fields: ResolverTypeWrapper<Initiative_Edits_Variance_Fields>;
  initiative_edits_variance_order_by: Initiative_Edits_Variance_Order_By;
  initiative_expenses: ResolverTypeWrapper<Initiative_Expenses>;
  initiative_expenses_aggregate: ResolverTypeWrapper<Initiative_Expenses_Aggregate>;
  initiative_expenses_aggregate_fields: ResolverTypeWrapper<Initiative_Expenses_Aggregate_Fields>;
  initiative_expenses_aggregate_order_by: Initiative_Expenses_Aggregate_Order_By;
  initiative_expenses_arr_rel_insert_input: Initiative_Expenses_Arr_Rel_Insert_Input;
  initiative_expenses_avg_fields: ResolverTypeWrapper<Initiative_Expenses_Avg_Fields>;
  initiative_expenses_avg_order_by: Initiative_Expenses_Avg_Order_By;
  initiative_expenses_bool_exp: Initiative_Expenses_Bool_Exp;
  initiative_expenses_constraint: Initiative_Expenses_Constraint;
  initiative_expenses_inc_input: Initiative_Expenses_Inc_Input;
  initiative_expenses_insert_input: Initiative_Expenses_Insert_Input;
  initiative_expenses_max_fields: ResolverTypeWrapper<Initiative_Expenses_Max_Fields>;
  initiative_expenses_max_order_by: Initiative_Expenses_Max_Order_By;
  initiative_expenses_min_fields: ResolverTypeWrapper<Initiative_Expenses_Min_Fields>;
  initiative_expenses_min_order_by: Initiative_Expenses_Min_Order_By;
  initiative_expenses_mutation_response: ResolverTypeWrapper<Initiative_Expenses_Mutation_Response>;
  initiative_expenses_on_conflict: Initiative_Expenses_On_Conflict;
  initiative_expenses_order_by: Initiative_Expenses_Order_By;
  initiative_expenses_pk_columns_input: Initiative_Expenses_Pk_Columns_Input;
  initiative_expenses_select_column: Initiative_Expenses_Select_Column;
  initiative_expenses_set_input: Initiative_Expenses_Set_Input;
  initiative_expenses_stddev_fields: ResolverTypeWrapper<Initiative_Expenses_Stddev_Fields>;
  initiative_expenses_stddev_order_by: Initiative_Expenses_Stddev_Order_By;
  initiative_expenses_stddev_pop_fields: ResolverTypeWrapper<Initiative_Expenses_Stddev_Pop_Fields>;
  initiative_expenses_stddev_pop_order_by: Initiative_Expenses_Stddev_Pop_Order_By;
  initiative_expenses_stddev_samp_fields: ResolverTypeWrapper<Initiative_Expenses_Stddev_Samp_Fields>;
  initiative_expenses_stddev_samp_order_by: Initiative_Expenses_Stddev_Samp_Order_By;
  initiative_expenses_sum_fields: ResolverTypeWrapper<Initiative_Expenses_Sum_Fields>;
  initiative_expenses_sum_order_by: Initiative_Expenses_Sum_Order_By;
  initiative_expenses_update_column: Initiative_Expenses_Update_Column;
  initiative_expenses_var_pop_fields: ResolverTypeWrapper<Initiative_Expenses_Var_Pop_Fields>;
  initiative_expenses_var_pop_order_by: Initiative_Expenses_Var_Pop_Order_By;
  initiative_expenses_var_samp_fields: ResolverTypeWrapper<Initiative_Expenses_Var_Samp_Fields>;
  initiative_expenses_var_samp_order_by: Initiative_Expenses_Var_Samp_Order_By;
  initiative_expenses_variance_fields: ResolverTypeWrapper<Initiative_Expenses_Variance_Fields>;
  initiative_expenses_variance_order_by: Initiative_Expenses_Variance_Order_By;
  initiative_info: ResolverTypeWrapper<Initiative_Info>;
  initiative_info_aggregate: ResolverTypeWrapper<Initiative_Info_Aggregate>;
  initiative_info_aggregate_fields: ResolverTypeWrapper<Initiative_Info_Aggregate_Fields>;
  initiative_info_aggregate_order_by: Initiative_Info_Aggregate_Order_By;
  initiative_info_arr_rel_insert_input: Initiative_Info_Arr_Rel_Insert_Input;
  initiative_info_avg_fields: ResolverTypeWrapper<Initiative_Info_Avg_Fields>;
  initiative_info_avg_order_by: Initiative_Info_Avg_Order_By;
  initiative_info_bool_exp: Initiative_Info_Bool_Exp;
  initiative_info_constraint: Initiative_Info_Constraint;
  initiative_info_inc_input: Initiative_Info_Inc_Input;
  initiative_info_insert_input: Initiative_Info_Insert_Input;
  initiative_info_max_fields: ResolverTypeWrapper<Initiative_Info_Max_Fields>;
  initiative_info_max_order_by: Initiative_Info_Max_Order_By;
  initiative_info_min_fields: ResolverTypeWrapper<Initiative_Info_Min_Fields>;
  initiative_info_min_order_by: Initiative_Info_Min_Order_By;
  initiative_info_mutation_response: ResolverTypeWrapper<Initiative_Info_Mutation_Response>;
  initiative_info_obj_rel_insert_input: Initiative_Info_Obj_Rel_Insert_Input;
  initiative_info_on_conflict: Initiative_Info_On_Conflict;
  initiative_info_order_by: Initiative_Info_Order_By;
  initiative_info_pk_columns_input: Initiative_Info_Pk_Columns_Input;
  initiative_info_select_column: Initiative_Info_Select_Column;
  initiative_info_set_input: Initiative_Info_Set_Input;
  initiative_info_stddev_fields: ResolverTypeWrapper<Initiative_Info_Stddev_Fields>;
  initiative_info_stddev_order_by: Initiative_Info_Stddev_Order_By;
  initiative_info_stddev_pop_fields: ResolverTypeWrapper<Initiative_Info_Stddev_Pop_Fields>;
  initiative_info_stddev_pop_order_by: Initiative_Info_Stddev_Pop_Order_By;
  initiative_info_stddev_samp_fields: ResolverTypeWrapper<Initiative_Info_Stddev_Samp_Fields>;
  initiative_info_stddev_samp_order_by: Initiative_Info_Stddev_Samp_Order_By;
  initiative_info_sum_fields: ResolverTypeWrapper<Initiative_Info_Sum_Fields>;
  initiative_info_sum_order_by: Initiative_Info_Sum_Order_By;
  initiative_info_update_column: Initiative_Info_Update_Column;
  initiative_info_var_pop_fields: ResolverTypeWrapper<Initiative_Info_Var_Pop_Fields>;
  initiative_info_var_pop_order_by: Initiative_Info_Var_Pop_Order_By;
  initiative_info_var_samp_fields: ResolverTypeWrapper<Initiative_Info_Var_Samp_Fields>;
  initiative_info_var_samp_order_by: Initiative_Info_Var_Samp_Order_By;
  initiative_info_variance_fields: ResolverTypeWrapper<Initiative_Info_Variance_Fields>;
  initiative_info_variance_order_by: Initiative_Info_Variance_Order_By;
  initiative_members: ResolverTypeWrapper<Initiative_Members>;
  initiative_members_aggregate: ResolverTypeWrapper<Initiative_Members_Aggregate>;
  initiative_members_aggregate_fields: ResolverTypeWrapper<Initiative_Members_Aggregate_Fields>;
  initiative_members_aggregate_order_by: Initiative_Members_Aggregate_Order_By;
  initiative_members_arr_rel_insert_input: Initiative_Members_Arr_Rel_Insert_Input;
  initiative_members_avg_fields: ResolverTypeWrapper<Initiative_Members_Avg_Fields>;
  initiative_members_avg_order_by: Initiative_Members_Avg_Order_By;
  initiative_members_bool_exp: Initiative_Members_Bool_Exp;
  initiative_members_constraint: Initiative_Members_Constraint;
  initiative_members_inc_input: Initiative_Members_Inc_Input;
  initiative_members_insert_input: Initiative_Members_Insert_Input;
  initiative_members_max_fields: ResolverTypeWrapper<Initiative_Members_Max_Fields>;
  initiative_members_max_order_by: Initiative_Members_Max_Order_By;
  initiative_members_min_fields: ResolverTypeWrapper<Initiative_Members_Min_Fields>;
  initiative_members_min_order_by: Initiative_Members_Min_Order_By;
  initiative_members_mutation_response: ResolverTypeWrapper<Initiative_Members_Mutation_Response>;
  initiative_members_on_conflict: Initiative_Members_On_Conflict;
  initiative_members_order_by: Initiative_Members_Order_By;
  initiative_members_pk_columns_input: Initiative_Members_Pk_Columns_Input;
  initiative_members_select_column: Initiative_Members_Select_Column;
  initiative_members_set_input: Initiative_Members_Set_Input;
  initiative_members_stddev_fields: ResolverTypeWrapper<Initiative_Members_Stddev_Fields>;
  initiative_members_stddev_order_by: Initiative_Members_Stddev_Order_By;
  initiative_members_stddev_pop_fields: ResolverTypeWrapper<Initiative_Members_Stddev_Pop_Fields>;
  initiative_members_stddev_pop_order_by: Initiative_Members_Stddev_Pop_Order_By;
  initiative_members_stddev_samp_fields: ResolverTypeWrapper<Initiative_Members_Stddev_Samp_Fields>;
  initiative_members_stddev_samp_order_by: Initiative_Members_Stddev_Samp_Order_By;
  initiative_members_sum_fields: ResolverTypeWrapper<Initiative_Members_Sum_Fields>;
  initiative_members_sum_order_by: Initiative_Members_Sum_Order_By;
  initiative_members_update_column: Initiative_Members_Update_Column;
  initiative_members_var_pop_fields: ResolverTypeWrapper<Initiative_Members_Var_Pop_Fields>;
  initiative_members_var_pop_order_by: Initiative_Members_Var_Pop_Order_By;
  initiative_members_var_samp_fields: ResolverTypeWrapper<Initiative_Members_Var_Samp_Fields>;
  initiative_members_var_samp_order_by: Initiative_Members_Var_Samp_Order_By;
  initiative_members_variance_fields: ResolverTypeWrapper<Initiative_Members_Variance_Fields>;
  initiative_members_variance_order_by: Initiative_Members_Variance_Order_By;
  initiative_poll_votes: ResolverTypeWrapper<Initiative_Poll_Votes>;
  initiative_poll_votes_aggregate: ResolverTypeWrapper<Initiative_Poll_Votes_Aggregate>;
  initiative_poll_votes_aggregate_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Aggregate_Fields>;
  initiative_poll_votes_aggregate_order_by: Initiative_Poll_Votes_Aggregate_Order_By;
  initiative_poll_votes_arr_rel_insert_input: Initiative_Poll_Votes_Arr_Rel_Insert_Input;
  initiative_poll_votes_avg_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Avg_Fields>;
  initiative_poll_votes_avg_order_by: Initiative_Poll_Votes_Avg_Order_By;
  initiative_poll_votes_bool_exp: Initiative_Poll_Votes_Bool_Exp;
  initiative_poll_votes_constraint: Initiative_Poll_Votes_Constraint;
  initiative_poll_votes_inc_input: Initiative_Poll_Votes_Inc_Input;
  initiative_poll_votes_insert_input: Initiative_Poll_Votes_Insert_Input;
  initiative_poll_votes_max_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Max_Fields>;
  initiative_poll_votes_max_order_by: Initiative_Poll_Votes_Max_Order_By;
  initiative_poll_votes_min_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Min_Fields>;
  initiative_poll_votes_min_order_by: Initiative_Poll_Votes_Min_Order_By;
  initiative_poll_votes_mutation_response: ResolverTypeWrapper<Initiative_Poll_Votes_Mutation_Response>;
  initiative_poll_votes_on_conflict: Initiative_Poll_Votes_On_Conflict;
  initiative_poll_votes_order_by: Initiative_Poll_Votes_Order_By;
  initiative_poll_votes_pk_columns_input: Initiative_Poll_Votes_Pk_Columns_Input;
  initiative_poll_votes_select_column: Initiative_Poll_Votes_Select_Column;
  initiative_poll_votes_set_input: Initiative_Poll_Votes_Set_Input;
  initiative_poll_votes_stddev_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Stddev_Fields>;
  initiative_poll_votes_stddev_order_by: Initiative_Poll_Votes_Stddev_Order_By;
  initiative_poll_votes_stddev_pop_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Stddev_Pop_Fields>;
  initiative_poll_votes_stddev_pop_order_by: Initiative_Poll_Votes_Stddev_Pop_Order_By;
  initiative_poll_votes_stddev_samp_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Stddev_Samp_Fields>;
  initiative_poll_votes_stddev_samp_order_by: Initiative_Poll_Votes_Stddev_Samp_Order_By;
  initiative_poll_votes_sum_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Sum_Fields>;
  initiative_poll_votes_sum_order_by: Initiative_Poll_Votes_Sum_Order_By;
  initiative_poll_votes_update_column: Initiative_Poll_Votes_Update_Column;
  initiative_poll_votes_var_pop_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Var_Pop_Fields>;
  initiative_poll_votes_var_pop_order_by: Initiative_Poll_Votes_Var_Pop_Order_By;
  initiative_poll_votes_var_samp_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Var_Samp_Fields>;
  initiative_poll_votes_var_samp_order_by: Initiative_Poll_Votes_Var_Samp_Order_By;
  initiative_poll_votes_variance_fields: ResolverTypeWrapper<Initiative_Poll_Votes_Variance_Fields>;
  initiative_poll_votes_variance_order_by: Initiative_Poll_Votes_Variance_Order_By;
  initiative_polls: ResolverTypeWrapper<Initiative_Polls>;
  initiative_polls_aggregate: ResolverTypeWrapper<Initiative_Polls_Aggregate>;
  initiative_polls_aggregate_fields: ResolverTypeWrapper<Initiative_Polls_Aggregate_Fields>;
  initiative_polls_aggregate_order_by: Initiative_Polls_Aggregate_Order_By;
  initiative_polls_arr_rel_insert_input: Initiative_Polls_Arr_Rel_Insert_Input;
  initiative_polls_avg_fields: ResolverTypeWrapper<Initiative_Polls_Avg_Fields>;
  initiative_polls_avg_order_by: Initiative_Polls_Avg_Order_By;
  initiative_polls_bool_exp: Initiative_Polls_Bool_Exp;
  initiative_polls_constraint: Initiative_Polls_Constraint;
  initiative_polls_inc_input: Initiative_Polls_Inc_Input;
  initiative_polls_insert_input: Initiative_Polls_Insert_Input;
  initiative_polls_max_fields: ResolverTypeWrapper<Initiative_Polls_Max_Fields>;
  initiative_polls_max_order_by: Initiative_Polls_Max_Order_By;
  initiative_polls_min_fields: ResolverTypeWrapper<Initiative_Polls_Min_Fields>;
  initiative_polls_min_order_by: Initiative_Polls_Min_Order_By;
  initiative_polls_mutation_response: ResolverTypeWrapper<Initiative_Polls_Mutation_Response>;
  initiative_polls_obj_rel_insert_input: Initiative_Polls_Obj_Rel_Insert_Input;
  initiative_polls_on_conflict: Initiative_Polls_On_Conflict;
  initiative_polls_order_by: Initiative_Polls_Order_By;
  initiative_polls_pk_columns_input: Initiative_Polls_Pk_Columns_Input;
  initiative_polls_select_column: Initiative_Polls_Select_Column;
  initiative_polls_set_input: Initiative_Polls_Set_Input;
  initiative_polls_stddev_fields: ResolverTypeWrapper<Initiative_Polls_Stddev_Fields>;
  initiative_polls_stddev_order_by: Initiative_Polls_Stddev_Order_By;
  initiative_polls_stddev_pop_fields: ResolverTypeWrapper<Initiative_Polls_Stddev_Pop_Fields>;
  initiative_polls_stddev_pop_order_by: Initiative_Polls_Stddev_Pop_Order_By;
  initiative_polls_stddev_samp_fields: ResolverTypeWrapper<Initiative_Polls_Stddev_Samp_Fields>;
  initiative_polls_stddev_samp_order_by: Initiative_Polls_Stddev_Samp_Order_By;
  initiative_polls_sum_fields: ResolverTypeWrapper<Initiative_Polls_Sum_Fields>;
  initiative_polls_sum_order_by: Initiative_Polls_Sum_Order_By;
  initiative_polls_update_column: Initiative_Polls_Update_Column;
  initiative_polls_var_pop_fields: ResolverTypeWrapper<Initiative_Polls_Var_Pop_Fields>;
  initiative_polls_var_pop_order_by: Initiative_Polls_Var_Pop_Order_By;
  initiative_polls_var_samp_fields: ResolverTypeWrapper<Initiative_Polls_Var_Samp_Fields>;
  initiative_polls_var_samp_order_by: Initiative_Polls_Var_Samp_Order_By;
  initiative_polls_variance_fields: ResolverTypeWrapper<Initiative_Polls_Variance_Fields>;
  initiative_polls_variance_order_by: Initiative_Polls_Variance_Order_By;
  initiative_post_reactions: ResolverTypeWrapper<Initiative_Post_Reactions>;
  initiative_post_reactions_aggregate: ResolverTypeWrapper<Initiative_Post_Reactions_Aggregate>;
  initiative_post_reactions_aggregate_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Aggregate_Fields>;
  initiative_post_reactions_aggregate_order_by: Initiative_Post_Reactions_Aggregate_Order_By;
  initiative_post_reactions_arr_rel_insert_input: Initiative_Post_Reactions_Arr_Rel_Insert_Input;
  initiative_post_reactions_avg_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Avg_Fields>;
  initiative_post_reactions_avg_order_by: Initiative_Post_Reactions_Avg_Order_By;
  initiative_post_reactions_bool_exp: Initiative_Post_Reactions_Bool_Exp;
  initiative_post_reactions_constraint: Initiative_Post_Reactions_Constraint;
  initiative_post_reactions_inc_input: Initiative_Post_Reactions_Inc_Input;
  initiative_post_reactions_insert_input: Initiative_Post_Reactions_Insert_Input;
  initiative_post_reactions_max_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Max_Fields>;
  initiative_post_reactions_max_order_by: Initiative_Post_Reactions_Max_Order_By;
  initiative_post_reactions_min_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Min_Fields>;
  initiative_post_reactions_min_order_by: Initiative_Post_Reactions_Min_Order_By;
  initiative_post_reactions_mutation_response: ResolverTypeWrapper<Initiative_Post_Reactions_Mutation_Response>;
  initiative_post_reactions_on_conflict: Initiative_Post_Reactions_On_Conflict;
  initiative_post_reactions_order_by: Initiative_Post_Reactions_Order_By;
  initiative_post_reactions_pk_columns_input: Initiative_Post_Reactions_Pk_Columns_Input;
  initiative_post_reactions_select_column: Initiative_Post_Reactions_Select_Column;
  initiative_post_reactions_set_input: Initiative_Post_Reactions_Set_Input;
  initiative_post_reactions_stddev_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Stddev_Fields>;
  initiative_post_reactions_stddev_order_by: Initiative_Post_Reactions_Stddev_Order_By;
  initiative_post_reactions_stddev_pop_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Stddev_Pop_Fields>;
  initiative_post_reactions_stddev_pop_order_by: Initiative_Post_Reactions_Stddev_Pop_Order_By;
  initiative_post_reactions_stddev_samp_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Stddev_Samp_Fields>;
  initiative_post_reactions_stddev_samp_order_by: Initiative_Post_Reactions_Stddev_Samp_Order_By;
  initiative_post_reactions_sum_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Sum_Fields>;
  initiative_post_reactions_sum_order_by: Initiative_Post_Reactions_Sum_Order_By;
  initiative_post_reactions_update_column: Initiative_Post_Reactions_Update_Column;
  initiative_post_reactions_var_pop_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Var_Pop_Fields>;
  initiative_post_reactions_var_pop_order_by: Initiative_Post_Reactions_Var_Pop_Order_By;
  initiative_post_reactions_var_samp_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Var_Samp_Fields>;
  initiative_post_reactions_var_samp_order_by: Initiative_Post_Reactions_Var_Samp_Order_By;
  initiative_post_reactions_variance_fields: ResolverTypeWrapper<Initiative_Post_Reactions_Variance_Fields>;
  initiative_post_reactions_variance_order_by: Initiative_Post_Reactions_Variance_Order_By;
  initiative_posts: ResolverTypeWrapper<Initiative_Posts>;
  initiative_posts_aggregate: ResolverTypeWrapper<Initiative_Posts_Aggregate>;
  initiative_posts_aggregate_fields: ResolverTypeWrapper<Initiative_Posts_Aggregate_Fields>;
  initiative_posts_aggregate_order_by: Initiative_Posts_Aggregate_Order_By;
  initiative_posts_arr_rel_insert_input: Initiative_Posts_Arr_Rel_Insert_Input;
  initiative_posts_avg_fields: ResolverTypeWrapper<Initiative_Posts_Avg_Fields>;
  initiative_posts_avg_order_by: Initiative_Posts_Avg_Order_By;
  initiative_posts_bool_exp: Initiative_Posts_Bool_Exp;
  initiative_posts_constraint: Initiative_Posts_Constraint;
  initiative_posts_inc_input: Initiative_Posts_Inc_Input;
  initiative_posts_insert_input: Initiative_Posts_Insert_Input;
  initiative_posts_max_fields: ResolverTypeWrapper<Initiative_Posts_Max_Fields>;
  initiative_posts_max_order_by: Initiative_Posts_Max_Order_By;
  initiative_posts_min_fields: ResolverTypeWrapper<Initiative_Posts_Min_Fields>;
  initiative_posts_min_order_by: Initiative_Posts_Min_Order_By;
  initiative_posts_mutation_response: ResolverTypeWrapper<Initiative_Posts_Mutation_Response>;
  initiative_posts_obj_rel_insert_input: Initiative_Posts_Obj_Rel_Insert_Input;
  initiative_posts_on_conflict: Initiative_Posts_On_Conflict;
  initiative_posts_order_by: Initiative_Posts_Order_By;
  initiative_posts_pk_columns_input: Initiative_Posts_Pk_Columns_Input;
  initiative_posts_select_column: Initiative_Posts_Select_Column;
  initiative_posts_set_input: Initiative_Posts_Set_Input;
  initiative_posts_stddev_fields: ResolverTypeWrapper<Initiative_Posts_Stddev_Fields>;
  initiative_posts_stddev_order_by: Initiative_Posts_Stddev_Order_By;
  initiative_posts_stddev_pop_fields: ResolverTypeWrapper<Initiative_Posts_Stddev_Pop_Fields>;
  initiative_posts_stddev_pop_order_by: Initiative_Posts_Stddev_Pop_Order_By;
  initiative_posts_stddev_samp_fields: ResolverTypeWrapper<Initiative_Posts_Stddev_Samp_Fields>;
  initiative_posts_stddev_samp_order_by: Initiative_Posts_Stddev_Samp_Order_By;
  initiative_posts_sum_fields: ResolverTypeWrapper<Initiative_Posts_Sum_Fields>;
  initiative_posts_sum_order_by: Initiative_Posts_Sum_Order_By;
  initiative_posts_update_column: Initiative_Posts_Update_Column;
  initiative_posts_var_pop_fields: ResolverTypeWrapper<Initiative_Posts_Var_Pop_Fields>;
  initiative_posts_var_pop_order_by: Initiative_Posts_Var_Pop_Order_By;
  initiative_posts_var_samp_fields: ResolverTypeWrapper<Initiative_Posts_Var_Samp_Fields>;
  initiative_posts_var_samp_order_by: Initiative_Posts_Var_Samp_Order_By;
  initiative_posts_variance_fields: ResolverTypeWrapper<Initiative_Posts_Variance_Fields>;
  initiative_posts_variance_order_by: Initiative_Posts_Variance_Order_By;
  initiative_projects: ResolverTypeWrapper<Initiative_Projects>;
  initiative_projects_aggregate: ResolverTypeWrapper<Initiative_Projects_Aggregate>;
  initiative_projects_aggregate_fields: ResolverTypeWrapper<Initiative_Projects_Aggregate_Fields>;
  initiative_projects_aggregate_order_by: Initiative_Projects_Aggregate_Order_By;
  initiative_projects_arr_rel_insert_input: Initiative_Projects_Arr_Rel_Insert_Input;
  initiative_projects_avg_fields: ResolverTypeWrapper<Initiative_Projects_Avg_Fields>;
  initiative_projects_avg_order_by: Initiative_Projects_Avg_Order_By;
  initiative_projects_bool_exp: Initiative_Projects_Bool_Exp;
  initiative_projects_constraint: Initiative_Projects_Constraint;
  initiative_projects_inc_input: Initiative_Projects_Inc_Input;
  initiative_projects_insert_input: Initiative_Projects_Insert_Input;
  initiative_projects_max_fields: ResolverTypeWrapper<Initiative_Projects_Max_Fields>;
  initiative_projects_max_order_by: Initiative_Projects_Max_Order_By;
  initiative_projects_min_fields: ResolverTypeWrapper<Initiative_Projects_Min_Fields>;
  initiative_projects_min_order_by: Initiative_Projects_Min_Order_By;
  initiative_projects_mutation_response: ResolverTypeWrapper<Initiative_Projects_Mutation_Response>;
  initiative_projects_on_conflict: Initiative_Projects_On_Conflict;
  initiative_projects_order_by: Initiative_Projects_Order_By;
  initiative_projects_pk_columns_input: Initiative_Projects_Pk_Columns_Input;
  initiative_projects_select_column: Initiative_Projects_Select_Column;
  initiative_projects_set_input: Initiative_Projects_Set_Input;
  initiative_projects_stddev_fields: ResolverTypeWrapper<Initiative_Projects_Stddev_Fields>;
  initiative_projects_stddev_order_by: Initiative_Projects_Stddev_Order_By;
  initiative_projects_stddev_pop_fields: ResolverTypeWrapper<Initiative_Projects_Stddev_Pop_Fields>;
  initiative_projects_stddev_pop_order_by: Initiative_Projects_Stddev_Pop_Order_By;
  initiative_projects_stddev_samp_fields: ResolverTypeWrapper<Initiative_Projects_Stddev_Samp_Fields>;
  initiative_projects_stddev_samp_order_by: Initiative_Projects_Stddev_Samp_Order_By;
  initiative_projects_sum_fields: ResolverTypeWrapper<Initiative_Projects_Sum_Fields>;
  initiative_projects_sum_order_by: Initiative_Projects_Sum_Order_By;
  initiative_projects_update_column: Initiative_Projects_Update_Column;
  initiative_projects_var_pop_fields: ResolverTypeWrapper<Initiative_Projects_Var_Pop_Fields>;
  initiative_projects_var_pop_order_by: Initiative_Projects_Var_Pop_Order_By;
  initiative_projects_var_samp_fields: ResolverTypeWrapper<Initiative_Projects_Var_Samp_Fields>;
  initiative_projects_var_samp_order_by: Initiative_Projects_Var_Samp_Order_By;
  initiative_projects_variance_fields: ResolverTypeWrapper<Initiative_Projects_Variance_Fields>;
  initiative_projects_variance_order_by: Initiative_Projects_Variance_Order_By;
  initiative_tags: ResolverTypeWrapper<Initiative_Tags>;
  initiative_tags_aggregate: ResolverTypeWrapper<Initiative_Tags_Aggregate>;
  initiative_tags_aggregate_fields: ResolverTypeWrapper<Initiative_Tags_Aggregate_Fields>;
  initiative_tags_aggregate_order_by: Initiative_Tags_Aggregate_Order_By;
  initiative_tags_arr_rel_insert_input: Initiative_Tags_Arr_Rel_Insert_Input;
  initiative_tags_avg_fields: ResolverTypeWrapper<Initiative_Tags_Avg_Fields>;
  initiative_tags_avg_order_by: Initiative_Tags_Avg_Order_By;
  initiative_tags_bool_exp: Initiative_Tags_Bool_Exp;
  initiative_tags_constraint: Initiative_Tags_Constraint;
  initiative_tags_inc_input: Initiative_Tags_Inc_Input;
  initiative_tags_insert_input: Initiative_Tags_Insert_Input;
  initiative_tags_max_fields: ResolverTypeWrapper<Initiative_Tags_Max_Fields>;
  initiative_tags_max_order_by: Initiative_Tags_Max_Order_By;
  initiative_tags_min_fields: ResolverTypeWrapper<Initiative_Tags_Min_Fields>;
  initiative_tags_min_order_by: Initiative_Tags_Min_Order_By;
  initiative_tags_mutation_response: ResolverTypeWrapper<Initiative_Tags_Mutation_Response>;
  initiative_tags_on_conflict: Initiative_Tags_On_Conflict;
  initiative_tags_order_by: Initiative_Tags_Order_By;
  initiative_tags_pk_columns_input: Initiative_Tags_Pk_Columns_Input;
  initiative_tags_select_column: Initiative_Tags_Select_Column;
  initiative_tags_set_input: Initiative_Tags_Set_Input;
  initiative_tags_stddev_fields: ResolverTypeWrapper<Initiative_Tags_Stddev_Fields>;
  initiative_tags_stddev_order_by: Initiative_Tags_Stddev_Order_By;
  initiative_tags_stddev_pop_fields: ResolverTypeWrapper<Initiative_Tags_Stddev_Pop_Fields>;
  initiative_tags_stddev_pop_order_by: Initiative_Tags_Stddev_Pop_Order_By;
  initiative_tags_stddev_samp_fields: ResolverTypeWrapper<Initiative_Tags_Stddev_Samp_Fields>;
  initiative_tags_stddev_samp_order_by: Initiative_Tags_Stddev_Samp_Order_By;
  initiative_tags_sum_fields: ResolverTypeWrapper<Initiative_Tags_Sum_Fields>;
  initiative_tags_sum_order_by: Initiative_Tags_Sum_Order_By;
  initiative_tags_update_column: Initiative_Tags_Update_Column;
  initiative_tags_var_pop_fields: ResolverTypeWrapper<Initiative_Tags_Var_Pop_Fields>;
  initiative_tags_var_pop_order_by: Initiative_Tags_Var_Pop_Order_By;
  initiative_tags_var_samp_fields: ResolverTypeWrapper<Initiative_Tags_Var_Samp_Fields>;
  initiative_tags_var_samp_order_by: Initiative_Tags_Var_Samp_Order_By;
  initiative_tags_variance_fields: ResolverTypeWrapper<Initiative_Tags_Variance_Fields>;
  initiative_tags_variance_order_by: Initiative_Tags_Variance_Order_By;
  initiative_tasks: ResolverTypeWrapper<Initiative_Tasks>;
  initiative_tasks_aggregate: ResolverTypeWrapper<Initiative_Tasks_Aggregate>;
  initiative_tasks_aggregate_fields: ResolverTypeWrapper<Initiative_Tasks_Aggregate_Fields>;
  initiative_tasks_aggregate_order_by: Initiative_Tasks_Aggregate_Order_By;
  initiative_tasks_arr_rel_insert_input: Initiative_Tasks_Arr_Rel_Insert_Input;
  initiative_tasks_avg_fields: ResolverTypeWrapper<Initiative_Tasks_Avg_Fields>;
  initiative_tasks_avg_order_by: Initiative_Tasks_Avg_Order_By;
  initiative_tasks_bool_exp: Initiative_Tasks_Bool_Exp;
  initiative_tasks_constraint: Initiative_Tasks_Constraint;
  initiative_tasks_inc_input: Initiative_Tasks_Inc_Input;
  initiative_tasks_insert_input: Initiative_Tasks_Insert_Input;
  initiative_tasks_max_fields: ResolverTypeWrapper<Initiative_Tasks_Max_Fields>;
  initiative_tasks_max_order_by: Initiative_Tasks_Max_Order_By;
  initiative_tasks_min_fields: ResolverTypeWrapper<Initiative_Tasks_Min_Fields>;
  initiative_tasks_min_order_by: Initiative_Tasks_Min_Order_By;
  initiative_tasks_mutation_response: ResolverTypeWrapper<Initiative_Tasks_Mutation_Response>;
  initiative_tasks_obj_rel_insert_input: Initiative_Tasks_Obj_Rel_Insert_Input;
  initiative_tasks_on_conflict: Initiative_Tasks_On_Conflict;
  initiative_tasks_order_by: Initiative_Tasks_Order_By;
  initiative_tasks_pk_columns_input: Initiative_Tasks_Pk_Columns_Input;
  initiative_tasks_select_column: Initiative_Tasks_Select_Column;
  initiative_tasks_set_input: Initiative_Tasks_Set_Input;
  initiative_tasks_stddev_fields: ResolverTypeWrapper<Initiative_Tasks_Stddev_Fields>;
  initiative_tasks_stddev_order_by: Initiative_Tasks_Stddev_Order_By;
  initiative_tasks_stddev_pop_fields: ResolverTypeWrapper<Initiative_Tasks_Stddev_Pop_Fields>;
  initiative_tasks_stddev_pop_order_by: Initiative_Tasks_Stddev_Pop_Order_By;
  initiative_tasks_stddev_samp_fields: ResolverTypeWrapper<Initiative_Tasks_Stddev_Samp_Fields>;
  initiative_tasks_stddev_samp_order_by: Initiative_Tasks_Stddev_Samp_Order_By;
  initiative_tasks_sum_fields: ResolverTypeWrapper<Initiative_Tasks_Sum_Fields>;
  initiative_tasks_sum_order_by: Initiative_Tasks_Sum_Order_By;
  initiative_tasks_update_column: Initiative_Tasks_Update_Column;
  initiative_tasks_var_pop_fields: ResolverTypeWrapper<Initiative_Tasks_Var_Pop_Fields>;
  initiative_tasks_var_pop_order_by: Initiative_Tasks_Var_Pop_Order_By;
  initiative_tasks_var_samp_fields: ResolverTypeWrapper<Initiative_Tasks_Var_Samp_Fields>;
  initiative_tasks_var_samp_order_by: Initiative_Tasks_Var_Samp_Order_By;
  initiative_tasks_variance_fields: ResolverTypeWrapper<Initiative_Tasks_Variance_Fields>;
  initiative_tasks_variance_order_by: Initiative_Tasks_Variance_Order_By;
  initiative_visits: ResolverTypeWrapper<Initiative_Visits>;
  initiative_visits_aggregate: ResolverTypeWrapper<Initiative_Visits_Aggregate>;
  initiative_visits_aggregate_fields: ResolverTypeWrapper<Initiative_Visits_Aggregate_Fields>;
  initiative_visits_aggregate_order_by: Initiative_Visits_Aggregate_Order_By;
  initiative_visits_arr_rel_insert_input: Initiative_Visits_Arr_Rel_Insert_Input;
  initiative_visits_avg_fields: ResolverTypeWrapper<Initiative_Visits_Avg_Fields>;
  initiative_visits_avg_order_by: Initiative_Visits_Avg_Order_By;
  initiative_visits_bool_exp: Initiative_Visits_Bool_Exp;
  initiative_visits_constraint: Initiative_Visits_Constraint;
  initiative_visits_inc_input: Initiative_Visits_Inc_Input;
  initiative_visits_insert_input: Initiative_Visits_Insert_Input;
  initiative_visits_max_fields: ResolverTypeWrapper<Initiative_Visits_Max_Fields>;
  initiative_visits_max_order_by: Initiative_Visits_Max_Order_By;
  initiative_visits_min_fields: ResolverTypeWrapper<Initiative_Visits_Min_Fields>;
  initiative_visits_min_order_by: Initiative_Visits_Min_Order_By;
  initiative_visits_mutation_response: ResolverTypeWrapper<Initiative_Visits_Mutation_Response>;
  initiative_visits_on_conflict: Initiative_Visits_On_Conflict;
  initiative_visits_order_by: Initiative_Visits_Order_By;
  initiative_visits_pk_columns_input: Initiative_Visits_Pk_Columns_Input;
  initiative_visits_select_column: Initiative_Visits_Select_Column;
  initiative_visits_set_input: Initiative_Visits_Set_Input;
  initiative_visits_stddev_fields: ResolverTypeWrapper<Initiative_Visits_Stddev_Fields>;
  initiative_visits_stddev_order_by: Initiative_Visits_Stddev_Order_By;
  initiative_visits_stddev_pop_fields: ResolverTypeWrapper<Initiative_Visits_Stddev_Pop_Fields>;
  initiative_visits_stddev_pop_order_by: Initiative_Visits_Stddev_Pop_Order_By;
  initiative_visits_stddev_samp_fields: ResolverTypeWrapper<Initiative_Visits_Stddev_Samp_Fields>;
  initiative_visits_stddev_samp_order_by: Initiative_Visits_Stddev_Samp_Order_By;
  initiative_visits_sum_fields: ResolverTypeWrapper<Initiative_Visits_Sum_Fields>;
  initiative_visits_sum_order_by: Initiative_Visits_Sum_Order_By;
  initiative_visits_update_column: Initiative_Visits_Update_Column;
  initiative_visits_var_pop_fields: ResolverTypeWrapper<Initiative_Visits_Var_Pop_Fields>;
  initiative_visits_var_pop_order_by: Initiative_Visits_Var_Pop_Order_By;
  initiative_visits_var_samp_fields: ResolverTypeWrapper<Initiative_Visits_Var_Samp_Fields>;
  initiative_visits_var_samp_order_by: Initiative_Visits_Var_Samp_Order_By;
  initiative_visits_variance_fields: ResolverTypeWrapper<Initiative_Visits_Variance_Fields>;
  initiative_visits_variance_order_by: Initiative_Visits_Variance_Order_By;
  initiative_volunteers: ResolverTypeWrapper<Initiative_Volunteers>;
  initiative_volunteers_aggregate: ResolverTypeWrapper<Initiative_Volunteers_Aggregate>;
  initiative_volunteers_aggregate_fields: ResolverTypeWrapper<Initiative_Volunteers_Aggregate_Fields>;
  initiative_volunteers_aggregate_order_by: Initiative_Volunteers_Aggregate_Order_By;
  initiative_volunteers_arr_rel_insert_input: Initiative_Volunteers_Arr_Rel_Insert_Input;
  initiative_volunteers_avg_fields: ResolverTypeWrapper<Initiative_Volunteers_Avg_Fields>;
  initiative_volunteers_avg_order_by: Initiative_Volunteers_Avg_Order_By;
  initiative_volunteers_bool_exp: Initiative_Volunteers_Bool_Exp;
  initiative_volunteers_constraint: Initiative_Volunteers_Constraint;
  initiative_volunteers_inc_input: Initiative_Volunteers_Inc_Input;
  initiative_volunteers_insert_input: Initiative_Volunteers_Insert_Input;
  initiative_volunteers_max_fields: ResolverTypeWrapper<Initiative_Volunteers_Max_Fields>;
  initiative_volunteers_max_order_by: Initiative_Volunteers_Max_Order_By;
  initiative_volunteers_min_fields: ResolverTypeWrapper<Initiative_Volunteers_Min_Fields>;
  initiative_volunteers_min_order_by: Initiative_Volunteers_Min_Order_By;
  initiative_volunteers_mutation_response: ResolverTypeWrapper<Initiative_Volunteers_Mutation_Response>;
  initiative_volunteers_on_conflict: Initiative_Volunteers_On_Conflict;
  initiative_volunteers_order_by: Initiative_Volunteers_Order_By;
  initiative_volunteers_pk_columns_input: Initiative_Volunteers_Pk_Columns_Input;
  initiative_volunteers_select_column: Initiative_Volunteers_Select_Column;
  initiative_volunteers_set_input: Initiative_Volunteers_Set_Input;
  initiative_volunteers_stddev_fields: ResolverTypeWrapper<Initiative_Volunteers_Stddev_Fields>;
  initiative_volunteers_stddev_order_by: Initiative_Volunteers_Stddev_Order_By;
  initiative_volunteers_stddev_pop_fields: ResolverTypeWrapper<Initiative_Volunteers_Stddev_Pop_Fields>;
  initiative_volunteers_stddev_pop_order_by: Initiative_Volunteers_Stddev_Pop_Order_By;
  initiative_volunteers_stddev_samp_fields: ResolverTypeWrapper<Initiative_Volunteers_Stddev_Samp_Fields>;
  initiative_volunteers_stddev_samp_order_by: Initiative_Volunteers_Stddev_Samp_Order_By;
  initiative_volunteers_sum_fields: ResolverTypeWrapper<Initiative_Volunteers_Sum_Fields>;
  initiative_volunteers_sum_order_by: Initiative_Volunteers_Sum_Order_By;
  initiative_volunteers_update_column: Initiative_Volunteers_Update_Column;
  initiative_volunteers_var_pop_fields: ResolverTypeWrapper<Initiative_Volunteers_Var_Pop_Fields>;
  initiative_volunteers_var_pop_order_by: Initiative_Volunteers_Var_Pop_Order_By;
  initiative_volunteers_var_samp_fields: ResolverTypeWrapper<Initiative_Volunteers_Var_Samp_Fields>;
  initiative_volunteers_var_samp_order_by: Initiative_Volunteers_Var_Samp_Order_By;
  initiative_volunteers_variance_fields: ResolverTypeWrapper<Initiative_Volunteers_Variance_Fields>;
  initiative_volunteers_variance_order_by: Initiative_Volunteers_Variance_Order_By;
  initiatives: ResolverTypeWrapper<Initiatives>;
  initiatives_aggregate: ResolverTypeWrapper<Initiatives_Aggregate>;
  initiatives_aggregate_fields: ResolverTypeWrapper<Initiatives_Aggregate_Fields>;
  initiatives_bool_exp: Initiatives_Bool_Exp;
  initiatives_constraint: Initiatives_Constraint;
  initiatives_insert_input: Initiatives_Insert_Input;
  initiatives_max_fields: ResolverTypeWrapper<Initiatives_Max_Fields>;
  initiatives_min_fields: ResolverTypeWrapper<Initiatives_Min_Fields>;
  initiatives_mutation_response: ResolverTypeWrapper<Initiatives_Mutation_Response>;
  initiatives_nearby_args: Initiatives_Nearby_Args;
  initiatives_obj_rel_insert_input: Initiatives_Obj_Rel_Insert_Input;
  initiatives_on_conflict: Initiatives_On_Conflict;
  initiatives_order_by: Initiatives_Order_By;
  initiatives_pk_columns_input: Initiatives_Pk_Columns_Input;
  initiatives_select_column: Initiatives_Select_Column;
  initiatives_set_input: Initiatives_Set_Input;
  initiatives_update_column: Initiatives_Update_Column;
  initiatives_view: ResolverTypeWrapper<Initiatives_View>;
  initiatives_view_aggregate: ResolverTypeWrapper<Initiatives_View_Aggregate>;
  initiatives_view_aggregate_fields: ResolverTypeWrapper<Initiatives_View_Aggregate_Fields>;
  initiatives_view_avg_fields: ResolverTypeWrapper<Initiatives_View_Avg_Fields>;
  initiatives_view_bool_exp: Initiatives_View_Bool_Exp;
  initiatives_view_max_fields: ResolverTypeWrapper<Initiatives_View_Max_Fields>;
  initiatives_view_min_fields: ResolverTypeWrapper<Initiatives_View_Min_Fields>;
  initiatives_view_order_by: Initiatives_View_Order_By;
  initiatives_view_select_column: Initiatives_View_Select_Column;
  initiatives_view_stddev_fields: ResolverTypeWrapper<Initiatives_View_Stddev_Fields>;
  initiatives_view_stddev_pop_fields: ResolverTypeWrapper<Initiatives_View_Stddev_Pop_Fields>;
  initiatives_view_stddev_samp_fields: ResolverTypeWrapper<Initiatives_View_Stddev_Samp_Fields>;
  initiatives_view_sum_fields: ResolverTypeWrapper<Initiatives_View_Sum_Fields>;
  initiatives_view_var_pop_fields: ResolverTypeWrapper<Initiatives_View_Var_Pop_Fields>;
  initiatives_view_var_samp_fields: ResolverTypeWrapper<Initiatives_View_Var_Samp_Fields>;
  initiatives_view_variance_fields: ResolverTypeWrapper<Initiatives_View_Variance_Fields>;
  jsonb: ResolverTypeWrapper<Scalars['jsonb']>;
  jsonb_comparison_exp: Jsonb_Comparison_Exp;
  map_entries: ResolverTypeWrapper<Map_Entries>;
  map_entries_aggregate: ResolverTypeWrapper<Map_Entries_Aggregate>;
  map_entries_aggregate_fields: ResolverTypeWrapper<Map_Entries_Aggregate_Fields>;
  map_entries_avg_fields: ResolverTypeWrapper<Map_Entries_Avg_Fields>;
  map_entries_bool_exp: Map_Entries_Bool_Exp;
  map_entries_max_fields: ResolverTypeWrapper<Map_Entries_Max_Fields>;
  map_entries_min_fields: ResolverTypeWrapper<Map_Entries_Min_Fields>;
  map_entries_order_by: Map_Entries_Order_By;
  map_entries_select_column: Map_Entries_Select_Column;
  map_entries_stddev_fields: ResolverTypeWrapper<Map_Entries_Stddev_Fields>;
  map_entries_stddev_pop_fields: ResolverTypeWrapper<Map_Entries_Stddev_Pop_Fields>;
  map_entries_stddev_samp_fields: ResolverTypeWrapper<Map_Entries_Stddev_Samp_Fields>;
  map_entries_sum_fields: ResolverTypeWrapper<Map_Entries_Sum_Fields>;
  map_entries_var_pop_fields: ResolverTypeWrapper<Map_Entries_Var_Pop_Fields>;
  map_entries_var_samp_fields: ResolverTypeWrapper<Map_Entries_Var_Samp_Fields>;
  map_entries_variance_fields: ResolverTypeWrapper<Map_Entries_Variance_Fields>;
  mutation_root: ResolverTypeWrapper<{}>;
  name: ResolverTypeWrapper<Scalars['name']>;
  name_comparison_exp: Name_Comparison_Exp;
  numeric: ResolverTypeWrapper<Scalars['numeric']>;
  numeric_comparison_exp: Numeric_Comparison_Exp;
  order_by: Order_By;
  org_members: ResolverTypeWrapper<Org_Members>;
  org_members_aggregate: ResolverTypeWrapper<Org_Members_Aggregate>;
  org_members_aggregate_fields: ResolverTypeWrapper<Org_Members_Aggregate_Fields>;
  org_members_aggregate_order_by: Org_Members_Aggregate_Order_By;
  org_members_arr_rel_insert_input: Org_Members_Arr_Rel_Insert_Input;
  org_members_avg_fields: ResolverTypeWrapper<Org_Members_Avg_Fields>;
  org_members_avg_order_by: Org_Members_Avg_Order_By;
  org_members_bool_exp: Org_Members_Bool_Exp;
  org_members_constraint: Org_Members_Constraint;
  org_members_inc_input: Org_Members_Inc_Input;
  org_members_insert_input: Org_Members_Insert_Input;
  org_members_max_fields: ResolverTypeWrapper<Org_Members_Max_Fields>;
  org_members_max_order_by: Org_Members_Max_Order_By;
  org_members_min_fields: ResolverTypeWrapper<Org_Members_Min_Fields>;
  org_members_min_order_by: Org_Members_Min_Order_By;
  org_members_mutation_response: ResolverTypeWrapper<Org_Members_Mutation_Response>;
  org_members_on_conflict: Org_Members_On_Conflict;
  org_members_order_by: Org_Members_Order_By;
  org_members_pk_columns_input: Org_Members_Pk_Columns_Input;
  org_members_select_column: Org_Members_Select_Column;
  org_members_set_input: Org_Members_Set_Input;
  org_members_stddev_fields: ResolverTypeWrapper<Org_Members_Stddev_Fields>;
  org_members_stddev_order_by: Org_Members_Stddev_Order_By;
  org_members_stddev_pop_fields: ResolverTypeWrapper<Org_Members_Stddev_Pop_Fields>;
  org_members_stddev_pop_order_by: Org_Members_Stddev_Pop_Order_By;
  org_members_stddev_samp_fields: ResolverTypeWrapper<Org_Members_Stddev_Samp_Fields>;
  org_members_stddev_samp_order_by: Org_Members_Stddev_Samp_Order_By;
  org_members_sum_fields: ResolverTypeWrapper<Org_Members_Sum_Fields>;
  org_members_sum_order_by: Org_Members_Sum_Order_By;
  org_members_update_column: Org_Members_Update_Column;
  org_members_var_pop_fields: ResolverTypeWrapper<Org_Members_Var_Pop_Fields>;
  org_members_var_pop_order_by: Org_Members_Var_Pop_Order_By;
  org_members_var_samp_fields: ResolverTypeWrapper<Org_Members_Var_Samp_Fields>;
  org_members_var_samp_order_by: Org_Members_Var_Samp_Order_By;
  org_members_variance_fields: ResolverTypeWrapper<Org_Members_Variance_Fields>;
  org_members_variance_order_by: Org_Members_Variance_Order_By;
  org_projects: ResolverTypeWrapper<Org_Projects>;
  org_projects_aggregate: ResolverTypeWrapper<Org_Projects_Aggregate>;
  org_projects_aggregate_fields: ResolverTypeWrapper<Org_Projects_Aggregate_Fields>;
  org_projects_aggregate_order_by: Org_Projects_Aggregate_Order_By;
  org_projects_arr_rel_insert_input: Org_Projects_Arr_Rel_Insert_Input;
  org_projects_avg_fields: ResolverTypeWrapper<Org_Projects_Avg_Fields>;
  org_projects_avg_order_by: Org_Projects_Avg_Order_By;
  org_projects_bool_exp: Org_Projects_Bool_Exp;
  org_projects_constraint: Org_Projects_Constraint;
  org_projects_inc_input: Org_Projects_Inc_Input;
  org_projects_insert_input: Org_Projects_Insert_Input;
  org_projects_max_fields: ResolverTypeWrapper<Org_Projects_Max_Fields>;
  org_projects_max_order_by: Org_Projects_Max_Order_By;
  org_projects_min_fields: ResolverTypeWrapper<Org_Projects_Min_Fields>;
  org_projects_min_order_by: Org_Projects_Min_Order_By;
  org_projects_mutation_response: ResolverTypeWrapper<Org_Projects_Mutation_Response>;
  org_projects_obj_rel_insert_input: Org_Projects_Obj_Rel_Insert_Input;
  org_projects_on_conflict: Org_Projects_On_Conflict;
  org_projects_order_by: Org_Projects_Order_By;
  org_projects_pk_columns_input: Org_Projects_Pk_Columns_Input;
  org_projects_select_column: Org_Projects_Select_Column;
  org_projects_set_input: Org_Projects_Set_Input;
  org_projects_stddev_fields: ResolverTypeWrapper<Org_Projects_Stddev_Fields>;
  org_projects_stddev_order_by: Org_Projects_Stddev_Order_By;
  org_projects_stddev_pop_fields: ResolverTypeWrapper<Org_Projects_Stddev_Pop_Fields>;
  org_projects_stddev_pop_order_by: Org_Projects_Stddev_Pop_Order_By;
  org_projects_stddev_samp_fields: ResolverTypeWrapper<Org_Projects_Stddev_Samp_Fields>;
  org_projects_stddev_samp_order_by: Org_Projects_Stddev_Samp_Order_By;
  org_projects_sum_fields: ResolverTypeWrapper<Org_Projects_Sum_Fields>;
  org_projects_sum_order_by: Org_Projects_Sum_Order_By;
  org_projects_update_column: Org_Projects_Update_Column;
  org_projects_var_pop_fields: ResolverTypeWrapper<Org_Projects_Var_Pop_Fields>;
  org_projects_var_pop_order_by: Org_Projects_Var_Pop_Order_By;
  org_projects_var_samp_fields: ResolverTypeWrapper<Org_Projects_Var_Samp_Fields>;
  org_projects_var_samp_order_by: Org_Projects_Var_Samp_Order_By;
  org_projects_variance_fields: ResolverTypeWrapper<Org_Projects_Variance_Fields>;
  org_projects_variance_order_by: Org_Projects_Variance_Order_By;
  org_tags: ResolverTypeWrapper<Org_Tags>;
  org_tags_aggregate: ResolverTypeWrapper<Org_Tags_Aggregate>;
  org_tags_aggregate_fields: ResolverTypeWrapper<Org_Tags_Aggregate_Fields>;
  org_tags_aggregate_order_by: Org_Tags_Aggregate_Order_By;
  org_tags_arr_rel_insert_input: Org_Tags_Arr_Rel_Insert_Input;
  org_tags_avg_fields: ResolverTypeWrapper<Org_Tags_Avg_Fields>;
  org_tags_avg_order_by: Org_Tags_Avg_Order_By;
  org_tags_bool_exp: Org_Tags_Bool_Exp;
  org_tags_constraint: Org_Tags_Constraint;
  org_tags_inc_input: Org_Tags_Inc_Input;
  org_tags_insert_input: Org_Tags_Insert_Input;
  org_tags_max_fields: ResolverTypeWrapper<Org_Tags_Max_Fields>;
  org_tags_max_order_by: Org_Tags_Max_Order_By;
  org_tags_min_fields: ResolverTypeWrapper<Org_Tags_Min_Fields>;
  org_tags_min_order_by: Org_Tags_Min_Order_By;
  org_tags_mutation_response: ResolverTypeWrapper<Org_Tags_Mutation_Response>;
  org_tags_on_conflict: Org_Tags_On_Conflict;
  org_tags_order_by: Org_Tags_Order_By;
  org_tags_pk_columns_input: Org_Tags_Pk_Columns_Input;
  org_tags_select_column: Org_Tags_Select_Column;
  org_tags_set_input: Org_Tags_Set_Input;
  org_tags_stddev_fields: ResolverTypeWrapper<Org_Tags_Stddev_Fields>;
  org_tags_stddev_order_by: Org_Tags_Stddev_Order_By;
  org_tags_stddev_pop_fields: ResolverTypeWrapper<Org_Tags_Stddev_Pop_Fields>;
  org_tags_stddev_pop_order_by: Org_Tags_Stddev_Pop_Order_By;
  org_tags_stddev_samp_fields: ResolverTypeWrapper<Org_Tags_Stddev_Samp_Fields>;
  org_tags_stddev_samp_order_by: Org_Tags_Stddev_Samp_Order_By;
  org_tags_sum_fields: ResolverTypeWrapper<Org_Tags_Sum_Fields>;
  org_tags_sum_order_by: Org_Tags_Sum_Order_By;
  org_tags_update_column: Org_Tags_Update_Column;
  org_tags_var_pop_fields: ResolverTypeWrapper<Org_Tags_Var_Pop_Fields>;
  org_tags_var_pop_order_by: Org_Tags_Var_Pop_Order_By;
  org_tags_var_samp_fields: ResolverTypeWrapper<Org_Tags_Var_Samp_Fields>;
  org_tags_var_samp_order_by: Org_Tags_Var_Samp_Order_By;
  org_tags_variance_fields: ResolverTypeWrapper<Org_Tags_Variance_Fields>;
  org_tags_variance_order_by: Org_Tags_Variance_Order_By;
  org_visits: ResolverTypeWrapper<Org_Visits>;
  org_visits_aggregate: ResolverTypeWrapper<Org_Visits_Aggregate>;
  org_visits_aggregate_fields: ResolverTypeWrapper<Org_Visits_Aggregate_Fields>;
  org_visits_avg_fields: ResolverTypeWrapper<Org_Visits_Avg_Fields>;
  org_visits_bool_exp: Org_Visits_Bool_Exp;
  org_visits_inc_input: Org_Visits_Inc_Input;
  org_visits_insert_input: Org_Visits_Insert_Input;
  org_visits_max_fields: ResolverTypeWrapper<Org_Visits_Max_Fields>;
  org_visits_min_fields: ResolverTypeWrapper<Org_Visits_Min_Fields>;
  org_visits_mutation_response: ResolverTypeWrapper<Org_Visits_Mutation_Response>;
  org_visits_order_by: Org_Visits_Order_By;
  org_visits_select_column: Org_Visits_Select_Column;
  org_visits_set_input: Org_Visits_Set_Input;
  org_visits_stddev_fields: ResolverTypeWrapper<Org_Visits_Stddev_Fields>;
  org_visits_stddev_pop_fields: ResolverTypeWrapper<Org_Visits_Stddev_Pop_Fields>;
  org_visits_stddev_samp_fields: ResolverTypeWrapper<Org_Visits_Stddev_Samp_Fields>;
  org_visits_sum_fields: ResolverTypeWrapper<Org_Visits_Sum_Fields>;
  org_visits_var_pop_fields: ResolverTypeWrapper<Org_Visits_Var_Pop_Fields>;
  org_visits_var_samp_fields: ResolverTypeWrapper<Org_Visits_Var_Samp_Fields>;
  org_visits_variance_fields: ResolverTypeWrapper<Org_Visits_Variance_Fields>;
  orgs: ResolverTypeWrapper<Orgs>;
  orgs_aggregate: ResolverTypeWrapper<Orgs_Aggregate>;
  orgs_aggregate_fields: ResolverTypeWrapper<Orgs_Aggregate_Fields>;
  orgs_bool_exp: Orgs_Bool_Exp;
  orgs_constraint: Orgs_Constraint;
  orgs_insert_input: Orgs_Insert_Input;
  orgs_max_fields: ResolverTypeWrapper<Orgs_Max_Fields>;
  orgs_min_fields: ResolverTypeWrapper<Orgs_Min_Fields>;
  orgs_mutation_response: ResolverTypeWrapper<Orgs_Mutation_Response>;
  orgs_nearby_args: Orgs_Nearby_Args;
  orgs_obj_rel_insert_input: Orgs_Obj_Rel_Insert_Input;
  orgs_on_conflict: Orgs_On_Conflict;
  orgs_order_by: Orgs_Order_By;
  orgs_pk_columns_input: Orgs_Pk_Columns_Input;
  orgs_select_column: Orgs_Select_Column;
  orgs_set_input: Orgs_Set_Input;
  orgs_update_column: Orgs_Update_Column;
  orgs_view: ResolverTypeWrapper<Orgs_View>;
  orgs_view_aggregate: ResolverTypeWrapper<Orgs_View_Aggregate>;
  orgs_view_aggregate_fields: ResolverTypeWrapper<Orgs_View_Aggregate_Fields>;
  orgs_view_avg_fields: ResolverTypeWrapper<Orgs_View_Avg_Fields>;
  orgs_view_bool_exp: Orgs_View_Bool_Exp;
  orgs_view_max_fields: ResolverTypeWrapper<Orgs_View_Max_Fields>;
  orgs_view_min_fields: ResolverTypeWrapper<Orgs_View_Min_Fields>;
  orgs_view_order_by: Orgs_View_Order_By;
  orgs_view_select_column: Orgs_View_Select_Column;
  orgs_view_stddev_fields: ResolverTypeWrapper<Orgs_View_Stddev_Fields>;
  orgs_view_stddev_pop_fields: ResolverTypeWrapper<Orgs_View_Stddev_Pop_Fields>;
  orgs_view_stddev_samp_fields: ResolverTypeWrapper<Orgs_View_Stddev_Samp_Fields>;
  orgs_view_sum_fields: ResolverTypeWrapper<Orgs_View_Sum_Fields>;
  orgs_view_var_pop_fields: ResolverTypeWrapper<Orgs_View_Var_Pop_Fields>;
  orgs_view_var_samp_fields: ResolverTypeWrapper<Orgs_View_Var_Samp_Fields>;
  orgs_view_variance_fields: ResolverTypeWrapper<Orgs_View_Variance_Fields>;
  post_types: ResolverTypeWrapper<Post_Types>;
  post_types_aggregate: ResolverTypeWrapper<Post_Types_Aggregate>;
  post_types_aggregate_fields: ResolverTypeWrapper<Post_Types_Aggregate_Fields>;
  post_types_bool_exp: Post_Types_Bool_Exp;
  post_types_constraint: Post_Types_Constraint;
  post_types_enum: Post_Types_Enum;
  post_types_enum_comparison_exp: Post_Types_Enum_Comparison_Exp;
  post_types_insert_input: Post_Types_Insert_Input;
  post_types_max_fields: ResolverTypeWrapper<Post_Types_Max_Fields>;
  post_types_min_fields: ResolverTypeWrapper<Post_Types_Min_Fields>;
  post_types_mutation_response: ResolverTypeWrapper<Post_Types_Mutation_Response>;
  post_types_on_conflict: Post_Types_On_Conflict;
  post_types_order_by: Post_Types_Order_By;
  post_types_pk_columns_input: Post_Types_Pk_Columns_Input;
  post_types_select_column: Post_Types_Select_Column;
  post_types_set_input: Post_Types_Set_Input;
  post_types_update_column: Post_Types_Update_Column;
  query_root: ResolverTypeWrapper<{}>;
  reactions: ResolverTypeWrapper<Reactions>;
  reactions_aggregate: ResolverTypeWrapper<Reactions_Aggregate>;
  reactions_aggregate_fields: ResolverTypeWrapper<Reactions_Aggregate_Fields>;
  reactions_bool_exp: Reactions_Bool_Exp;
  reactions_constraint: Reactions_Constraint;
  reactions_enum: Reactions_Enum;
  reactions_enum_comparison_exp: Reactions_Enum_Comparison_Exp;
  reactions_insert_input: Reactions_Insert_Input;
  reactions_max_fields: ResolverTypeWrapper<Reactions_Max_Fields>;
  reactions_min_fields: ResolverTypeWrapper<Reactions_Min_Fields>;
  reactions_mutation_response: ResolverTypeWrapper<Reactions_Mutation_Response>;
  reactions_on_conflict: Reactions_On_Conflict;
  reactions_order_by: Reactions_Order_By;
  reactions_pk_columns_input: Reactions_Pk_Columns_Input;
  reactions_select_column: Reactions_Select_Column;
  reactions_set_input: Reactions_Set_Input;
  reactions_update_column: Reactions_Update_Column;
  spatial_ref_sys: ResolverTypeWrapper<Spatial_Ref_Sys>;
  spatial_ref_sys_aggregate: ResolverTypeWrapper<Spatial_Ref_Sys_Aggregate>;
  spatial_ref_sys_aggregate_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Aggregate_Fields>;
  spatial_ref_sys_avg_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Avg_Fields>;
  spatial_ref_sys_bool_exp: Spatial_Ref_Sys_Bool_Exp;
  spatial_ref_sys_constraint: Spatial_Ref_Sys_Constraint;
  spatial_ref_sys_inc_input: Spatial_Ref_Sys_Inc_Input;
  spatial_ref_sys_insert_input: Spatial_Ref_Sys_Insert_Input;
  spatial_ref_sys_max_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Max_Fields>;
  spatial_ref_sys_min_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Min_Fields>;
  spatial_ref_sys_mutation_response: ResolverTypeWrapper<Spatial_Ref_Sys_Mutation_Response>;
  spatial_ref_sys_on_conflict: Spatial_Ref_Sys_On_Conflict;
  spatial_ref_sys_order_by: Spatial_Ref_Sys_Order_By;
  spatial_ref_sys_pk_columns_input: Spatial_Ref_Sys_Pk_Columns_Input;
  spatial_ref_sys_select_column: Spatial_Ref_Sys_Select_Column;
  spatial_ref_sys_set_input: Spatial_Ref_Sys_Set_Input;
  spatial_ref_sys_stddev_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Stddev_Fields>;
  spatial_ref_sys_stddev_pop_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Stddev_Pop_Fields>;
  spatial_ref_sys_stddev_samp_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Stddev_Samp_Fields>;
  spatial_ref_sys_sum_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Sum_Fields>;
  spatial_ref_sys_update_column: Spatial_Ref_Sys_Update_Column;
  spatial_ref_sys_var_pop_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Var_Pop_Fields>;
  spatial_ref_sys_var_samp_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Var_Samp_Fields>;
  spatial_ref_sys_variance_fields: ResolverTypeWrapper<Spatial_Ref_Sys_Variance_Fields>;
  st_d_within_geography_input: St_D_Within_Geography_Input;
  st_d_within_input: St_D_Within_Input;
  subscription_root: ResolverTypeWrapper<{}>;
  tags: ResolverTypeWrapper<Tags>;
  tags_aggregate: ResolverTypeWrapper<Tags_Aggregate>;
  tags_aggregate_fields: ResolverTypeWrapper<Tags_Aggregate_Fields>;
  tags_bool_exp: Tags_Bool_Exp;
  tags_constraint: Tags_Constraint;
  tags_insert_input: Tags_Insert_Input;
  tags_max_fields: ResolverTypeWrapper<Tags_Max_Fields>;
  tags_min_fields: ResolverTypeWrapper<Tags_Min_Fields>;
  tags_mutation_response: ResolverTypeWrapper<Tags_Mutation_Response>;
  tags_obj_rel_insert_input: Tags_Obj_Rel_Insert_Input;
  tags_on_conflict: Tags_On_Conflict;
  tags_order_by: Tags_Order_By;
  tags_pk_columns_input: Tags_Pk_Columns_Input;
  tags_select_column: Tags_Select_Column;
  tags_set_input: Tags_Set_Input;
  tags_update_column: Tags_Update_Column;
  task_statuses: ResolverTypeWrapper<Task_Statuses>;
  task_statuses_aggregate: ResolverTypeWrapper<Task_Statuses_Aggregate>;
  task_statuses_aggregate_fields: ResolverTypeWrapper<Task_Statuses_Aggregate_Fields>;
  task_statuses_bool_exp: Task_Statuses_Bool_Exp;
  task_statuses_constraint: Task_Statuses_Constraint;
  task_statuses_enum: Task_Statuses_Enum;
  task_statuses_enum_comparison_exp: Task_Statuses_Enum_Comparison_Exp;
  task_statuses_insert_input: Task_Statuses_Insert_Input;
  task_statuses_max_fields: ResolverTypeWrapper<Task_Statuses_Max_Fields>;
  task_statuses_min_fields: ResolverTypeWrapper<Task_Statuses_Min_Fields>;
  task_statuses_mutation_response: ResolverTypeWrapper<Task_Statuses_Mutation_Response>;
  task_statuses_on_conflict: Task_Statuses_On_Conflict;
  task_statuses_order_by: Task_Statuses_Order_By;
  task_statuses_pk_columns_input: Task_Statuses_Pk_Columns_Input;
  task_statuses_select_column: Task_Statuses_Select_Column;
  task_statuses_set_input: Task_Statuses_Set_Input;
  task_statuses_update_column: Task_Statuses_Update_Column;
  tenders: ResolverTypeWrapper<Tenders>;
  tenders_aggregate: ResolverTypeWrapper<Tenders_Aggregate>;
  tenders_aggregate_fields: ResolverTypeWrapper<Tenders_Aggregate_Fields>;
  tenders_aggregate_order_by: Tenders_Aggregate_Order_By;
  tenders_arr_rel_insert_input: Tenders_Arr_Rel_Insert_Input;
  tenders_avg_fields: ResolverTypeWrapper<Tenders_Avg_Fields>;
  tenders_avg_order_by: Tenders_Avg_Order_By;
  tenders_bool_exp: Tenders_Bool_Exp;
  tenders_constraint: Tenders_Constraint;
  tenders_inc_input: Tenders_Inc_Input;
  tenders_insert_input: Tenders_Insert_Input;
  tenders_max_fields: ResolverTypeWrapper<Tenders_Max_Fields>;
  tenders_max_order_by: Tenders_Max_Order_By;
  tenders_min_fields: ResolverTypeWrapper<Tenders_Min_Fields>;
  tenders_min_order_by: Tenders_Min_Order_By;
  tenders_mutation_response: ResolverTypeWrapper<Tenders_Mutation_Response>;
  tenders_obj_rel_insert_input: Tenders_Obj_Rel_Insert_Input;
  tenders_on_conflict: Tenders_On_Conflict;
  tenders_order_by: Tenders_Order_By;
  tenders_pk_columns_input: Tenders_Pk_Columns_Input;
  tenders_select_column: Tenders_Select_Column;
  tenders_set_input: Tenders_Set_Input;
  tenders_stddev_fields: ResolverTypeWrapper<Tenders_Stddev_Fields>;
  tenders_stddev_order_by: Tenders_Stddev_Order_By;
  tenders_stddev_pop_fields: ResolverTypeWrapper<Tenders_Stddev_Pop_Fields>;
  tenders_stddev_pop_order_by: Tenders_Stddev_Pop_Order_By;
  tenders_stddev_samp_fields: ResolverTypeWrapper<Tenders_Stddev_Samp_Fields>;
  tenders_stddev_samp_order_by: Tenders_Stddev_Samp_Order_By;
  tenders_sum_fields: ResolverTypeWrapper<Tenders_Sum_Fields>;
  tenders_sum_order_by: Tenders_Sum_Order_By;
  tenders_update_column: Tenders_Update_Column;
  tenders_var_pop_fields: ResolverTypeWrapper<Tenders_Var_Pop_Fields>;
  tenders_var_pop_order_by: Tenders_Var_Pop_Order_By;
  tenders_var_samp_fields: ResolverTypeWrapper<Tenders_Var_Samp_Fields>;
  tenders_var_samp_order_by: Tenders_Var_Samp_Order_By;
  tenders_variance_fields: ResolverTypeWrapper<Tenders_Variance_Fields>;
  tenders_variance_order_by: Tenders_Variance_Order_By;
  timestamp: ResolverTypeWrapper<Scalars['timestamp']>;
  timestamp_comparison_exp: Timestamp_Comparison_Exp;
  timestamptz: ResolverTypeWrapper<Scalars['timestamptz']>;
  timestamptz_comparison_exp: Timestamptz_Comparison_Exp;
  user_settings: ResolverTypeWrapper<User_Settings>;
  user_settings_aggregate: ResolverTypeWrapper<User_Settings_Aggregate>;
  user_settings_aggregate_fields: ResolverTypeWrapper<User_Settings_Aggregate_Fields>;
  user_settings_bool_exp: User_Settings_Bool_Exp;
  user_settings_constraint: User_Settings_Constraint;
  user_settings_insert_input: User_Settings_Insert_Input;
  user_settings_max_fields: ResolverTypeWrapper<User_Settings_Max_Fields>;
  user_settings_min_fields: ResolverTypeWrapper<User_Settings_Min_Fields>;
  user_settings_mutation_response: ResolverTypeWrapper<User_Settings_Mutation_Response>;
  user_settings_obj_rel_insert_input: User_Settings_Obj_Rel_Insert_Input;
  user_settings_on_conflict: User_Settings_On_Conflict;
  user_settings_order_by: User_Settings_Order_By;
  user_settings_pk_columns_input: User_Settings_Pk_Columns_Input;
  user_settings_select_column: User_Settings_Select_Column;
  user_settings_set_input: User_Settings_Set_Input;
  user_settings_update_column: User_Settings_Update_Column;
  user_subscriptions: ResolverTypeWrapper<User_Subscriptions>;
  user_subscriptions_aggregate: ResolverTypeWrapper<User_Subscriptions_Aggregate>;
  user_subscriptions_aggregate_fields: ResolverTypeWrapper<User_Subscriptions_Aggregate_Fields>;
  user_subscriptions_aggregate_order_by: User_Subscriptions_Aggregate_Order_By;
  user_subscriptions_arr_rel_insert_input: User_Subscriptions_Arr_Rel_Insert_Input;
  user_subscriptions_bool_exp: User_Subscriptions_Bool_Exp;
  user_subscriptions_constraint: User_Subscriptions_Constraint;
  user_subscriptions_insert_input: User_Subscriptions_Insert_Input;
  user_subscriptions_max_fields: ResolverTypeWrapper<User_Subscriptions_Max_Fields>;
  user_subscriptions_max_order_by: User_Subscriptions_Max_Order_By;
  user_subscriptions_min_fields: ResolverTypeWrapper<User_Subscriptions_Min_Fields>;
  user_subscriptions_min_order_by: User_Subscriptions_Min_Order_By;
  user_subscriptions_mutation_response: ResolverTypeWrapper<User_Subscriptions_Mutation_Response>;
  user_subscriptions_on_conflict: User_Subscriptions_On_Conflict;
  user_subscriptions_order_by: User_Subscriptions_Order_By;
  user_subscriptions_pk_columns_input: User_Subscriptions_Pk_Columns_Input;
  user_subscriptions_select_column: User_Subscriptions_Select_Column;
  user_subscriptions_set_input: User_Subscriptions_Set_Input;
  user_subscriptions_update_column: User_Subscriptions_Update_Column;
  users: ResolverTypeWrapper<Users>;
  users_aggregate: ResolverTypeWrapper<Users_Aggregate>;
  users_aggregate_fields: ResolverTypeWrapper<Users_Aggregate_Fields>;
  users_bool_exp: Users_Bool_Exp;
  users_constraint: Users_Constraint;
  users_insert_input: Users_Insert_Input;
  users_max_fields: ResolverTypeWrapper<Users_Max_Fields>;
  users_min_fields: ResolverTypeWrapper<Users_Min_Fields>;
  users_mutation_response: ResolverTypeWrapper<Users_Mutation_Response>;
  users_obj_rel_insert_input: Users_Obj_Rel_Insert_Input;
  users_on_conflict: Users_On_Conflict;
  users_order_by: Users_Order_By;
  users_pk_columns_input: Users_Pk_Columns_Input;
  users_select_column: Users_Select_Column;
  users_set_input: Users_Set_Input;
  users_update_column: Users_Update_Column;
  uuid: ResolverTypeWrapper<Scalars['uuid']>;
  uuid_comparison_exp: Uuid_Comparison_Exp;
};

/** Mapping between all available schema types and the resolvers parents */
export type ResolversParentTypes = {
  Boolean: Scalars['Boolean'];
  Boolean_comparison_exp: Boolean_Comparison_Exp;
  Float: Scalars['Float'];
  Int: Scalars['Int'];
  Int_comparison_exp: Int_Comparison_Exp;
  String: Scalars['String'];
  String_comparison_exp: String_Comparison_Exp;
  auth_account_providers: Auth_Account_Providers;
  auth_account_providers_aggregate: Auth_Account_Providers_Aggregate;
  auth_account_providers_aggregate_fields: Auth_Account_Providers_Aggregate_Fields;
  auth_account_providers_aggregate_order_by: Auth_Account_Providers_Aggregate_Order_By;
  auth_account_providers_arr_rel_insert_input: Auth_Account_Providers_Arr_Rel_Insert_Input;
  auth_account_providers_bool_exp: Auth_Account_Providers_Bool_Exp;
  auth_account_providers_insert_input: Auth_Account_Providers_Insert_Input;
  auth_account_providers_max_fields: Auth_Account_Providers_Max_Fields;
  auth_account_providers_max_order_by: Auth_Account_Providers_Max_Order_By;
  auth_account_providers_min_fields: Auth_Account_Providers_Min_Fields;
  auth_account_providers_min_order_by: Auth_Account_Providers_Min_Order_By;
  auth_account_providers_mutation_response: Auth_Account_Providers_Mutation_Response;
  auth_account_providers_on_conflict: Auth_Account_Providers_On_Conflict;
  auth_account_providers_order_by: Auth_Account_Providers_Order_By;
  auth_account_providers_pk_columns_input: Auth_Account_Providers_Pk_Columns_Input;
  auth_account_providers_set_input: Auth_Account_Providers_Set_Input;
  auth_account_roles: Auth_Account_Roles;
  auth_account_roles_aggregate: Auth_Account_Roles_Aggregate;
  auth_account_roles_aggregate_fields: Auth_Account_Roles_Aggregate_Fields;
  auth_account_roles_aggregate_order_by: Auth_Account_Roles_Aggregate_Order_By;
  auth_account_roles_arr_rel_insert_input: Auth_Account_Roles_Arr_Rel_Insert_Input;
  auth_account_roles_bool_exp: Auth_Account_Roles_Bool_Exp;
  auth_account_roles_insert_input: Auth_Account_Roles_Insert_Input;
  auth_account_roles_max_fields: Auth_Account_Roles_Max_Fields;
  auth_account_roles_max_order_by: Auth_Account_Roles_Max_Order_By;
  auth_account_roles_min_fields: Auth_Account_Roles_Min_Fields;
  auth_account_roles_min_order_by: Auth_Account_Roles_Min_Order_By;
  auth_account_roles_mutation_response: Auth_Account_Roles_Mutation_Response;
  auth_account_roles_on_conflict: Auth_Account_Roles_On_Conflict;
  auth_account_roles_order_by: Auth_Account_Roles_Order_By;
  auth_account_roles_pk_columns_input: Auth_Account_Roles_Pk_Columns_Input;
  auth_account_roles_set_input: Auth_Account_Roles_Set_Input;
  auth_accounts: Auth_Accounts;
  auth_accounts_aggregate: Auth_Accounts_Aggregate;
  auth_accounts_aggregate_fields: Auth_Accounts_Aggregate_Fields;
  auth_accounts_aggregate_order_by: Auth_Accounts_Aggregate_Order_By;
  auth_accounts_append_input: Auth_Accounts_Append_Input;
  auth_accounts_arr_rel_insert_input: Auth_Accounts_Arr_Rel_Insert_Input;
  auth_accounts_bool_exp: Auth_Accounts_Bool_Exp;
  auth_accounts_delete_at_path_input: Auth_Accounts_Delete_At_Path_Input;
  auth_accounts_delete_elem_input: Auth_Accounts_Delete_Elem_Input;
  auth_accounts_delete_key_input: Auth_Accounts_Delete_Key_Input;
  auth_accounts_insert_input: Auth_Accounts_Insert_Input;
  auth_accounts_max_fields: Auth_Accounts_Max_Fields;
  auth_accounts_max_order_by: Auth_Accounts_Max_Order_By;
  auth_accounts_min_fields: Auth_Accounts_Min_Fields;
  auth_accounts_min_order_by: Auth_Accounts_Min_Order_By;
  auth_accounts_mutation_response: Auth_Accounts_Mutation_Response;
  auth_accounts_obj_rel_insert_input: Auth_Accounts_Obj_Rel_Insert_Input;
  auth_accounts_on_conflict: Auth_Accounts_On_Conflict;
  auth_accounts_order_by: Auth_Accounts_Order_By;
  auth_accounts_pk_columns_input: Auth_Accounts_Pk_Columns_Input;
  auth_accounts_prepend_input: Auth_Accounts_Prepend_Input;
  auth_accounts_set_input: Auth_Accounts_Set_Input;
  auth_migrations: Auth_Migrations;
  auth_migrations_aggregate: Auth_Migrations_Aggregate;
  auth_migrations_aggregate_fields: Auth_Migrations_Aggregate_Fields;
  auth_migrations_avg_fields: Auth_Migrations_Avg_Fields;
  auth_migrations_bool_exp: Auth_Migrations_Bool_Exp;
  auth_migrations_inc_input: Auth_Migrations_Inc_Input;
  auth_migrations_insert_input: Auth_Migrations_Insert_Input;
  auth_migrations_max_fields: Auth_Migrations_Max_Fields;
  auth_migrations_min_fields: Auth_Migrations_Min_Fields;
  auth_migrations_mutation_response: Auth_Migrations_Mutation_Response;
  auth_migrations_on_conflict: Auth_Migrations_On_Conflict;
  auth_migrations_order_by: Auth_Migrations_Order_By;
  auth_migrations_pk_columns_input: Auth_Migrations_Pk_Columns_Input;
  auth_migrations_set_input: Auth_Migrations_Set_Input;
  auth_migrations_stddev_fields: Auth_Migrations_Stddev_Fields;
  auth_migrations_stddev_pop_fields: Auth_Migrations_Stddev_Pop_Fields;
  auth_migrations_stddev_samp_fields: Auth_Migrations_Stddev_Samp_Fields;
  auth_migrations_sum_fields: Auth_Migrations_Sum_Fields;
  auth_migrations_var_pop_fields: Auth_Migrations_Var_Pop_Fields;
  auth_migrations_var_samp_fields: Auth_Migrations_Var_Samp_Fields;
  auth_migrations_variance_fields: Auth_Migrations_Variance_Fields;
  auth_providers: Auth_Providers;
  auth_providers_aggregate: Auth_Providers_Aggregate;
  auth_providers_aggregate_fields: Auth_Providers_Aggregate_Fields;
  auth_providers_bool_exp: Auth_Providers_Bool_Exp;
  auth_providers_insert_input: Auth_Providers_Insert_Input;
  auth_providers_max_fields: Auth_Providers_Max_Fields;
  auth_providers_min_fields: Auth_Providers_Min_Fields;
  auth_providers_mutation_response: Auth_Providers_Mutation_Response;
  auth_providers_obj_rel_insert_input: Auth_Providers_Obj_Rel_Insert_Input;
  auth_providers_on_conflict: Auth_Providers_On_Conflict;
  auth_providers_order_by: Auth_Providers_Order_By;
  auth_providers_pk_columns_input: Auth_Providers_Pk_Columns_Input;
  auth_providers_set_input: Auth_Providers_Set_Input;
  auth_refresh_tokens: Auth_Refresh_Tokens;
  auth_refresh_tokens_aggregate: Auth_Refresh_Tokens_Aggregate;
  auth_refresh_tokens_aggregate_fields: Auth_Refresh_Tokens_Aggregate_Fields;
  auth_refresh_tokens_aggregate_order_by: Auth_Refresh_Tokens_Aggregate_Order_By;
  auth_refresh_tokens_arr_rel_insert_input: Auth_Refresh_Tokens_Arr_Rel_Insert_Input;
  auth_refresh_tokens_bool_exp: Auth_Refresh_Tokens_Bool_Exp;
  auth_refresh_tokens_insert_input: Auth_Refresh_Tokens_Insert_Input;
  auth_refresh_tokens_max_fields: Auth_Refresh_Tokens_Max_Fields;
  auth_refresh_tokens_max_order_by: Auth_Refresh_Tokens_Max_Order_By;
  auth_refresh_tokens_min_fields: Auth_Refresh_Tokens_Min_Fields;
  auth_refresh_tokens_min_order_by: Auth_Refresh_Tokens_Min_Order_By;
  auth_refresh_tokens_mutation_response: Auth_Refresh_Tokens_Mutation_Response;
  auth_refresh_tokens_on_conflict: Auth_Refresh_Tokens_On_Conflict;
  auth_refresh_tokens_order_by: Auth_Refresh_Tokens_Order_By;
  auth_refresh_tokens_pk_columns_input: Auth_Refresh_Tokens_Pk_Columns_Input;
  auth_refresh_tokens_set_input: Auth_Refresh_Tokens_Set_Input;
  auth_roles: Auth_Roles;
  auth_roles_aggregate: Auth_Roles_Aggregate;
  auth_roles_aggregate_fields: Auth_Roles_Aggregate_Fields;
  auth_roles_bool_exp: Auth_Roles_Bool_Exp;
  auth_roles_insert_input: Auth_Roles_Insert_Input;
  auth_roles_max_fields: Auth_Roles_Max_Fields;
  auth_roles_min_fields: Auth_Roles_Min_Fields;
  auth_roles_mutation_response: Auth_Roles_Mutation_Response;
  auth_roles_obj_rel_insert_input: Auth_Roles_Obj_Rel_Insert_Input;
  auth_roles_on_conflict: Auth_Roles_On_Conflict;
  auth_roles_order_by: Auth_Roles_Order_By;
  auth_roles_pk_columns_input: Auth_Roles_Pk_Columns_Input;
  auth_roles_set_input: Auth_Roles_Set_Input;
  bigint: Scalars['bigint'];
  bigint_comparison_exp: Bigint_Comparison_Exp;
  citext: Scalars['citext'];
  citext_comparison_exp: Citext_Comparison_Exp;
  entries: Entries;
  entries_aggregate: Entries_Aggregate;
  entries_aggregate_fields: Entries_Aggregate_Fields;
  entries_avg_fields: Entries_Avg_Fields;
  entries_bool_exp: Entries_Bool_Exp;
  entries_max_fields: Entries_Max_Fields;
  entries_min_fields: Entries_Min_Fields;
  entries_nearby_args: Entries_Nearby_Args;
  entries_order_by: Entries_Order_By;
  entries_stddev_fields: Entries_Stddev_Fields;
  entries_stddev_pop_fields: Entries_Stddev_Pop_Fields;
  entries_stddev_samp_fields: Entries_Stddev_Samp_Fields;
  entries_sum_fields: Entries_Sum_Fields;
  entries_var_pop_fields: Entries_Var_Pop_Fields;
  entries_var_samp_fields: Entries_Var_Samp_Fields;
  entries_variance_fields: Entries_Variance_Fields;
  entry_members: Entry_Members;
  entry_members_aggregate: Entry_Members_Aggregate;
  entry_members_aggregate_fields: Entry_Members_Aggregate_Fields;
  entry_members_avg_fields: Entry_Members_Avg_Fields;
  entry_members_bool_exp: Entry_Members_Bool_Exp;
  entry_members_max_fields: Entry_Members_Max_Fields;
  entry_members_min_fields: Entry_Members_Min_Fields;
  entry_members_order_by: Entry_Members_Order_By;
  entry_members_stddev_fields: Entry_Members_Stddev_Fields;
  entry_members_stddev_pop_fields: Entry_Members_Stddev_Pop_Fields;
  entry_members_stddev_samp_fields: Entry_Members_Stddev_Samp_Fields;
  entry_members_sum_fields: Entry_Members_Sum_Fields;
  entry_members_var_pop_fields: Entry_Members_Var_Pop_Fields;
  entry_members_var_samp_fields: Entry_Members_Var_Samp_Fields;
  entry_members_variance_fields: Entry_Members_Variance_Fields;
  entry_visits: Entry_Visits;
  entry_visits_aggregate: Entry_Visits_Aggregate;
  entry_visits_aggregate_fields: Entry_Visits_Aggregate_Fields;
  entry_visits_avg_fields: Entry_Visits_Avg_Fields;
  entry_visits_bool_exp: Entry_Visits_Bool_Exp;
  entry_visits_max_fields: Entry_Visits_Max_Fields;
  entry_visits_min_fields: Entry_Visits_Min_Fields;
  entry_visits_order_by: Entry_Visits_Order_By;
  entry_visits_stddev_fields: Entry_Visits_Stddev_Fields;
  entry_visits_stddev_pop_fields: Entry_Visits_Stddev_Pop_Fields;
  entry_visits_stddev_samp_fields: Entry_Visits_Stddev_Samp_Fields;
  entry_visits_sum_fields: Entry_Visits_Sum_Fields;
  entry_visits_var_pop_fields: Entry_Visits_Var_Pop_Fields;
  entry_visits_var_samp_fields: Entry_Visits_Var_Samp_Fields;
  entry_visits_variance_fields: Entry_Visits_Variance_Fields;
  file_types: File_Types;
  file_types_aggregate: File_Types_Aggregate;
  file_types_aggregate_fields: File_Types_Aggregate_Fields;
  file_types_bool_exp: File_Types_Bool_Exp;
  file_types_enum_comparison_exp: File_Types_Enum_Comparison_Exp;
  file_types_insert_input: File_Types_Insert_Input;
  file_types_max_fields: File_Types_Max_Fields;
  file_types_min_fields: File_Types_Min_Fields;
  file_types_mutation_response: File_Types_Mutation_Response;
  file_types_on_conflict: File_Types_On_Conflict;
  file_types_order_by: File_Types_Order_By;
  file_types_pk_columns_input: File_Types_Pk_Columns_Input;
  file_types_set_input: File_Types_Set_Input;
  files: Files;
  files_aggregate: Files_Aggregate;
  files_aggregate_fields: Files_Aggregate_Fields;
  files_aggregate_order_by: Files_Aggregate_Order_By;
  files_arr_rel_insert_input: Files_Arr_Rel_Insert_Input;
  files_avg_fields: Files_Avg_Fields;
  files_avg_order_by: Files_Avg_Order_By;
  files_bool_exp: Files_Bool_Exp;
  files_inc_input: Files_Inc_Input;
  files_insert_input: Files_Insert_Input;
  files_max_fields: Files_Max_Fields;
  files_max_order_by: Files_Max_Order_By;
  files_min_fields: Files_Min_Fields;
  files_min_order_by: Files_Min_Order_By;
  files_mutation_response: Files_Mutation_Response;
  files_on_conflict: Files_On_Conflict;
  files_order_by: Files_Order_By;
  files_pk_columns_input: Files_Pk_Columns_Input;
  files_set_input: Files_Set_Input;
  files_stddev_fields: Files_Stddev_Fields;
  files_stddev_order_by: Files_Stddev_Order_By;
  files_stddev_pop_fields: Files_Stddev_Pop_Fields;
  files_stddev_pop_order_by: Files_Stddev_Pop_Order_By;
  files_stddev_samp_fields: Files_Stddev_Samp_Fields;
  files_stddev_samp_order_by: Files_Stddev_Samp_Order_By;
  files_sum_fields: Files_Sum_Fields;
  files_sum_order_by: Files_Sum_Order_By;
  files_var_pop_fields: Files_Var_Pop_Fields;
  files_var_pop_order_by: Files_Var_Pop_Order_By;
  files_var_samp_fields: Files_Var_Samp_Fields;
  files_var_samp_order_by: Files_Var_Samp_Order_By;
  files_variance_fields: Files_Variance_Fields;
  files_variance_order_by: Files_Variance_Order_By;
  float8: Scalars['float8'];
  geography: Scalars['geography'];
  geography_cast_exp: Geography_Cast_Exp;
  geography_columns: Geography_Columns;
  geography_columns_aggregate: Geography_Columns_Aggregate;
  geography_columns_aggregate_fields: Geography_Columns_Aggregate_Fields;
  geography_columns_avg_fields: Geography_Columns_Avg_Fields;
  geography_columns_bool_exp: Geography_Columns_Bool_Exp;
  geography_columns_max_fields: Geography_Columns_Max_Fields;
  geography_columns_min_fields: Geography_Columns_Min_Fields;
  geography_columns_order_by: Geography_Columns_Order_By;
  geography_columns_stddev_fields: Geography_Columns_Stddev_Fields;
  geography_columns_stddev_pop_fields: Geography_Columns_Stddev_Pop_Fields;
  geography_columns_stddev_samp_fields: Geography_Columns_Stddev_Samp_Fields;
  geography_columns_sum_fields: Geography_Columns_Sum_Fields;
  geography_columns_var_pop_fields: Geography_Columns_Var_Pop_Fields;
  geography_columns_var_samp_fields: Geography_Columns_Var_Samp_Fields;
  geography_columns_variance_fields: Geography_Columns_Variance_Fields;
  geography_comparison_exp: Geography_Comparison_Exp;
  geometry: Scalars['geometry'];
  geometry_cast_exp: Geometry_Cast_Exp;
  geometry_columns: Geometry_Columns;
  geometry_columns_aggregate: Geometry_Columns_Aggregate;
  geometry_columns_aggregate_fields: Geometry_Columns_Aggregate_Fields;
  geometry_columns_avg_fields: Geometry_Columns_Avg_Fields;
  geometry_columns_bool_exp: Geometry_Columns_Bool_Exp;
  geometry_columns_inc_input: Geometry_Columns_Inc_Input;
  geometry_columns_insert_input: Geometry_Columns_Insert_Input;
  geometry_columns_max_fields: Geometry_Columns_Max_Fields;
  geometry_columns_min_fields: Geometry_Columns_Min_Fields;
  geometry_columns_mutation_response: Geometry_Columns_Mutation_Response;
  geometry_columns_order_by: Geometry_Columns_Order_By;
  geometry_columns_set_input: Geometry_Columns_Set_Input;
  geometry_columns_stddev_fields: Geometry_Columns_Stddev_Fields;
  geometry_columns_stddev_pop_fields: Geometry_Columns_Stddev_Pop_Fields;
  geometry_columns_stddev_samp_fields: Geometry_Columns_Stddev_Samp_Fields;
  geometry_columns_sum_fields: Geometry_Columns_Sum_Fields;
  geometry_columns_var_pop_fields: Geometry_Columns_Var_Pop_Fields;
  geometry_columns_var_samp_fields: Geometry_Columns_Var_Samp_Fields;
  geometry_columns_variance_fields: Geometry_Columns_Variance_Fields;
  geometry_comparison_exp: Geometry_Comparison_Exp;
  i18n: I18n;
  i18n_aggregate: I18n_Aggregate;
  i18n_aggregate_fields: I18n_Aggregate_Fields;
  i18n_aggregate_order_by: I18n_Aggregate_Order_By;
  i18n_arr_rel_insert_input: I18n_Arr_Rel_Insert_Input;
  i18n_avg_fields: I18n_Avg_Fields;
  i18n_avg_order_by: I18n_Avg_Order_By;
  i18n_bool_exp: I18n_Bool_Exp;
  i18n_categories: I18n_Categories;
  i18n_categories_aggregate: I18n_Categories_Aggregate;
  i18n_categories_aggregate_fields: I18n_Categories_Aggregate_Fields;
  i18n_categories_bool_exp: I18n_Categories_Bool_Exp;
  i18n_categories_insert_input: I18n_Categories_Insert_Input;
  i18n_categories_max_fields: I18n_Categories_Max_Fields;
  i18n_categories_min_fields: I18n_Categories_Min_Fields;
  i18n_categories_mutation_response: I18n_Categories_Mutation_Response;
  i18n_categories_obj_rel_insert_input: I18n_Categories_Obj_Rel_Insert_Input;
  i18n_categories_on_conflict: I18n_Categories_On_Conflict;
  i18n_categories_order_by: I18n_Categories_Order_By;
  i18n_categories_pk_columns_input: I18n_Categories_Pk_Columns_Input;
  i18n_categories_set_input: I18n_Categories_Set_Input;
  i18n_inc_input: I18n_Inc_Input;
  i18n_insert_input: I18n_Insert_Input;
  i18n_max_fields: I18n_Max_Fields;
  i18n_max_order_by: I18n_Max_Order_By;
  i18n_min_fields: I18n_Min_Fields;
  i18n_min_order_by: I18n_Min_Order_By;
  i18n_mutation_response: I18n_Mutation_Response;
  i18n_on_conflict: I18n_On_Conflict;
  i18n_order_by: I18n_Order_By;
  i18n_pk_columns_input: I18n_Pk_Columns_Input;
  i18n_set_input: I18n_Set_Input;
  i18n_stddev_fields: I18n_Stddev_Fields;
  i18n_stddev_order_by: I18n_Stddev_Order_By;
  i18n_stddev_pop_fields: I18n_Stddev_Pop_Fields;
  i18n_stddev_pop_order_by: I18n_Stddev_Pop_Order_By;
  i18n_stddev_samp_fields: I18n_Stddev_Samp_Fields;
  i18n_stddev_samp_order_by: I18n_Stddev_Samp_Order_By;
  i18n_sum_fields: I18n_Sum_Fields;
  i18n_sum_order_by: I18n_Sum_Order_By;
  i18n_var_pop_fields: I18n_Var_Pop_Fields;
  i18n_var_pop_order_by: I18n_Var_Pop_Order_By;
  i18n_var_samp_fields: I18n_Var_Samp_Fields;
  i18n_var_samp_order_by: I18n_Var_Samp_Order_By;
  i18n_variance_fields: I18n_Variance_Fields;
  i18n_variance_order_by: I18n_Variance_Order_By;
  initiative_comment_reactions: Initiative_Comment_Reactions;
  initiative_comment_reactions_aggregate: Initiative_Comment_Reactions_Aggregate;
  initiative_comment_reactions_aggregate_fields: Initiative_Comment_Reactions_Aggregate_Fields;
  initiative_comment_reactions_aggregate_order_by: Initiative_Comment_Reactions_Aggregate_Order_By;
  initiative_comment_reactions_arr_rel_insert_input: Initiative_Comment_Reactions_Arr_Rel_Insert_Input;
  initiative_comment_reactions_avg_fields: Initiative_Comment_Reactions_Avg_Fields;
  initiative_comment_reactions_avg_order_by: Initiative_Comment_Reactions_Avg_Order_By;
  initiative_comment_reactions_bool_exp: Initiative_Comment_Reactions_Bool_Exp;
  initiative_comment_reactions_inc_input: Initiative_Comment_Reactions_Inc_Input;
  initiative_comment_reactions_insert_input: Initiative_Comment_Reactions_Insert_Input;
  initiative_comment_reactions_max_fields: Initiative_Comment_Reactions_Max_Fields;
  initiative_comment_reactions_max_order_by: Initiative_Comment_Reactions_Max_Order_By;
  initiative_comment_reactions_min_fields: Initiative_Comment_Reactions_Min_Fields;
  initiative_comment_reactions_min_order_by: Initiative_Comment_Reactions_Min_Order_By;
  initiative_comment_reactions_mutation_response: Initiative_Comment_Reactions_Mutation_Response;
  initiative_comment_reactions_on_conflict: Initiative_Comment_Reactions_On_Conflict;
  initiative_comment_reactions_order_by: Initiative_Comment_Reactions_Order_By;
  initiative_comment_reactions_pk_columns_input: Initiative_Comment_Reactions_Pk_Columns_Input;
  initiative_comment_reactions_set_input: Initiative_Comment_Reactions_Set_Input;
  initiative_comment_reactions_stddev_fields: Initiative_Comment_Reactions_Stddev_Fields;
  initiative_comment_reactions_stddev_order_by: Initiative_Comment_Reactions_Stddev_Order_By;
  initiative_comment_reactions_stddev_pop_fields: Initiative_Comment_Reactions_Stddev_Pop_Fields;
  initiative_comment_reactions_stddev_pop_order_by: Initiative_Comment_Reactions_Stddev_Pop_Order_By;
  initiative_comment_reactions_stddev_samp_fields: Initiative_Comment_Reactions_Stddev_Samp_Fields;
  initiative_comment_reactions_stddev_samp_order_by: Initiative_Comment_Reactions_Stddev_Samp_Order_By;
  initiative_comment_reactions_sum_fields: Initiative_Comment_Reactions_Sum_Fields;
  initiative_comment_reactions_sum_order_by: Initiative_Comment_Reactions_Sum_Order_By;
  initiative_comment_reactions_var_pop_fields: Initiative_Comment_Reactions_Var_Pop_Fields;
  initiative_comment_reactions_var_pop_order_by: Initiative_Comment_Reactions_Var_Pop_Order_By;
  initiative_comment_reactions_var_samp_fields: Initiative_Comment_Reactions_Var_Samp_Fields;
  initiative_comment_reactions_var_samp_order_by: Initiative_Comment_Reactions_Var_Samp_Order_By;
  initiative_comment_reactions_variance_fields: Initiative_Comment_Reactions_Variance_Fields;
  initiative_comment_reactions_variance_order_by: Initiative_Comment_Reactions_Variance_Order_By;
  initiative_comments: Initiative_Comments;
  initiative_comments_aggregate: Initiative_Comments_Aggregate;
  initiative_comments_aggregate_fields: Initiative_Comments_Aggregate_Fields;
  initiative_comments_aggregate_order_by: Initiative_Comments_Aggregate_Order_By;
  initiative_comments_arr_rel_insert_input: Initiative_Comments_Arr_Rel_Insert_Input;
  initiative_comments_avg_fields: Initiative_Comments_Avg_Fields;
  initiative_comments_avg_order_by: Initiative_Comments_Avg_Order_By;
  initiative_comments_bool_exp: Initiative_Comments_Bool_Exp;
  initiative_comments_inc_input: Initiative_Comments_Inc_Input;
  initiative_comments_insert_input: Initiative_Comments_Insert_Input;
  initiative_comments_max_fields: Initiative_Comments_Max_Fields;
  initiative_comments_max_order_by: Initiative_Comments_Max_Order_By;
  initiative_comments_min_fields: Initiative_Comments_Min_Fields;
  initiative_comments_min_order_by: Initiative_Comments_Min_Order_By;
  initiative_comments_mutation_response: Initiative_Comments_Mutation_Response;
  initiative_comments_obj_rel_insert_input: Initiative_Comments_Obj_Rel_Insert_Input;
  initiative_comments_on_conflict: Initiative_Comments_On_Conflict;
  initiative_comments_order_by: Initiative_Comments_Order_By;
  initiative_comments_pk_columns_input: Initiative_Comments_Pk_Columns_Input;
  initiative_comments_set_input: Initiative_Comments_Set_Input;
  initiative_comments_stddev_fields: Initiative_Comments_Stddev_Fields;
  initiative_comments_stddev_order_by: Initiative_Comments_Stddev_Order_By;
  initiative_comments_stddev_pop_fields: Initiative_Comments_Stddev_Pop_Fields;
  initiative_comments_stddev_pop_order_by: Initiative_Comments_Stddev_Pop_Order_By;
  initiative_comments_stddev_samp_fields: Initiative_Comments_Stddev_Samp_Fields;
  initiative_comments_stddev_samp_order_by: Initiative_Comments_Stddev_Samp_Order_By;
  initiative_comments_sum_fields: Initiative_Comments_Sum_Fields;
  initiative_comments_sum_order_by: Initiative_Comments_Sum_Order_By;
  initiative_comments_var_pop_fields: Initiative_Comments_Var_Pop_Fields;
  initiative_comments_var_pop_order_by: Initiative_Comments_Var_Pop_Order_By;
  initiative_comments_var_samp_fields: Initiative_Comments_Var_Samp_Fields;
  initiative_comments_var_samp_order_by: Initiative_Comments_Var_Samp_Order_By;
  initiative_comments_variance_fields: Initiative_Comments_Variance_Fields;
  initiative_comments_variance_order_by: Initiative_Comments_Variance_Order_By;
  initiative_donations: Initiative_Donations;
  initiative_donations_aggregate: Initiative_Donations_Aggregate;
  initiative_donations_aggregate_fields: Initiative_Donations_Aggregate_Fields;
  initiative_donations_aggregate_order_by: Initiative_Donations_Aggregate_Order_By;
  initiative_donations_arr_rel_insert_input: Initiative_Donations_Arr_Rel_Insert_Input;
  initiative_donations_avg_fields: Initiative_Donations_Avg_Fields;
  initiative_donations_avg_order_by: Initiative_Donations_Avg_Order_By;
  initiative_donations_bool_exp: Initiative_Donations_Bool_Exp;
  initiative_donations_inc_input: Initiative_Donations_Inc_Input;
  initiative_donations_insert_input: Initiative_Donations_Insert_Input;
  initiative_donations_max_fields: Initiative_Donations_Max_Fields;
  initiative_donations_max_order_by: Initiative_Donations_Max_Order_By;
  initiative_donations_min_fields: Initiative_Donations_Min_Fields;
  initiative_donations_min_order_by: Initiative_Donations_Min_Order_By;
  initiative_donations_mutation_response: Initiative_Donations_Mutation_Response;
  initiative_donations_on_conflict: Initiative_Donations_On_Conflict;
  initiative_donations_order_by: Initiative_Donations_Order_By;
  initiative_donations_pk_columns_input: Initiative_Donations_Pk_Columns_Input;
  initiative_donations_set_input: Initiative_Donations_Set_Input;
  initiative_donations_stddev_fields: Initiative_Donations_Stddev_Fields;
  initiative_donations_stddev_order_by: Initiative_Donations_Stddev_Order_By;
  initiative_donations_stddev_pop_fields: Initiative_Donations_Stddev_Pop_Fields;
  initiative_donations_stddev_pop_order_by: Initiative_Donations_Stddev_Pop_Order_By;
  initiative_donations_stddev_samp_fields: Initiative_Donations_Stddev_Samp_Fields;
  initiative_donations_stddev_samp_order_by: Initiative_Donations_Stddev_Samp_Order_By;
  initiative_donations_sum_fields: Initiative_Donations_Sum_Fields;
  initiative_donations_sum_order_by: Initiative_Donations_Sum_Order_By;
  initiative_donations_var_pop_fields: Initiative_Donations_Var_Pop_Fields;
  initiative_donations_var_pop_order_by: Initiative_Donations_Var_Pop_Order_By;
  initiative_donations_var_samp_fields: Initiative_Donations_Var_Samp_Fields;
  initiative_donations_var_samp_order_by: Initiative_Donations_Var_Samp_Order_By;
  initiative_donations_variance_fields: Initiative_Donations_Variance_Fields;
  initiative_donations_variance_order_by: Initiative_Donations_Variance_Order_By;
  initiative_edits: Initiative_Edits;
  initiative_edits_aggregate: Initiative_Edits_Aggregate;
  initiative_edits_aggregate_fields: Initiative_Edits_Aggregate_Fields;
  initiative_edits_aggregate_order_by: Initiative_Edits_Aggregate_Order_By;
  initiative_edits_arr_rel_insert_input: Initiative_Edits_Arr_Rel_Insert_Input;
  initiative_edits_avg_fields: Initiative_Edits_Avg_Fields;
  initiative_edits_avg_order_by: Initiative_Edits_Avg_Order_By;
  initiative_edits_bool_exp: Initiative_Edits_Bool_Exp;
  initiative_edits_inc_input: Initiative_Edits_Inc_Input;
  initiative_edits_insert_input: Initiative_Edits_Insert_Input;
  initiative_edits_max_fields: Initiative_Edits_Max_Fields;
  initiative_edits_max_order_by: Initiative_Edits_Max_Order_By;
  initiative_edits_min_fields: Initiative_Edits_Min_Fields;
  initiative_edits_min_order_by: Initiative_Edits_Min_Order_By;
  initiative_edits_mutation_response: Initiative_Edits_Mutation_Response;
  initiative_edits_on_conflict: Initiative_Edits_On_Conflict;
  initiative_edits_order_by: Initiative_Edits_Order_By;
  initiative_edits_pk_columns_input: Initiative_Edits_Pk_Columns_Input;
  initiative_edits_set_input: Initiative_Edits_Set_Input;
  initiative_edits_stddev_fields: Initiative_Edits_Stddev_Fields;
  initiative_edits_stddev_order_by: Initiative_Edits_Stddev_Order_By;
  initiative_edits_stddev_pop_fields: Initiative_Edits_Stddev_Pop_Fields;
  initiative_edits_stddev_pop_order_by: Initiative_Edits_Stddev_Pop_Order_By;
  initiative_edits_stddev_samp_fields: Initiative_Edits_Stddev_Samp_Fields;
  initiative_edits_stddev_samp_order_by: Initiative_Edits_Stddev_Samp_Order_By;
  initiative_edits_sum_fields: Initiative_Edits_Sum_Fields;
  initiative_edits_sum_order_by: Initiative_Edits_Sum_Order_By;
  initiative_edits_var_pop_fields: Initiative_Edits_Var_Pop_Fields;
  initiative_edits_var_pop_order_by: Initiative_Edits_Var_Pop_Order_By;
  initiative_edits_var_samp_fields: Initiative_Edits_Var_Samp_Fields;
  initiative_edits_var_samp_order_by: Initiative_Edits_Var_Samp_Order_By;
  initiative_edits_variance_fields: Initiative_Edits_Variance_Fields;
  initiative_edits_variance_order_by: Initiative_Edits_Variance_Order_By;
  initiative_expenses: Initiative_Expenses;
  initiative_expenses_aggregate: Initiative_Expenses_Aggregate;
  initiative_expenses_aggregate_fields: Initiative_Expenses_Aggregate_Fields;
  initiative_expenses_aggregate_order_by: Initiative_Expenses_Aggregate_Order_By;
  initiative_expenses_arr_rel_insert_input: Initiative_Expenses_Arr_Rel_Insert_Input;
  initiative_expenses_avg_fields: Initiative_Expenses_Avg_Fields;
  initiative_expenses_avg_order_by: Initiative_Expenses_Avg_Order_By;
  initiative_expenses_bool_exp: Initiative_Expenses_Bool_Exp;
  initiative_expenses_inc_input: Initiative_Expenses_Inc_Input;
  initiative_expenses_insert_input: Initiative_Expenses_Insert_Input;
  initiative_expenses_max_fields: Initiative_Expenses_Max_Fields;
  initiative_expenses_max_order_by: Initiative_Expenses_Max_Order_By;
  initiative_expenses_min_fields: Initiative_Expenses_Min_Fields;
  initiative_expenses_min_order_by: Initiative_Expenses_Min_Order_By;
  initiative_expenses_mutation_response: Initiative_Expenses_Mutation_Response;
  initiative_expenses_on_conflict: Initiative_Expenses_On_Conflict;
  initiative_expenses_order_by: Initiative_Expenses_Order_By;
  initiative_expenses_pk_columns_input: Initiative_Expenses_Pk_Columns_Input;
  initiative_expenses_set_input: Initiative_Expenses_Set_Input;
  initiative_expenses_stddev_fields: Initiative_Expenses_Stddev_Fields;
  initiative_expenses_stddev_order_by: Initiative_Expenses_Stddev_Order_By;
  initiative_expenses_stddev_pop_fields: Initiative_Expenses_Stddev_Pop_Fields;
  initiative_expenses_stddev_pop_order_by: Initiative_Expenses_Stddev_Pop_Order_By;
  initiative_expenses_stddev_samp_fields: Initiative_Expenses_Stddev_Samp_Fields;
  initiative_expenses_stddev_samp_order_by: Initiative_Expenses_Stddev_Samp_Order_By;
  initiative_expenses_sum_fields: Initiative_Expenses_Sum_Fields;
  initiative_expenses_sum_order_by: Initiative_Expenses_Sum_Order_By;
  initiative_expenses_var_pop_fields: Initiative_Expenses_Var_Pop_Fields;
  initiative_expenses_var_pop_order_by: Initiative_Expenses_Var_Pop_Order_By;
  initiative_expenses_var_samp_fields: Initiative_Expenses_Var_Samp_Fields;
  initiative_expenses_var_samp_order_by: Initiative_Expenses_Var_Samp_Order_By;
  initiative_expenses_variance_fields: Initiative_Expenses_Variance_Fields;
  initiative_expenses_variance_order_by: Initiative_Expenses_Variance_Order_By;
  initiative_info: Initiative_Info;
  initiative_info_aggregate: Initiative_Info_Aggregate;
  initiative_info_aggregate_fields: Initiative_Info_Aggregate_Fields;
  initiative_info_aggregate_order_by: Initiative_Info_Aggregate_Order_By;
  initiative_info_arr_rel_insert_input: Initiative_Info_Arr_Rel_Insert_Input;
  initiative_info_avg_fields: Initiative_Info_Avg_Fields;
  initiative_info_avg_order_by: Initiative_Info_Avg_Order_By;
  initiative_info_bool_exp: Initiative_Info_Bool_Exp;
  initiative_info_inc_input: Initiative_Info_Inc_Input;
  initiative_info_insert_input: Initiative_Info_Insert_Input;
  initiative_info_max_fields: Initiative_Info_Max_Fields;
  initiative_info_max_order_by: Initiative_Info_Max_Order_By;
  initiative_info_min_fields: Initiative_Info_Min_Fields;
  initiative_info_min_order_by: Initiative_Info_Min_Order_By;
  initiative_info_mutation_response: Initiative_Info_Mutation_Response;
  initiative_info_obj_rel_insert_input: Initiative_Info_Obj_Rel_Insert_Input;
  initiative_info_on_conflict: Initiative_Info_On_Conflict;
  initiative_info_order_by: Initiative_Info_Order_By;
  initiative_info_pk_columns_input: Initiative_Info_Pk_Columns_Input;
  initiative_info_set_input: Initiative_Info_Set_Input;
  initiative_info_stddev_fields: Initiative_Info_Stddev_Fields;
  initiative_info_stddev_order_by: Initiative_Info_Stddev_Order_By;
  initiative_info_stddev_pop_fields: Initiative_Info_Stddev_Pop_Fields;
  initiative_info_stddev_pop_order_by: Initiative_Info_Stddev_Pop_Order_By;
  initiative_info_stddev_samp_fields: Initiative_Info_Stddev_Samp_Fields;
  initiative_info_stddev_samp_order_by: Initiative_Info_Stddev_Samp_Order_By;
  initiative_info_sum_fields: Initiative_Info_Sum_Fields;
  initiative_info_sum_order_by: Initiative_Info_Sum_Order_By;
  initiative_info_var_pop_fields: Initiative_Info_Var_Pop_Fields;
  initiative_info_var_pop_order_by: Initiative_Info_Var_Pop_Order_By;
  initiative_info_var_samp_fields: Initiative_Info_Var_Samp_Fields;
  initiative_info_var_samp_order_by: Initiative_Info_Var_Samp_Order_By;
  initiative_info_variance_fields: Initiative_Info_Variance_Fields;
  initiative_info_variance_order_by: Initiative_Info_Variance_Order_By;
  initiative_members: Initiative_Members;
  initiative_members_aggregate: Initiative_Members_Aggregate;
  initiative_members_aggregate_fields: Initiative_Members_Aggregate_Fields;
  initiative_members_aggregate_order_by: Initiative_Members_Aggregate_Order_By;
  initiative_members_arr_rel_insert_input: Initiative_Members_Arr_Rel_Insert_Input;
  initiative_members_avg_fields: Initiative_Members_Avg_Fields;
  initiative_members_avg_order_by: Initiative_Members_Avg_Order_By;
  initiative_members_bool_exp: Initiative_Members_Bool_Exp;
  initiative_members_inc_input: Initiative_Members_Inc_Input;
  initiative_members_insert_input: Initiative_Members_Insert_Input;
  initiative_members_max_fields: Initiative_Members_Max_Fields;
  initiative_members_max_order_by: Initiative_Members_Max_Order_By;
  initiative_members_min_fields: Initiative_Members_Min_Fields;
  initiative_members_min_order_by: Initiative_Members_Min_Order_By;
  initiative_members_mutation_response: Initiative_Members_Mutation_Response;
  initiative_members_on_conflict: Initiative_Members_On_Conflict;
  initiative_members_order_by: Initiative_Members_Order_By;
  initiative_members_pk_columns_input: Initiative_Members_Pk_Columns_Input;
  initiative_members_set_input: Initiative_Members_Set_Input;
  initiative_members_stddev_fields: Initiative_Members_Stddev_Fields;
  initiative_members_stddev_order_by: Initiative_Members_Stddev_Order_By;
  initiative_members_stddev_pop_fields: Initiative_Members_Stddev_Pop_Fields;
  initiative_members_stddev_pop_order_by: Initiative_Members_Stddev_Pop_Order_By;
  initiative_members_stddev_samp_fields: Initiative_Members_Stddev_Samp_Fields;
  initiative_members_stddev_samp_order_by: Initiative_Members_Stddev_Samp_Order_By;
  initiative_members_sum_fields: Initiative_Members_Sum_Fields;
  initiative_members_sum_order_by: Initiative_Members_Sum_Order_By;
  initiative_members_var_pop_fields: Initiative_Members_Var_Pop_Fields;
  initiative_members_var_pop_order_by: Initiative_Members_Var_Pop_Order_By;
  initiative_members_var_samp_fields: Initiative_Members_Var_Samp_Fields;
  initiative_members_var_samp_order_by: Initiative_Members_Var_Samp_Order_By;
  initiative_members_variance_fields: Initiative_Members_Variance_Fields;
  initiative_members_variance_order_by: Initiative_Members_Variance_Order_By;
  initiative_poll_votes: Initiative_Poll_Votes;
  initiative_poll_votes_aggregate: Initiative_Poll_Votes_Aggregate;
  initiative_poll_votes_aggregate_fields: Initiative_Poll_Votes_Aggregate_Fields;
  initiative_poll_votes_aggregate_order_by: Initiative_Poll_Votes_Aggregate_Order_By;
  initiative_poll_votes_arr_rel_insert_input: Initiative_Poll_Votes_Arr_Rel_Insert_Input;
  initiative_poll_votes_avg_fields: Initiative_Poll_Votes_Avg_Fields;
  initiative_poll_votes_avg_order_by: Initiative_Poll_Votes_Avg_Order_By;
  initiative_poll_votes_bool_exp: Initiative_Poll_Votes_Bool_Exp;
  initiative_poll_votes_inc_input: Initiative_Poll_Votes_Inc_Input;
  initiative_poll_votes_insert_input: Initiative_Poll_Votes_Insert_Input;
  initiative_poll_votes_max_fields: Initiative_Poll_Votes_Max_Fields;
  initiative_poll_votes_max_order_by: Initiative_Poll_Votes_Max_Order_By;
  initiative_poll_votes_min_fields: Initiative_Poll_Votes_Min_Fields;
  initiative_poll_votes_min_order_by: Initiative_Poll_Votes_Min_Order_By;
  initiative_poll_votes_mutation_response: Initiative_Poll_Votes_Mutation_Response;
  initiative_poll_votes_on_conflict: Initiative_Poll_Votes_On_Conflict;
  initiative_poll_votes_order_by: Initiative_Poll_Votes_Order_By;
  initiative_poll_votes_pk_columns_input: Initiative_Poll_Votes_Pk_Columns_Input;
  initiative_poll_votes_set_input: Initiative_Poll_Votes_Set_Input;
  initiative_poll_votes_stddev_fields: Initiative_Poll_Votes_Stddev_Fields;
  initiative_poll_votes_stddev_order_by: Initiative_Poll_Votes_Stddev_Order_By;
  initiative_poll_votes_stddev_pop_fields: Initiative_Poll_Votes_Stddev_Pop_Fields;
  initiative_poll_votes_stddev_pop_order_by: Initiative_Poll_Votes_Stddev_Pop_Order_By;
  initiative_poll_votes_stddev_samp_fields: Initiative_Poll_Votes_Stddev_Samp_Fields;
  initiative_poll_votes_stddev_samp_order_by: Initiative_Poll_Votes_Stddev_Samp_Order_By;
  initiative_poll_votes_sum_fields: Initiative_Poll_Votes_Sum_Fields;
  initiative_poll_votes_sum_order_by: Initiative_Poll_Votes_Sum_Order_By;
  initiative_poll_votes_var_pop_fields: Initiative_Poll_Votes_Var_Pop_Fields;
  initiative_poll_votes_var_pop_order_by: Initiative_Poll_Votes_Var_Pop_Order_By;
  initiative_poll_votes_var_samp_fields: Initiative_Poll_Votes_Var_Samp_Fields;
  initiative_poll_votes_var_samp_order_by: Initiative_Poll_Votes_Var_Samp_Order_By;
  initiative_poll_votes_variance_fields: Initiative_Poll_Votes_Variance_Fields;
  initiative_poll_votes_variance_order_by: Initiative_Poll_Votes_Variance_Order_By;
  initiative_polls: Initiative_Polls;
  initiative_polls_aggregate: Initiative_Polls_Aggregate;
  initiative_polls_aggregate_fields: Initiative_Polls_Aggregate_Fields;
  initiative_polls_aggregate_order_by: Initiative_Polls_Aggregate_Order_By;
  initiative_polls_arr_rel_insert_input: Initiative_Polls_Arr_Rel_Insert_Input;
  initiative_polls_avg_fields: Initiative_Polls_Avg_Fields;
  initiative_polls_avg_order_by: Initiative_Polls_Avg_Order_By;
  initiative_polls_bool_exp: Initiative_Polls_Bool_Exp;
  initiative_polls_inc_input: Initiative_Polls_Inc_Input;
  initiative_polls_insert_input: Initiative_Polls_Insert_Input;
  initiative_polls_max_fields: Initiative_Polls_Max_Fields;
  initiative_polls_max_order_by: Initiative_Polls_Max_Order_By;
  initiative_polls_min_fields: Initiative_Polls_Min_Fields;
  initiative_polls_min_order_by: Initiative_Polls_Min_Order_By;
  initiative_polls_mutation_response: Initiative_Polls_Mutation_Response;
  initiative_polls_obj_rel_insert_input: Initiative_Polls_Obj_Rel_Insert_Input;
  initiative_polls_on_conflict: Initiative_Polls_On_Conflict;
  initiative_polls_order_by: Initiative_Polls_Order_By;
  initiative_polls_pk_columns_input: Initiative_Polls_Pk_Columns_Input;
  initiative_polls_set_input: Initiative_Polls_Set_Input;
  initiative_polls_stddev_fields: Initiative_Polls_Stddev_Fields;
  initiative_polls_stddev_order_by: Initiative_Polls_Stddev_Order_By;
  initiative_polls_stddev_pop_fields: Initiative_Polls_Stddev_Pop_Fields;
  initiative_polls_stddev_pop_order_by: Initiative_Polls_Stddev_Pop_Order_By;
  initiative_polls_stddev_samp_fields: Initiative_Polls_Stddev_Samp_Fields;
  initiative_polls_stddev_samp_order_by: Initiative_Polls_Stddev_Samp_Order_By;
  initiative_polls_sum_fields: Initiative_Polls_Sum_Fields;
  initiative_polls_sum_order_by: Initiative_Polls_Sum_Order_By;
  initiative_polls_var_pop_fields: Initiative_Polls_Var_Pop_Fields;
  initiative_polls_var_pop_order_by: Initiative_Polls_Var_Pop_Order_By;
  initiative_polls_var_samp_fields: Initiative_Polls_Var_Samp_Fields;
  initiative_polls_var_samp_order_by: Initiative_Polls_Var_Samp_Order_By;
  initiative_polls_variance_fields: Initiative_Polls_Variance_Fields;
  initiative_polls_variance_order_by: Initiative_Polls_Variance_Order_By;
  initiative_post_reactions: Initiative_Post_Reactions;
  initiative_post_reactions_aggregate: Initiative_Post_Reactions_Aggregate;
  initiative_post_reactions_aggregate_fields: Initiative_Post_Reactions_Aggregate_Fields;
  initiative_post_reactions_aggregate_order_by: Initiative_Post_Reactions_Aggregate_Order_By;
  initiative_post_reactions_arr_rel_insert_input: Initiative_Post_Reactions_Arr_Rel_Insert_Input;
  initiative_post_reactions_avg_fields: Initiative_Post_Reactions_Avg_Fields;
  initiative_post_reactions_avg_order_by: Initiative_Post_Reactions_Avg_Order_By;
  initiative_post_reactions_bool_exp: Initiative_Post_Reactions_Bool_Exp;
  initiative_post_reactions_inc_input: Initiative_Post_Reactions_Inc_Input;
  initiative_post_reactions_insert_input: Initiative_Post_Reactions_Insert_Input;
  initiative_post_reactions_max_fields: Initiative_Post_Reactions_Max_Fields;
  initiative_post_reactions_max_order_by: Initiative_Post_Reactions_Max_Order_By;
  initiative_post_reactions_min_fields: Initiative_Post_Reactions_Min_Fields;
  initiative_post_reactions_min_order_by: Initiative_Post_Reactions_Min_Order_By;
  initiative_post_reactions_mutation_response: Initiative_Post_Reactions_Mutation_Response;
  initiative_post_reactions_on_conflict: Initiative_Post_Reactions_On_Conflict;
  initiative_post_reactions_order_by: Initiative_Post_Reactions_Order_By;
  initiative_post_reactions_pk_columns_input: Initiative_Post_Reactions_Pk_Columns_Input;
  initiative_post_reactions_set_input: Initiative_Post_Reactions_Set_Input;
  initiative_post_reactions_stddev_fields: Initiative_Post_Reactions_Stddev_Fields;
  initiative_post_reactions_stddev_order_by: Initiative_Post_Reactions_Stddev_Order_By;
  initiative_post_reactions_stddev_pop_fields: Initiative_Post_Reactions_Stddev_Pop_Fields;
  initiative_post_reactions_stddev_pop_order_by: Initiative_Post_Reactions_Stddev_Pop_Order_By;
  initiative_post_reactions_stddev_samp_fields: Initiative_Post_Reactions_Stddev_Samp_Fields;
  initiative_post_reactions_stddev_samp_order_by: Initiative_Post_Reactions_Stddev_Samp_Order_By;
  initiative_post_reactions_sum_fields: Initiative_Post_Reactions_Sum_Fields;
  initiative_post_reactions_sum_order_by: Initiative_Post_Reactions_Sum_Order_By;
  initiative_post_reactions_var_pop_fields: Initiative_Post_Reactions_Var_Pop_Fields;
  initiative_post_reactions_var_pop_order_by: Initiative_Post_Reactions_Var_Pop_Order_By;
  initiative_post_reactions_var_samp_fields: Initiative_Post_Reactions_Var_Samp_Fields;
  initiative_post_reactions_var_samp_order_by: Initiative_Post_Reactions_Var_Samp_Order_By;
  initiative_post_reactions_variance_fields: Initiative_Post_Reactions_Variance_Fields;
  initiative_post_reactions_variance_order_by: Initiative_Post_Reactions_Variance_Order_By;
  initiative_posts: Initiative_Posts;
  initiative_posts_aggregate: Initiative_Posts_Aggregate;
  initiative_posts_aggregate_fields: Initiative_Posts_Aggregate_Fields;
  initiative_posts_aggregate_order_by: Initiative_Posts_Aggregate_Order_By;
  initiative_posts_arr_rel_insert_input: Initiative_Posts_Arr_Rel_Insert_Input;
  initiative_posts_avg_fields: Initiative_Posts_Avg_Fields;
  initiative_posts_avg_order_by: Initiative_Posts_Avg_Order_By;
  initiative_posts_bool_exp: Initiative_Posts_Bool_Exp;
  initiative_posts_inc_input: Initiative_Posts_Inc_Input;
  initiative_posts_insert_input: Initiative_Posts_Insert_Input;
  initiative_posts_max_fields: Initiative_Posts_Max_Fields;
  initiative_posts_max_order_by: Initiative_Posts_Max_Order_By;
  initiative_posts_min_fields: Initiative_Posts_Min_Fields;
  initiative_posts_min_order_by: Initiative_Posts_Min_Order_By;
  initiative_posts_mutation_response: Initiative_Posts_Mutation_Response;
  initiative_posts_obj_rel_insert_input: Initiative_Posts_Obj_Rel_Insert_Input;
  initiative_posts_on_conflict: Initiative_Posts_On_Conflict;
  initiative_posts_order_by: Initiative_Posts_Order_By;
  initiative_posts_pk_columns_input: Initiative_Posts_Pk_Columns_Input;
  initiative_posts_set_input: Initiative_Posts_Set_Input;
  initiative_posts_stddev_fields: Initiative_Posts_Stddev_Fields;
  initiative_posts_stddev_order_by: Initiative_Posts_Stddev_Order_By;
  initiative_posts_stddev_pop_fields: Initiative_Posts_Stddev_Pop_Fields;
  initiative_posts_stddev_pop_order_by: Initiative_Posts_Stddev_Pop_Order_By;
  initiative_posts_stddev_samp_fields: Initiative_Posts_Stddev_Samp_Fields;
  initiative_posts_stddev_samp_order_by: Initiative_Posts_Stddev_Samp_Order_By;
  initiative_posts_sum_fields: Initiative_Posts_Sum_Fields;
  initiative_posts_sum_order_by: Initiative_Posts_Sum_Order_By;
  initiative_posts_var_pop_fields: Initiative_Posts_Var_Pop_Fields;
  initiative_posts_var_pop_order_by: Initiative_Posts_Var_Pop_Order_By;
  initiative_posts_var_samp_fields: Initiative_Posts_Var_Samp_Fields;
  initiative_posts_var_samp_order_by: Initiative_Posts_Var_Samp_Order_By;
  initiative_posts_variance_fields: Initiative_Posts_Variance_Fields;
  initiative_posts_variance_order_by: Initiative_Posts_Variance_Order_By;
  initiative_projects: Initiative_Projects;
  initiative_projects_aggregate: Initiative_Projects_Aggregate;
  initiative_projects_aggregate_fields: Initiative_Projects_Aggregate_Fields;
  initiative_projects_aggregate_order_by: Initiative_Projects_Aggregate_Order_By;
  initiative_projects_arr_rel_insert_input: Initiative_Projects_Arr_Rel_Insert_Input;
  initiative_projects_avg_fields: Initiative_Projects_Avg_Fields;
  initiative_projects_avg_order_by: Initiative_Projects_Avg_Order_By;
  initiative_projects_bool_exp: Initiative_Projects_Bool_Exp;
  initiative_projects_inc_input: Initiative_Projects_Inc_Input;
  initiative_projects_insert_input: Initiative_Projects_Insert_Input;
  initiative_projects_max_fields: Initiative_Projects_Max_Fields;
  initiative_projects_max_order_by: Initiative_Projects_Max_Order_By;
  initiative_projects_min_fields: Initiative_Projects_Min_Fields;
  initiative_projects_min_order_by: Initiative_Projects_Min_Order_By;
  initiative_projects_mutation_response: Initiative_Projects_Mutation_Response;
  initiative_projects_on_conflict: Initiative_Projects_On_Conflict;
  initiative_projects_order_by: Initiative_Projects_Order_By;
  initiative_projects_pk_columns_input: Initiative_Projects_Pk_Columns_Input;
  initiative_projects_set_input: Initiative_Projects_Set_Input;
  initiative_projects_stddev_fields: Initiative_Projects_Stddev_Fields;
  initiative_projects_stddev_order_by: Initiative_Projects_Stddev_Order_By;
  initiative_projects_stddev_pop_fields: Initiative_Projects_Stddev_Pop_Fields;
  initiative_projects_stddev_pop_order_by: Initiative_Projects_Stddev_Pop_Order_By;
  initiative_projects_stddev_samp_fields: Initiative_Projects_Stddev_Samp_Fields;
  initiative_projects_stddev_samp_order_by: Initiative_Projects_Stddev_Samp_Order_By;
  initiative_projects_sum_fields: Initiative_Projects_Sum_Fields;
  initiative_projects_sum_order_by: Initiative_Projects_Sum_Order_By;
  initiative_projects_var_pop_fields: Initiative_Projects_Var_Pop_Fields;
  initiative_projects_var_pop_order_by: Initiative_Projects_Var_Pop_Order_By;
  initiative_projects_var_samp_fields: Initiative_Projects_Var_Samp_Fields;
  initiative_projects_var_samp_order_by: Initiative_Projects_Var_Samp_Order_By;
  initiative_projects_variance_fields: Initiative_Projects_Variance_Fields;
  initiative_projects_variance_order_by: Initiative_Projects_Variance_Order_By;
  initiative_tags: Initiative_Tags;
  initiative_tags_aggregate: Initiative_Tags_Aggregate;
  initiative_tags_aggregate_fields: Initiative_Tags_Aggregate_Fields;
  initiative_tags_aggregate_order_by: Initiative_Tags_Aggregate_Order_By;
  initiative_tags_arr_rel_insert_input: Initiative_Tags_Arr_Rel_Insert_Input;
  initiative_tags_avg_fields: Initiative_Tags_Avg_Fields;
  initiative_tags_avg_order_by: Initiative_Tags_Avg_Order_By;
  initiative_tags_bool_exp: Initiative_Tags_Bool_Exp;
  initiative_tags_inc_input: Initiative_Tags_Inc_Input;
  initiative_tags_insert_input: Initiative_Tags_Insert_Input;
  initiative_tags_max_fields: Initiative_Tags_Max_Fields;
  initiative_tags_max_order_by: Initiative_Tags_Max_Order_By;
  initiative_tags_min_fields: Initiative_Tags_Min_Fields;
  initiative_tags_min_order_by: Initiative_Tags_Min_Order_By;
  initiative_tags_mutation_response: Initiative_Tags_Mutation_Response;
  initiative_tags_on_conflict: Initiative_Tags_On_Conflict;
  initiative_tags_order_by: Initiative_Tags_Order_By;
  initiative_tags_pk_columns_input: Initiative_Tags_Pk_Columns_Input;
  initiative_tags_set_input: Initiative_Tags_Set_Input;
  initiative_tags_stddev_fields: Initiative_Tags_Stddev_Fields;
  initiative_tags_stddev_order_by: Initiative_Tags_Stddev_Order_By;
  initiative_tags_stddev_pop_fields: Initiative_Tags_Stddev_Pop_Fields;
  initiative_tags_stddev_pop_order_by: Initiative_Tags_Stddev_Pop_Order_By;
  initiative_tags_stddev_samp_fields: Initiative_Tags_Stddev_Samp_Fields;
  initiative_tags_stddev_samp_order_by: Initiative_Tags_Stddev_Samp_Order_By;
  initiative_tags_sum_fields: Initiative_Tags_Sum_Fields;
  initiative_tags_sum_order_by: Initiative_Tags_Sum_Order_By;
  initiative_tags_var_pop_fields: Initiative_Tags_Var_Pop_Fields;
  initiative_tags_var_pop_order_by: Initiative_Tags_Var_Pop_Order_By;
  initiative_tags_var_samp_fields: Initiative_Tags_Var_Samp_Fields;
  initiative_tags_var_samp_order_by: Initiative_Tags_Var_Samp_Order_By;
  initiative_tags_variance_fields: Initiative_Tags_Variance_Fields;
  initiative_tags_variance_order_by: Initiative_Tags_Variance_Order_By;
  initiative_tasks: Initiative_Tasks;
  initiative_tasks_aggregate: Initiative_Tasks_Aggregate;
  initiative_tasks_aggregate_fields: Initiative_Tasks_Aggregate_Fields;
  initiative_tasks_aggregate_order_by: Initiative_Tasks_Aggregate_Order_By;
  initiative_tasks_arr_rel_insert_input: Initiative_Tasks_Arr_Rel_Insert_Input;
  initiative_tasks_avg_fields: Initiative_Tasks_Avg_Fields;
  initiative_tasks_avg_order_by: Initiative_Tasks_Avg_Order_By;
  initiative_tasks_bool_exp: Initiative_Tasks_Bool_Exp;
  initiative_tasks_inc_input: Initiative_Tasks_Inc_Input;
  initiative_tasks_insert_input: Initiative_Tasks_Insert_Input;
  initiative_tasks_max_fields: Initiative_Tasks_Max_Fields;
  initiative_tasks_max_order_by: Initiative_Tasks_Max_Order_By;
  initiative_tasks_min_fields: Initiative_Tasks_Min_Fields;
  initiative_tasks_min_order_by: Initiative_Tasks_Min_Order_By;
  initiative_tasks_mutation_response: Initiative_Tasks_Mutation_Response;
  initiative_tasks_obj_rel_insert_input: Initiative_Tasks_Obj_Rel_Insert_Input;
  initiative_tasks_on_conflict: Initiative_Tasks_On_Conflict;
  initiative_tasks_order_by: Initiative_Tasks_Order_By;
  initiative_tasks_pk_columns_input: Initiative_Tasks_Pk_Columns_Input;
  initiative_tasks_set_input: Initiative_Tasks_Set_Input;
  initiative_tasks_stddev_fields: Initiative_Tasks_Stddev_Fields;
  initiative_tasks_stddev_order_by: Initiative_Tasks_Stddev_Order_By;
  initiative_tasks_stddev_pop_fields: Initiative_Tasks_Stddev_Pop_Fields;
  initiative_tasks_stddev_pop_order_by: Initiative_Tasks_Stddev_Pop_Order_By;
  initiative_tasks_stddev_samp_fields: Initiative_Tasks_Stddev_Samp_Fields;
  initiative_tasks_stddev_samp_order_by: Initiative_Tasks_Stddev_Samp_Order_By;
  initiative_tasks_sum_fields: Initiative_Tasks_Sum_Fields;
  initiative_tasks_sum_order_by: Initiative_Tasks_Sum_Order_By;
  initiative_tasks_var_pop_fields: Initiative_Tasks_Var_Pop_Fields;
  initiative_tasks_var_pop_order_by: Initiative_Tasks_Var_Pop_Order_By;
  initiative_tasks_var_samp_fields: Initiative_Tasks_Var_Samp_Fields;
  initiative_tasks_var_samp_order_by: Initiative_Tasks_Var_Samp_Order_By;
  initiative_tasks_variance_fields: Initiative_Tasks_Variance_Fields;
  initiative_tasks_variance_order_by: Initiative_Tasks_Variance_Order_By;
  initiative_visits: Initiative_Visits;
  initiative_visits_aggregate: Initiative_Visits_Aggregate;
  initiative_visits_aggregate_fields: Initiative_Visits_Aggregate_Fields;
  initiative_visits_aggregate_order_by: Initiative_Visits_Aggregate_Order_By;
  initiative_visits_arr_rel_insert_input: Initiative_Visits_Arr_Rel_Insert_Input;
  initiative_visits_avg_fields: Initiative_Visits_Avg_Fields;
  initiative_visits_avg_order_by: Initiative_Visits_Avg_Order_By;
  initiative_visits_bool_exp: Initiative_Visits_Bool_Exp;
  initiative_visits_inc_input: Initiative_Visits_Inc_Input;
  initiative_visits_insert_input: Initiative_Visits_Insert_Input;
  initiative_visits_max_fields: Initiative_Visits_Max_Fields;
  initiative_visits_max_order_by: Initiative_Visits_Max_Order_By;
  initiative_visits_min_fields: Initiative_Visits_Min_Fields;
  initiative_visits_min_order_by: Initiative_Visits_Min_Order_By;
  initiative_visits_mutation_response: Initiative_Visits_Mutation_Response;
  initiative_visits_on_conflict: Initiative_Visits_On_Conflict;
  initiative_visits_order_by: Initiative_Visits_Order_By;
  initiative_visits_pk_columns_input: Initiative_Visits_Pk_Columns_Input;
  initiative_visits_set_input: Initiative_Visits_Set_Input;
  initiative_visits_stddev_fields: Initiative_Visits_Stddev_Fields;
  initiative_visits_stddev_order_by: Initiative_Visits_Stddev_Order_By;
  initiative_visits_stddev_pop_fields: Initiative_Visits_Stddev_Pop_Fields;
  initiative_visits_stddev_pop_order_by: Initiative_Visits_Stddev_Pop_Order_By;
  initiative_visits_stddev_samp_fields: Initiative_Visits_Stddev_Samp_Fields;
  initiative_visits_stddev_samp_order_by: Initiative_Visits_Stddev_Samp_Order_By;
  initiative_visits_sum_fields: Initiative_Visits_Sum_Fields;
  initiative_visits_sum_order_by: Initiative_Visits_Sum_Order_By;
  initiative_visits_var_pop_fields: Initiative_Visits_Var_Pop_Fields;
  initiative_visits_var_pop_order_by: Initiative_Visits_Var_Pop_Order_By;
  initiative_visits_var_samp_fields: Initiative_Visits_Var_Samp_Fields;
  initiative_visits_var_samp_order_by: Initiative_Visits_Var_Samp_Order_By;
  initiative_visits_variance_fields: Initiative_Visits_Variance_Fields;
  initiative_visits_variance_order_by: Initiative_Visits_Variance_Order_By;
  initiative_volunteers: Initiative_Volunteers;
  initiative_volunteers_aggregate: Initiative_Volunteers_Aggregate;
  initiative_volunteers_aggregate_fields: Initiative_Volunteers_Aggregate_Fields;
  initiative_volunteers_aggregate_order_by: Initiative_Volunteers_Aggregate_Order_By;
  initiative_volunteers_arr_rel_insert_input: Initiative_Volunteers_Arr_Rel_Insert_Input;
  initiative_volunteers_avg_fields: Initiative_Volunteers_Avg_Fields;
  initiative_volunteers_avg_order_by: Initiative_Volunteers_Avg_Order_By;
  initiative_volunteers_bool_exp: Initiative_Volunteers_Bool_Exp;
  initiative_volunteers_inc_input: Initiative_Volunteers_Inc_Input;
  initiative_volunteers_insert_input: Initiative_Volunteers_Insert_Input;
  initiative_volunteers_max_fields: Initiative_Volunteers_Max_Fields;
  initiative_volunteers_max_order_by: Initiative_Volunteers_Max_Order_By;
  initiative_volunteers_min_fields: Initiative_Volunteers_Min_Fields;
  initiative_volunteers_min_order_by: Initiative_Volunteers_Min_Order_By;
  initiative_volunteers_mutation_response: Initiative_Volunteers_Mutation_Response;
  initiative_volunteers_on_conflict: Initiative_Volunteers_On_Conflict;
  initiative_volunteers_order_by: Initiative_Volunteers_Order_By;
  initiative_volunteers_pk_columns_input: Initiative_Volunteers_Pk_Columns_Input;
  initiative_volunteers_set_input: Initiative_Volunteers_Set_Input;
  initiative_volunteers_stddev_fields: Initiative_Volunteers_Stddev_Fields;
  initiative_volunteers_stddev_order_by: Initiative_Volunteers_Stddev_Order_By;
  initiative_volunteers_stddev_pop_fields: Initiative_Volunteers_Stddev_Pop_Fields;
  initiative_volunteers_stddev_pop_order_by: Initiative_Volunteers_Stddev_Pop_Order_By;
  initiative_volunteers_stddev_samp_fields: Initiative_Volunteers_Stddev_Samp_Fields;
  initiative_volunteers_stddev_samp_order_by: Initiative_Volunteers_Stddev_Samp_Order_By;
  initiative_volunteers_sum_fields: Initiative_Volunteers_Sum_Fields;
  initiative_volunteers_sum_order_by: Initiative_Volunteers_Sum_Order_By;
  initiative_volunteers_var_pop_fields: Initiative_Volunteers_Var_Pop_Fields;
  initiative_volunteers_var_pop_order_by: Initiative_Volunteers_Var_Pop_Order_By;
  initiative_volunteers_var_samp_fields: Initiative_Volunteers_Var_Samp_Fields;
  initiative_volunteers_var_samp_order_by: Initiative_Volunteers_Var_Samp_Order_By;
  initiative_volunteers_variance_fields: Initiative_Volunteers_Variance_Fields;
  initiative_volunteers_variance_order_by: Initiative_Volunteers_Variance_Order_By;
  initiatives: Initiatives;
  initiatives_aggregate: Initiatives_Aggregate;
  initiatives_aggregate_fields: Initiatives_Aggregate_Fields;
  initiatives_bool_exp: Initiatives_Bool_Exp;
  initiatives_insert_input: Initiatives_Insert_Input;
  initiatives_max_fields: Initiatives_Max_Fields;
  initiatives_min_fields: Initiatives_Min_Fields;
  initiatives_mutation_response: Initiatives_Mutation_Response;
  initiatives_nearby_args: Initiatives_Nearby_Args;
  initiatives_obj_rel_insert_input: Initiatives_Obj_Rel_Insert_Input;
  initiatives_on_conflict: Initiatives_On_Conflict;
  initiatives_order_by: Initiatives_Order_By;
  initiatives_pk_columns_input: Initiatives_Pk_Columns_Input;
  initiatives_set_input: Initiatives_Set_Input;
  initiatives_view: Initiatives_View;
  initiatives_view_aggregate: Initiatives_View_Aggregate;
  initiatives_view_aggregate_fields: Initiatives_View_Aggregate_Fields;
  initiatives_view_avg_fields: Initiatives_View_Avg_Fields;
  initiatives_view_bool_exp: Initiatives_View_Bool_Exp;
  initiatives_view_max_fields: Initiatives_View_Max_Fields;
  initiatives_view_min_fields: Initiatives_View_Min_Fields;
  initiatives_view_order_by: Initiatives_View_Order_By;
  initiatives_view_stddev_fields: Initiatives_View_Stddev_Fields;
  initiatives_view_stddev_pop_fields: Initiatives_View_Stddev_Pop_Fields;
  initiatives_view_stddev_samp_fields: Initiatives_View_Stddev_Samp_Fields;
  initiatives_view_sum_fields: Initiatives_View_Sum_Fields;
  initiatives_view_var_pop_fields: Initiatives_View_Var_Pop_Fields;
  initiatives_view_var_samp_fields: Initiatives_View_Var_Samp_Fields;
  initiatives_view_variance_fields: Initiatives_View_Variance_Fields;
  jsonb: Scalars['jsonb'];
  jsonb_comparison_exp: Jsonb_Comparison_Exp;
  map_entries: Map_Entries;
  map_entries_aggregate: Map_Entries_Aggregate;
  map_entries_aggregate_fields: Map_Entries_Aggregate_Fields;
  map_entries_avg_fields: Map_Entries_Avg_Fields;
  map_entries_bool_exp: Map_Entries_Bool_Exp;
  map_entries_max_fields: Map_Entries_Max_Fields;
  map_entries_min_fields: Map_Entries_Min_Fields;
  map_entries_order_by: Map_Entries_Order_By;
  map_entries_stddev_fields: Map_Entries_Stddev_Fields;
  map_entries_stddev_pop_fields: Map_Entries_Stddev_Pop_Fields;
  map_entries_stddev_samp_fields: Map_Entries_Stddev_Samp_Fields;
  map_entries_sum_fields: Map_Entries_Sum_Fields;
  map_entries_var_pop_fields: Map_Entries_Var_Pop_Fields;
  map_entries_var_samp_fields: Map_Entries_Var_Samp_Fields;
  map_entries_variance_fields: Map_Entries_Variance_Fields;
  mutation_root: {};
  name: Scalars['name'];
  name_comparison_exp: Name_Comparison_Exp;
  numeric: Scalars['numeric'];
  numeric_comparison_exp: Numeric_Comparison_Exp;
  org_members: Org_Members;
  org_members_aggregate: Org_Members_Aggregate;
  org_members_aggregate_fields: Org_Members_Aggregate_Fields;
  org_members_aggregate_order_by: Org_Members_Aggregate_Order_By;
  org_members_arr_rel_insert_input: Org_Members_Arr_Rel_Insert_Input;
  org_members_avg_fields: Org_Members_Avg_Fields;
  org_members_avg_order_by: Org_Members_Avg_Order_By;
  org_members_bool_exp: Org_Members_Bool_Exp;
  org_members_inc_input: Org_Members_Inc_Input;
  org_members_insert_input: Org_Members_Insert_Input;
  org_members_max_fields: Org_Members_Max_Fields;
  org_members_max_order_by: Org_Members_Max_Order_By;
  org_members_min_fields: Org_Members_Min_Fields;
  org_members_min_order_by: Org_Members_Min_Order_By;
  org_members_mutation_response: Org_Members_Mutation_Response;
  org_members_on_conflict: Org_Members_On_Conflict;
  org_members_order_by: Org_Members_Order_By;
  org_members_pk_columns_input: Org_Members_Pk_Columns_Input;
  org_members_set_input: Org_Members_Set_Input;
  org_members_stddev_fields: Org_Members_Stddev_Fields;
  org_members_stddev_order_by: Org_Members_Stddev_Order_By;
  org_members_stddev_pop_fields: Org_Members_Stddev_Pop_Fields;
  org_members_stddev_pop_order_by: Org_Members_Stddev_Pop_Order_By;
  org_members_stddev_samp_fields: Org_Members_Stddev_Samp_Fields;
  org_members_stddev_samp_order_by: Org_Members_Stddev_Samp_Order_By;
  org_members_sum_fields: Org_Members_Sum_Fields;
  org_members_sum_order_by: Org_Members_Sum_Order_By;
  org_members_var_pop_fields: Org_Members_Var_Pop_Fields;
  org_members_var_pop_order_by: Org_Members_Var_Pop_Order_By;
  org_members_var_samp_fields: Org_Members_Var_Samp_Fields;
  org_members_var_samp_order_by: Org_Members_Var_Samp_Order_By;
  org_members_variance_fields: Org_Members_Variance_Fields;
  org_members_variance_order_by: Org_Members_Variance_Order_By;
  org_projects: Org_Projects;
  org_projects_aggregate: Org_Projects_Aggregate;
  org_projects_aggregate_fields: Org_Projects_Aggregate_Fields;
  org_projects_aggregate_order_by: Org_Projects_Aggregate_Order_By;
  org_projects_arr_rel_insert_input: Org_Projects_Arr_Rel_Insert_Input;
  org_projects_avg_fields: Org_Projects_Avg_Fields;
  org_projects_avg_order_by: Org_Projects_Avg_Order_By;
  org_projects_bool_exp: Org_Projects_Bool_Exp;
  org_projects_inc_input: Org_Projects_Inc_Input;
  org_projects_insert_input: Org_Projects_Insert_Input;
  org_projects_max_fields: Org_Projects_Max_Fields;
  org_projects_max_order_by: Org_Projects_Max_Order_By;
  org_projects_min_fields: Org_Projects_Min_Fields;
  org_projects_min_order_by: Org_Projects_Min_Order_By;
  org_projects_mutation_response: Org_Projects_Mutation_Response;
  org_projects_obj_rel_insert_input: Org_Projects_Obj_Rel_Insert_Input;
  org_projects_on_conflict: Org_Projects_On_Conflict;
  org_projects_order_by: Org_Projects_Order_By;
  org_projects_pk_columns_input: Org_Projects_Pk_Columns_Input;
  org_projects_set_input: Org_Projects_Set_Input;
  org_projects_stddev_fields: Org_Projects_Stddev_Fields;
  org_projects_stddev_order_by: Org_Projects_Stddev_Order_By;
  org_projects_stddev_pop_fields: Org_Projects_Stddev_Pop_Fields;
  org_projects_stddev_pop_order_by: Org_Projects_Stddev_Pop_Order_By;
  org_projects_stddev_samp_fields: Org_Projects_Stddev_Samp_Fields;
  org_projects_stddev_samp_order_by: Org_Projects_Stddev_Samp_Order_By;
  org_projects_sum_fields: Org_Projects_Sum_Fields;
  org_projects_sum_order_by: Org_Projects_Sum_Order_By;
  org_projects_var_pop_fields: Org_Projects_Var_Pop_Fields;
  org_projects_var_pop_order_by: Org_Projects_Var_Pop_Order_By;
  org_projects_var_samp_fields: Org_Projects_Var_Samp_Fields;
  org_projects_var_samp_order_by: Org_Projects_Var_Samp_Order_By;
  org_projects_variance_fields: Org_Projects_Variance_Fields;
  org_projects_variance_order_by: Org_Projects_Variance_Order_By;
  org_tags: Org_Tags;
  org_tags_aggregate: Org_Tags_Aggregate;
  org_tags_aggregate_fields: Org_Tags_Aggregate_Fields;
  org_tags_aggregate_order_by: Org_Tags_Aggregate_Order_By;
  org_tags_arr_rel_insert_input: Org_Tags_Arr_Rel_Insert_Input;
  org_tags_avg_fields: Org_Tags_Avg_Fields;
  org_tags_avg_order_by: Org_Tags_Avg_Order_By;
  org_tags_bool_exp: Org_Tags_Bool_Exp;
  org_tags_inc_input: Org_Tags_Inc_Input;
  org_tags_insert_input: Org_Tags_Insert_Input;
  org_tags_max_fields: Org_Tags_Max_Fields;
  org_tags_max_order_by: Org_Tags_Max_Order_By;
  org_tags_min_fields: Org_Tags_Min_Fields;
  org_tags_min_order_by: Org_Tags_Min_Order_By;
  org_tags_mutation_response: Org_Tags_Mutation_Response;
  org_tags_on_conflict: Org_Tags_On_Conflict;
  org_tags_order_by: Org_Tags_Order_By;
  org_tags_pk_columns_input: Org_Tags_Pk_Columns_Input;
  org_tags_set_input: Org_Tags_Set_Input;
  org_tags_stddev_fields: Org_Tags_Stddev_Fields;
  org_tags_stddev_order_by: Org_Tags_Stddev_Order_By;
  org_tags_stddev_pop_fields: Org_Tags_Stddev_Pop_Fields;
  org_tags_stddev_pop_order_by: Org_Tags_Stddev_Pop_Order_By;
  org_tags_stddev_samp_fields: Org_Tags_Stddev_Samp_Fields;
  org_tags_stddev_samp_order_by: Org_Tags_Stddev_Samp_Order_By;
  org_tags_sum_fields: Org_Tags_Sum_Fields;
  org_tags_sum_order_by: Org_Tags_Sum_Order_By;
  org_tags_var_pop_fields: Org_Tags_Var_Pop_Fields;
  org_tags_var_pop_order_by: Org_Tags_Var_Pop_Order_By;
  org_tags_var_samp_fields: Org_Tags_Var_Samp_Fields;
  org_tags_var_samp_order_by: Org_Tags_Var_Samp_Order_By;
  org_tags_variance_fields: Org_Tags_Variance_Fields;
  org_tags_variance_order_by: Org_Tags_Variance_Order_By;
  org_visits: Org_Visits;
  org_visits_aggregate: Org_Visits_Aggregate;
  org_visits_aggregate_fields: Org_Visits_Aggregate_Fields;
  org_visits_avg_fields: Org_Visits_Avg_Fields;
  org_visits_bool_exp: Org_Visits_Bool_Exp;
  org_visits_inc_input: Org_Visits_Inc_Input;
  org_visits_insert_input: Org_Visits_Insert_Input;
  org_visits_max_fields: Org_Visits_Max_Fields;
  org_visits_min_fields: Org_Visits_Min_Fields;
  org_visits_mutation_response: Org_Visits_Mutation_Response;
  org_visits_order_by: Org_Visits_Order_By;
  org_visits_set_input: Org_Visits_Set_Input;
  org_visits_stddev_fields: Org_Visits_Stddev_Fields;
  org_visits_stddev_pop_fields: Org_Visits_Stddev_Pop_Fields;
  org_visits_stddev_samp_fields: Org_Visits_Stddev_Samp_Fields;
  org_visits_sum_fields: Org_Visits_Sum_Fields;
  org_visits_var_pop_fields: Org_Visits_Var_Pop_Fields;
  org_visits_var_samp_fields: Org_Visits_Var_Samp_Fields;
  org_visits_variance_fields: Org_Visits_Variance_Fields;
  orgs: Orgs;
  orgs_aggregate: Orgs_Aggregate;
  orgs_aggregate_fields: Orgs_Aggregate_Fields;
  orgs_bool_exp: Orgs_Bool_Exp;
  orgs_insert_input: Orgs_Insert_Input;
  orgs_max_fields: Orgs_Max_Fields;
  orgs_min_fields: Orgs_Min_Fields;
  orgs_mutation_response: Orgs_Mutation_Response;
  orgs_nearby_args: Orgs_Nearby_Args;
  orgs_obj_rel_insert_input: Orgs_Obj_Rel_Insert_Input;
  orgs_on_conflict: Orgs_On_Conflict;
  orgs_order_by: Orgs_Order_By;
  orgs_pk_columns_input: Orgs_Pk_Columns_Input;
  orgs_set_input: Orgs_Set_Input;
  orgs_view: Orgs_View;
  orgs_view_aggregate: Orgs_View_Aggregate;
  orgs_view_aggregate_fields: Orgs_View_Aggregate_Fields;
  orgs_view_avg_fields: Orgs_View_Avg_Fields;
  orgs_view_bool_exp: Orgs_View_Bool_Exp;
  orgs_view_max_fields: Orgs_View_Max_Fields;
  orgs_view_min_fields: Orgs_View_Min_Fields;
  orgs_view_order_by: Orgs_View_Order_By;
  orgs_view_stddev_fields: Orgs_View_Stddev_Fields;
  orgs_view_stddev_pop_fields: Orgs_View_Stddev_Pop_Fields;
  orgs_view_stddev_samp_fields: Orgs_View_Stddev_Samp_Fields;
  orgs_view_sum_fields: Orgs_View_Sum_Fields;
  orgs_view_var_pop_fields: Orgs_View_Var_Pop_Fields;
  orgs_view_var_samp_fields: Orgs_View_Var_Samp_Fields;
  orgs_view_variance_fields: Orgs_View_Variance_Fields;
  post_types: Post_Types;
  post_types_aggregate: Post_Types_Aggregate;
  post_types_aggregate_fields: Post_Types_Aggregate_Fields;
  post_types_bool_exp: Post_Types_Bool_Exp;
  post_types_enum_comparison_exp: Post_Types_Enum_Comparison_Exp;
  post_types_insert_input: Post_Types_Insert_Input;
  post_types_max_fields: Post_Types_Max_Fields;
  post_types_min_fields: Post_Types_Min_Fields;
  post_types_mutation_response: Post_Types_Mutation_Response;
  post_types_on_conflict: Post_Types_On_Conflict;
  post_types_order_by: Post_Types_Order_By;
  post_types_pk_columns_input: Post_Types_Pk_Columns_Input;
  post_types_set_input: Post_Types_Set_Input;
  query_root: {};
  reactions: Reactions;
  reactions_aggregate: Reactions_Aggregate;
  reactions_aggregate_fields: Reactions_Aggregate_Fields;
  reactions_bool_exp: Reactions_Bool_Exp;
  reactions_enum_comparison_exp: Reactions_Enum_Comparison_Exp;
  reactions_insert_input: Reactions_Insert_Input;
  reactions_max_fields: Reactions_Max_Fields;
  reactions_min_fields: Reactions_Min_Fields;
  reactions_mutation_response: Reactions_Mutation_Response;
  reactions_on_conflict: Reactions_On_Conflict;
  reactions_order_by: Reactions_Order_By;
  reactions_pk_columns_input: Reactions_Pk_Columns_Input;
  reactions_set_input: Reactions_Set_Input;
  spatial_ref_sys: Spatial_Ref_Sys;
  spatial_ref_sys_aggregate: Spatial_Ref_Sys_Aggregate;
  spatial_ref_sys_aggregate_fields: Spatial_Ref_Sys_Aggregate_Fields;
  spatial_ref_sys_avg_fields: Spatial_Ref_Sys_Avg_Fields;
  spatial_ref_sys_bool_exp: Spatial_Ref_Sys_Bool_Exp;
  spatial_ref_sys_inc_input: Spatial_Ref_Sys_Inc_Input;
  spatial_ref_sys_insert_input: Spatial_Ref_Sys_Insert_Input;
  spatial_ref_sys_max_fields: Spatial_Ref_Sys_Max_Fields;
  spatial_ref_sys_min_fields: Spatial_Ref_Sys_Min_Fields;
  spatial_ref_sys_mutation_response: Spatial_Ref_Sys_Mutation_Response;
  spatial_ref_sys_on_conflict: Spatial_Ref_Sys_On_Conflict;
  spatial_ref_sys_order_by: Spatial_Ref_Sys_Order_By;
  spatial_ref_sys_pk_columns_input: Spatial_Ref_Sys_Pk_Columns_Input;
  spatial_ref_sys_set_input: Spatial_Ref_Sys_Set_Input;
  spatial_ref_sys_stddev_fields: Spatial_Ref_Sys_Stddev_Fields;
  spatial_ref_sys_stddev_pop_fields: Spatial_Ref_Sys_Stddev_Pop_Fields;
  spatial_ref_sys_stddev_samp_fields: Spatial_Ref_Sys_Stddev_Samp_Fields;
  spatial_ref_sys_sum_fields: Spatial_Ref_Sys_Sum_Fields;
  spatial_ref_sys_var_pop_fields: Spatial_Ref_Sys_Var_Pop_Fields;
  spatial_ref_sys_var_samp_fields: Spatial_Ref_Sys_Var_Samp_Fields;
  spatial_ref_sys_variance_fields: Spatial_Ref_Sys_Variance_Fields;
  st_d_within_geography_input: St_D_Within_Geography_Input;
  st_d_within_input: St_D_Within_Input;
  subscription_root: {};
  tags: Tags;
  tags_aggregate: Tags_Aggregate;
  tags_aggregate_fields: Tags_Aggregate_Fields;
  tags_bool_exp: Tags_Bool_Exp;
  tags_insert_input: Tags_Insert_Input;
  tags_max_fields: Tags_Max_Fields;
  tags_min_fields: Tags_Min_Fields;
  tags_mutation_response: Tags_Mutation_Response;
  tags_obj_rel_insert_input: Tags_Obj_Rel_Insert_Input;
  tags_on_conflict: Tags_On_Conflict;
  tags_order_by: Tags_Order_By;
  tags_pk_columns_input: Tags_Pk_Columns_Input;
  tags_set_input: Tags_Set_Input;
  task_statuses: Task_Statuses;
  task_statuses_aggregate: Task_Statuses_Aggregate;
  task_statuses_aggregate_fields: Task_Statuses_Aggregate_Fields;
  task_statuses_bool_exp: Task_Statuses_Bool_Exp;
  task_statuses_enum_comparison_exp: Task_Statuses_Enum_Comparison_Exp;
  task_statuses_insert_input: Task_Statuses_Insert_Input;
  task_statuses_max_fields: Task_Statuses_Max_Fields;
  task_statuses_min_fields: Task_Statuses_Min_Fields;
  task_statuses_mutation_response: Task_Statuses_Mutation_Response;
  task_statuses_on_conflict: Task_Statuses_On_Conflict;
  task_statuses_order_by: Task_Statuses_Order_By;
  task_statuses_pk_columns_input: Task_Statuses_Pk_Columns_Input;
  task_statuses_set_input: Task_Statuses_Set_Input;
  tenders: Tenders;
  tenders_aggregate: Tenders_Aggregate;
  tenders_aggregate_fields: Tenders_Aggregate_Fields;
  tenders_aggregate_order_by: Tenders_Aggregate_Order_By;
  tenders_arr_rel_insert_input: Tenders_Arr_Rel_Insert_Input;
  tenders_avg_fields: Tenders_Avg_Fields;
  tenders_avg_order_by: Tenders_Avg_Order_By;
  tenders_bool_exp: Tenders_Bool_Exp;
  tenders_inc_input: Tenders_Inc_Input;
  tenders_insert_input: Tenders_Insert_Input;
  tenders_max_fields: Tenders_Max_Fields;
  tenders_max_order_by: Tenders_Max_Order_By;
  tenders_min_fields: Tenders_Min_Fields;
  tenders_min_order_by: Tenders_Min_Order_By;
  tenders_mutation_response: Tenders_Mutation_Response;
  tenders_obj_rel_insert_input: Tenders_Obj_Rel_Insert_Input;
  tenders_on_conflict: Tenders_On_Conflict;
  tenders_order_by: Tenders_Order_By;
  tenders_pk_columns_input: Tenders_Pk_Columns_Input;
  tenders_set_input: Tenders_Set_Input;
  tenders_stddev_fields: Tenders_Stddev_Fields;
  tenders_stddev_order_by: Tenders_Stddev_Order_By;
  tenders_stddev_pop_fields: Tenders_Stddev_Pop_Fields;
  tenders_stddev_pop_order_by: Tenders_Stddev_Pop_Order_By;
  tenders_stddev_samp_fields: Tenders_Stddev_Samp_Fields;
  tenders_stddev_samp_order_by: Tenders_Stddev_Samp_Order_By;
  tenders_sum_fields: Tenders_Sum_Fields;
  tenders_sum_order_by: Tenders_Sum_Order_By;
  tenders_var_pop_fields: Tenders_Var_Pop_Fields;
  tenders_var_pop_order_by: Tenders_Var_Pop_Order_By;
  tenders_var_samp_fields: Tenders_Var_Samp_Fields;
  tenders_var_samp_order_by: Tenders_Var_Samp_Order_By;
  tenders_variance_fields: Tenders_Variance_Fields;
  tenders_variance_order_by: Tenders_Variance_Order_By;
  timestamp: Scalars['timestamp'];
  timestamp_comparison_exp: Timestamp_Comparison_Exp;
  timestamptz: Scalars['timestamptz'];
  timestamptz_comparison_exp: Timestamptz_Comparison_Exp;
  user_settings: User_Settings;
  user_settings_aggregate: User_Settings_Aggregate;
  user_settings_aggregate_fields: User_Settings_Aggregate_Fields;
  user_settings_bool_exp: User_Settings_Bool_Exp;
  user_settings_insert_input: User_Settings_Insert_Input;
  user_settings_max_fields: User_Settings_Max_Fields;
  user_settings_min_fields: User_Settings_Min_Fields;
  user_settings_mutation_response: User_Settings_Mutation_Response;
  user_settings_obj_rel_insert_input: User_Settings_Obj_Rel_Insert_Input;
  user_settings_on_conflict: User_Settings_On_Conflict;
  user_settings_order_by: User_Settings_Order_By;
  user_settings_pk_columns_input: User_Settings_Pk_Columns_Input;
  user_settings_set_input: User_Settings_Set_Input;
  user_subscriptions: User_Subscriptions;
  user_subscriptions_aggregate: User_Subscriptions_Aggregate;
  user_subscriptions_aggregate_fields: User_Subscriptions_Aggregate_Fields;
  user_subscriptions_aggregate_order_by: User_Subscriptions_Aggregate_Order_By;
  user_subscriptions_arr_rel_insert_input: User_Subscriptions_Arr_Rel_Insert_Input;
  user_subscriptions_bool_exp: User_Subscriptions_Bool_Exp;
  user_subscriptions_insert_input: User_Subscriptions_Insert_Input;
  user_subscriptions_max_fields: User_Subscriptions_Max_Fields;
  user_subscriptions_max_order_by: User_Subscriptions_Max_Order_By;
  user_subscriptions_min_fields: User_Subscriptions_Min_Fields;
  user_subscriptions_min_order_by: User_Subscriptions_Min_Order_By;
  user_subscriptions_mutation_response: User_Subscriptions_Mutation_Response;
  user_subscriptions_on_conflict: User_Subscriptions_On_Conflict;
  user_subscriptions_order_by: User_Subscriptions_Order_By;
  user_subscriptions_pk_columns_input: User_Subscriptions_Pk_Columns_Input;
  user_subscriptions_set_input: User_Subscriptions_Set_Input;
  users: Users;
  users_aggregate: Users_Aggregate;
  users_aggregate_fields: Users_Aggregate_Fields;
  users_bool_exp: Users_Bool_Exp;
  users_insert_input: Users_Insert_Input;
  users_max_fields: Users_Max_Fields;
  users_min_fields: Users_Min_Fields;
  users_mutation_response: Users_Mutation_Response;
  users_obj_rel_insert_input: Users_Obj_Rel_Insert_Input;
  users_on_conflict: Users_On_Conflict;
  users_order_by: Users_Order_By;
  users_pk_columns_input: Users_Pk_Columns_Input;
  users_set_input: Users_Set_Input;
  uuid: Scalars['uuid'];
  uuid_comparison_exp: Uuid_Comparison_Exp;
};

export type CachedDirectiveArgs = {
  refresh?: Scalars['Boolean'];
  ttl?: Scalars['Int'];
};

export type CachedDirectiveResolver<Result, Parent, ContextType = any, Args = CachedDirectiveArgs> = DirectiveResolverFn<Result, Parent, ContextType, Args>;

export type Auth_Account_ProvidersResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers'] = ResolversParentTypes['auth_account_providers']> = {
  account?: Resolver<ResolversTypes['auth_accounts'], ParentType, ContextType>;
  account_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  auth_provider?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  auth_provider_unique_id?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  provider?: Resolver<ResolversTypes['auth_providers'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Providers_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers_aggregate'] = ResolversParentTypes['auth_account_providers_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_account_providers_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_account_providers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Providers_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers_aggregate_fields'] = ResolversParentTypes['auth_account_providers_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Account_Providers_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_account_providers_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_account_providers_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Providers_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers_max_fields'] = ResolversParentTypes['auth_account_providers_max_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  auth_provider?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  auth_provider_unique_id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Providers_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers_min_fields'] = ResolversParentTypes['auth_account_providers_min_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  auth_provider?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  auth_provider_unique_id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Providers_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_providers_mutation_response'] = ResolversParentTypes['auth_account_providers_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_account_providers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_RolesResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles'] = ResolversParentTypes['auth_account_roles']> = {
  account?: Resolver<ResolversTypes['auth_accounts'], ParentType, ContextType>;
  account_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  role?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  roleByRole?: Resolver<ResolversTypes['auth_roles'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Roles_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles_aggregate'] = ResolversParentTypes['auth_account_roles_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_account_roles_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_account_roles']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Roles_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles_aggregate_fields'] = ResolversParentTypes['auth_account_roles_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Account_Roles_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_account_roles_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_account_roles_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Roles_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles_max_fields'] = ResolversParentTypes['auth_account_roles_max_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Roles_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles_min_fields'] = ResolversParentTypes['auth_account_roles_min_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Account_Roles_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_account_roles_mutation_response'] = ResolversParentTypes['auth_account_roles_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_account_roles']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_AccountsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts'] = ResolversParentTypes['auth_accounts']> = {
  account_providers?: Resolver<Array<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Auth_AccountsAccount_ProvidersArgs, never>>;
  account_providers_aggregate?: Resolver<ResolversTypes['auth_account_providers_aggregate'], ParentType, ContextType, RequireFields<Auth_AccountsAccount_Providers_AggregateArgs, never>>;
  account_roles?: Resolver<Array<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Auth_AccountsAccount_RolesArgs, never>>;
  account_roles_aggregate?: Resolver<ResolversTypes['auth_account_roles_aggregate'], ParentType, ContextType, RequireFields<Auth_AccountsAccount_Roles_AggregateArgs, never>>;
  active?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  custom_register_data?: Resolver<Maybe<ResolversTypes['jsonb']>, ParentType, ContextType, RequireFields<Auth_AccountsCustom_Register_DataArgs, never>>;
  default_role?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  is_anonymous?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  mfa_enabled?: Resolver<ResolversTypes['Boolean'], ParentType, ContextType>;
  new_email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  otp_secret?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  password_hash?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  refresh_tokens?: Resolver<Array<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Auth_AccountsRefresh_TokensArgs, never>>;
  refresh_tokens_aggregate?: Resolver<ResolversTypes['auth_refresh_tokens_aggregate'], ParentType, ContextType, RequireFields<Auth_AccountsRefresh_Tokens_AggregateArgs, never>>;
  role?: Resolver<ResolversTypes['auth_roles'], ParentType, ContextType>;
  ticket?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  ticket_expires_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  updated_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Accounts_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts_aggregate'] = ResolversParentTypes['auth_accounts_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_accounts_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_accounts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Accounts_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts_aggregate_fields'] = ResolversParentTypes['auth_accounts_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Accounts_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_accounts_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_accounts_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Accounts_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts_max_fields'] = ResolversParentTypes['auth_accounts_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  default_role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  new_email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  otp_secret?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  password_hash?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  ticket?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  ticket_expires_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Accounts_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts_min_fields'] = ResolversParentTypes['auth_accounts_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  default_role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  new_email?: Resolver<Maybe<ResolversTypes['citext']>, ParentType, ContextType>;
  otp_secret?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  password_hash?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  ticket?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  ticket_expires_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Accounts_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_accounts_mutation_response'] = ResolversParentTypes['auth_accounts_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_accounts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_MigrationsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations'] = ResolversParentTypes['auth_migrations']> = {
  executed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  hash?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  name?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_aggregate'] = ResolversParentTypes['auth_migrations_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_migrations_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_migrations']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_aggregate_fields'] = ResolversParentTypes['auth_migrations_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['auth_migrations_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Migrations_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_migrations_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_migrations_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['auth_migrations_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['auth_migrations_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['auth_migrations_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['auth_migrations_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['auth_migrations_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['auth_migrations_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['auth_migrations_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_avg_fields'] = ResolversParentTypes['auth_migrations_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_max_fields'] = ResolversParentTypes['auth_migrations_max_fields']> = {
  executed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  hash?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_min_fields'] = ResolversParentTypes['auth_migrations_min_fields']> = {
  executed_at?: Resolver<Maybe<ResolversTypes['timestamp']>, ParentType, ContextType>;
  hash?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_mutation_response'] = ResolversParentTypes['auth_migrations_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_migrations']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_stddev_fields'] = ResolversParentTypes['auth_migrations_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_stddev_pop_fields'] = ResolversParentTypes['auth_migrations_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_stddev_samp_fields'] = ResolversParentTypes['auth_migrations_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_sum_fields'] = ResolversParentTypes['auth_migrations_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_var_pop_fields'] = ResolversParentTypes['auth_migrations_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_var_samp_fields'] = ResolversParentTypes['auth_migrations_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Migrations_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_migrations_variance_fields'] = ResolversParentTypes['auth_migrations_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_ProvidersResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers'] = ResolversParentTypes['auth_providers']> = {
  account_providers?: Resolver<Array<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Auth_ProvidersAccount_ProvidersArgs, never>>;
  account_providers_aggregate?: Resolver<ResolversTypes['auth_account_providers_aggregate'], ParentType, ContextType, RequireFields<Auth_ProvidersAccount_Providers_AggregateArgs, never>>;
  provider?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Providers_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers_aggregate'] = ResolversParentTypes['auth_providers_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_providers_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_providers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Providers_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers_aggregate_fields'] = ResolversParentTypes['auth_providers_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Providers_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_providers_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_providers_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Providers_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers_max_fields'] = ResolversParentTypes['auth_providers_max_fields']> = {
  provider?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Providers_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers_min_fields'] = ResolversParentTypes['auth_providers_min_fields']> = {
  provider?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Providers_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_providers_mutation_response'] = ResolversParentTypes['auth_providers_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_providers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_TokensResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens'] = ResolversParentTypes['auth_refresh_tokens']> = {
  account?: Resolver<ResolversTypes['auth_accounts'], ParentType, ContextType>;
  account_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  expires_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  refresh_token?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_Tokens_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens_aggregate'] = ResolversParentTypes['auth_refresh_tokens_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_Tokens_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens_aggregate_fields'] = ResolversParentTypes['auth_refresh_tokens_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Refresh_Tokens_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_Tokens_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens_max_fields'] = ResolversParentTypes['auth_refresh_tokens_max_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  expires_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  refresh_token?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_Tokens_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens_min_fields'] = ResolversParentTypes['auth_refresh_tokens_min_fields']> = {
  account_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  expires_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  refresh_token?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Refresh_Tokens_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_refresh_tokens_mutation_response'] = ResolversParentTypes['auth_refresh_tokens_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_RolesResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles'] = ResolversParentTypes['auth_roles']> = {
  account_roles?: Resolver<Array<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Auth_RolesAccount_RolesArgs, never>>;
  account_roles_aggregate?: Resolver<ResolversTypes['auth_account_roles_aggregate'], ParentType, ContextType, RequireFields<Auth_RolesAccount_Roles_AggregateArgs, never>>;
  accounts?: Resolver<Array<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Auth_RolesAccountsArgs, never>>;
  accounts_aggregate?: Resolver<ResolversTypes['auth_accounts_aggregate'], ParentType, ContextType, RequireFields<Auth_RolesAccounts_AggregateArgs, never>>;
  role?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Roles_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles_aggregate'] = ResolversParentTypes['auth_roles_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['auth_roles_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['auth_roles']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Roles_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles_aggregate_fields'] = ResolversParentTypes['auth_roles_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Auth_Roles_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['auth_roles_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['auth_roles_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Roles_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles_max_fields'] = ResolversParentTypes['auth_roles_max_fields']> = {
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Roles_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles_min_fields'] = ResolversParentTypes['auth_roles_min_fields']> = {
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Auth_Roles_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['auth_roles_mutation_response'] = ResolversParentTypes['auth_roles_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['auth_roles']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface BigintScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['bigint'], any> {
  name: 'bigint';
}

export interface CitextScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['citext'], any> {
  name: 'citext';
}

export type EntriesResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries'] = ResolversParentTypes['entries']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_aggregate'] = ResolversParentTypes['entries_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['entries_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['entries']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_aggregate_fields'] = ResolversParentTypes['entries_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['entries_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Entries_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['entries_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['entries_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['entries_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['entries_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['entries_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['entries_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['entries_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['entries_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['entries_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_avg_fields'] = ResolversParentTypes['entries_avg_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_max_fields'] = ResolversParentTypes['entries_max_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_min_fields'] = ResolversParentTypes['entries_min_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_stddev_fields'] = ResolversParentTypes['entries_stddev_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_stddev_pop_fields'] = ResolversParentTypes['entries_stddev_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_stddev_samp_fields'] = ResolversParentTypes['entries_stddev_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_sum_fields'] = ResolversParentTypes['entries_sum_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_var_pop_fields'] = ResolversParentTypes['entries_var_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_var_samp_fields'] = ResolversParentTypes['entries_var_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entries_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entries_variance_fields'] = ResolversParentTypes['entries_variance_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_MembersResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members'] = ResolversParentTypes['entry_members']> = {
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_aggregate'] = ResolversParentTypes['entry_members_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['entry_members_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['entry_members']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_aggregate_fields'] = ResolversParentTypes['entry_members_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['entry_members_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Entry_Members_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['entry_members_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['entry_members_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['entry_members_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['entry_members_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['entry_members_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['entry_members_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['entry_members_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['entry_members_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['entry_members_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_avg_fields'] = ResolversParentTypes['entry_members_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_max_fields'] = ResolversParentTypes['entry_members_max_fields']> = {
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_min_fields'] = ResolversParentTypes['entry_members_min_fields']> = {
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_stddev_fields'] = ResolversParentTypes['entry_members_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_stddev_pop_fields'] = ResolversParentTypes['entry_members_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_stddev_samp_fields'] = ResolversParentTypes['entry_members_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_sum_fields'] = ResolversParentTypes['entry_members_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_var_pop_fields'] = ResolversParentTypes['entry_members_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_var_samp_fields'] = ResolversParentTypes['entry_members_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Members_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_members_variance_fields'] = ResolversParentTypes['entry_members_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_VisitsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits'] = ResolversParentTypes['entry_visits']> = {
  entry?: Resolver<Maybe<ResolversTypes['entries']>, ParentType, ContextType>;
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_aggregate'] = ResolversParentTypes['entry_visits_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['entry_visits_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['entry_visits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_aggregate_fields'] = ResolversParentTypes['entry_visits_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['entry_visits_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Entry_Visits_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['entry_visits_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['entry_visits_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['entry_visits_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['entry_visits_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['entry_visits_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['entry_visits_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['entry_visits_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['entry_visits_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['entry_visits_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_avg_fields'] = ResolversParentTypes['entry_visits_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_max_fields'] = ResolversParentTypes['entry_visits_max_fields']> = {
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_min_fields'] = ResolversParentTypes['entry_visits_min_fields']> = {
  entry_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_stddev_fields'] = ResolversParentTypes['entry_visits_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_stddev_pop_fields'] = ResolversParentTypes['entry_visits_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_stddev_samp_fields'] = ResolversParentTypes['entry_visits_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_sum_fields'] = ResolversParentTypes['entry_visits_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_var_pop_fields'] = ResolversParentTypes['entry_visits_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_var_samp_fields'] = ResolversParentTypes['entry_visits_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Entry_Visits_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['entry_visits_variance_fields'] = ResolversParentTypes['entry_visits_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_TypesResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types'] = ResolversParentTypes['file_types']> = {
  type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_Types_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types_aggregate'] = ResolversParentTypes['file_types_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['file_types_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['file_types']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_Types_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types_aggregate_fields'] = ResolversParentTypes['file_types_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<File_Types_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['file_types_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['file_types_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_Types_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types_max_fields'] = ResolversParentTypes['file_types_max_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_Types_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types_min_fields'] = ResolversParentTypes['file_types_min_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type File_Types_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['file_types_mutation_response'] = ResolversParentTypes['file_types_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['file_types']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type FilesResolvers<ContextType = any, ParentType extends ResolversParentTypes['files'] = ResolversParentTypes['files']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  downloadable_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  file_path?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  initiative?: Resolver<Maybe<ResolversTypes['initiatives']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  type?: Resolver<ResolversTypes['file_types_enum'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_aggregate'] = ResolversParentTypes['files_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['files_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_aggregate_fields'] = ResolversParentTypes['files_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['files_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Files_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['files_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['files_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['files_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['files_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['files_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['files_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['files_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['files_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['files_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_avg_fields'] = ResolversParentTypes['files_avg_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_max_fields'] = ResolversParentTypes['files_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  downloadable_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  file_path?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_min_fields'] = ResolversParentTypes['files_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  downloadable_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  file_path?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_mutation_response'] = ResolversParentTypes['files_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_stddev_fields'] = ResolversParentTypes['files_stddev_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_stddev_pop_fields'] = ResolversParentTypes['files_stddev_pop_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_stddev_samp_fields'] = ResolversParentTypes['files_stddev_samp_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_sum_fields'] = ResolversParentTypes['files_sum_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_var_pop_fields'] = ResolversParentTypes['files_var_pop_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_var_samp_fields'] = ResolversParentTypes['files_var_samp_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Files_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['files_variance_fields'] = ResolversParentTypes['files_variance_fields']> = {
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface Float8ScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['float8'], any> {
  name: 'float8';
}

export interface GeographyScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['geography'], any> {
  name: 'geography';
}

export type Geography_ColumnsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns'] = ResolversParentTypes['geography_columns']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  f_geography_column?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  f_table_catalog?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  f_table_name?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  f_table_schema?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_aggregate'] = ResolversParentTypes['geography_columns_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['geography_columns_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['geography_columns']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_aggregate_fields'] = ResolversParentTypes['geography_columns_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['geography_columns_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Geography_Columns_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['geography_columns_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['geography_columns_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['geography_columns_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['geography_columns_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['geography_columns_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['geography_columns_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['geography_columns_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['geography_columns_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['geography_columns_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_avg_fields'] = ResolversParentTypes['geography_columns_avg_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_max_fields'] = ResolversParentTypes['geography_columns_max_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_min_fields'] = ResolversParentTypes['geography_columns_min_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_stddev_fields'] = ResolversParentTypes['geography_columns_stddev_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_stddev_pop_fields'] = ResolversParentTypes['geography_columns_stddev_pop_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_stddev_samp_fields'] = ResolversParentTypes['geography_columns_stddev_samp_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_sum_fields'] = ResolversParentTypes['geography_columns_sum_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_var_pop_fields'] = ResolversParentTypes['geography_columns_var_pop_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_var_samp_fields'] = ResolversParentTypes['geography_columns_var_samp_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geography_Columns_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geography_columns_variance_fields'] = ResolversParentTypes['geography_columns_variance_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface GeometryScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['geometry'], any> {
  name: 'geometry';
}

export type Geometry_ColumnsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns'] = ResolversParentTypes['geometry_columns']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  f_geometry_column?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  f_table_catalog?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  f_table_name?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  f_table_schema?: Resolver<Maybe<ResolversTypes['name']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_aggregate'] = ResolversParentTypes['geometry_columns_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['geometry_columns_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['geometry_columns']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_aggregate_fields'] = ResolversParentTypes['geometry_columns_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['geometry_columns_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Geometry_Columns_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['geometry_columns_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['geometry_columns_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['geometry_columns_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['geometry_columns_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['geometry_columns_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['geometry_columns_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['geometry_columns_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['geometry_columns_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['geometry_columns_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_avg_fields'] = ResolversParentTypes['geometry_columns_avg_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_max_fields'] = ResolversParentTypes['geometry_columns_max_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  f_table_catalog?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_min_fields'] = ResolversParentTypes['geometry_columns_min_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  f_table_catalog?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_mutation_response'] = ResolversParentTypes['geometry_columns_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['geometry_columns']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_stddev_fields'] = ResolversParentTypes['geometry_columns_stddev_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_stddev_pop_fields'] = ResolversParentTypes['geometry_columns_stddev_pop_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_stddev_samp_fields'] = ResolversParentTypes['geometry_columns_stddev_samp_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_sum_fields'] = ResolversParentTypes['geometry_columns_sum_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_var_pop_fields'] = ResolversParentTypes['geometry_columns_var_pop_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_var_samp_fields'] = ResolversParentTypes['geometry_columns_var_samp_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Geometry_Columns_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['geometry_columns_variance_fields'] = ResolversParentTypes['geometry_columns_variance_fields']> = {
  coord_dimension?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18nResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n'] = ResolversParentTypes['i18n']> = {
  category?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  en?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  fr?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  i18n_category?: Resolver<ResolversTypes['i18n_categories'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  key?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  uk?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_aggregate'] = ResolversParentTypes['i18n_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['i18n_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['i18n']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_aggregate_fields'] = ResolversParentTypes['i18n_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['i18n_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<I18n_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['i18n_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['i18n_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['i18n_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['i18n_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['i18n_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['i18n_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['i18n_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['i18n_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['i18n_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_avg_fields'] = ResolversParentTypes['i18n_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_CategoriesResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories'] = ResolversParentTypes['i18n_categories']> = {
  category?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  i18ns?: Resolver<Array<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<I18n_CategoriesI18nsArgs, never>>;
  i18ns_aggregate?: Resolver<ResolversTypes['i18n_aggregate'], ParentType, ContextType, RequireFields<I18n_CategoriesI18ns_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Categories_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories_aggregate'] = ResolversParentTypes['i18n_categories_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['i18n_categories_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['i18n_categories']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Categories_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories_aggregate_fields'] = ResolversParentTypes['i18n_categories_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<I18n_Categories_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['i18n_categories_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['i18n_categories_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Categories_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories_max_fields'] = ResolversParentTypes['i18n_categories_max_fields']> = {
  category?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Categories_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories_min_fields'] = ResolversParentTypes['i18n_categories_min_fields']> = {
  category?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Categories_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_categories_mutation_response'] = ResolversParentTypes['i18n_categories_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['i18n_categories']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_max_fields'] = ResolversParentTypes['i18n_max_fields']> = {
  category?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  en?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  fr?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  key?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  uk?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_min_fields'] = ResolversParentTypes['i18n_min_fields']> = {
  category?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  en?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  fr?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  key?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  uk?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_mutation_response'] = ResolversParentTypes['i18n_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['i18n']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_stddev_fields'] = ResolversParentTypes['i18n_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_stddev_pop_fields'] = ResolversParentTypes['i18n_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_stddev_samp_fields'] = ResolversParentTypes['i18n_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_sum_fields'] = ResolversParentTypes['i18n_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_var_pop_fields'] = ResolversParentTypes['i18n_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_var_samp_fields'] = ResolversParentTypes['i18n_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type I18n_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['i18n_variance_fields'] = ResolversParentTypes['i18n_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_ReactionsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions'] = ResolversParentTypes['initiative_comment_reactions']> = {
  comment?: Resolver<Maybe<ResolversTypes['initiative_comments']>, ParentType, ContextType>;
  comment_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['reactions_enum']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_aggregate'] = ResolversParentTypes['initiative_comment_reactions_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_aggregate_fields'] = ResolversParentTypes['initiative_comment_reactions_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Comment_Reactions_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_avg_fields'] = ResolversParentTypes['initiative_comment_reactions_avg_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_max_fields'] = ResolversParentTypes['initiative_comment_reactions_max_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_min_fields'] = ResolversParentTypes['initiative_comment_reactions_min_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_mutation_response'] = ResolversParentTypes['initiative_comment_reactions_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_stddev_fields'] = ResolversParentTypes['initiative_comment_reactions_stddev_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_stddev_pop_fields'] = ResolversParentTypes['initiative_comment_reactions_stddev_pop_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_stddev_samp_fields'] = ResolversParentTypes['initiative_comment_reactions_stddev_samp_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_sum_fields'] = ResolversParentTypes['initiative_comment_reactions_sum_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_var_pop_fields'] = ResolversParentTypes['initiative_comment_reactions_var_pop_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_var_samp_fields'] = ResolversParentTypes['initiative_comment_reactions_var_samp_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comment_Reactions_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comment_reactions_variance_fields'] = ResolversParentTypes['initiative_comment_reactions_variance_fields']> = {
  comment_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_CommentsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments'] = ResolversParentTypes['initiative_comments']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  post?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  reactions?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Initiative_CommentsReactionsArgs, never>>;
  reactions_aggregate?: Resolver<ResolversTypes['initiative_comment_reactions_aggregate'], ParentType, ContextType, RequireFields<Initiative_CommentsReactions_AggregateArgs, never>>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_aggregate'] = ResolversParentTypes['initiative_comments_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_comments_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_comments']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_aggregate_fields'] = ResolversParentTypes['initiative_comments_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_comments_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Comments_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_comments_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_comments_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_comments_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_comments_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_comments_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_comments_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_comments_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_comments_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_comments_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_avg_fields'] = ResolversParentTypes['initiative_comments_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_max_fields'] = ResolversParentTypes['initiative_comments_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_min_fields'] = ResolversParentTypes['initiative_comments_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_mutation_response'] = ResolversParentTypes['initiative_comments_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_comments']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_stddev_fields'] = ResolversParentTypes['initiative_comments_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_stddev_pop_fields'] = ResolversParentTypes['initiative_comments_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_stddev_samp_fields'] = ResolversParentTypes['initiative_comments_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_sum_fields'] = ResolversParentTypes['initiative_comments_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_var_pop_fields'] = ResolversParentTypes['initiative_comments_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_var_samp_fields'] = ResolversParentTypes['initiative_comments_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Comments_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_comments_variance_fields'] = ResolversParentTypes['initiative_comments_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_DonationsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations'] = ResolversParentTypes['initiative_donations']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  recurrent?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  status?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_aggregate'] = ResolversParentTypes['initiative_donations_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_donations_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_aggregate_fields'] = ResolversParentTypes['initiative_donations_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_donations_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Donations_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_donations_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_donations_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_donations_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_donations_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_donations_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_donations_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_donations_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_donations_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_donations_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_avg_fields'] = ResolversParentTypes['initiative_donations_avg_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_max_fields'] = ResolversParentTypes['initiative_donations_max_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_min_fields'] = ResolversParentTypes['initiative_donations_min_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_mutation_response'] = ResolversParentTypes['initiative_donations_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_stddev_fields'] = ResolversParentTypes['initiative_donations_stddev_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_stddev_pop_fields'] = ResolversParentTypes['initiative_donations_stddev_pop_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_stddev_samp_fields'] = ResolversParentTypes['initiative_donations_stddev_samp_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_sum_fields'] = ResolversParentTypes['initiative_donations_sum_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_var_pop_fields'] = ResolversParentTypes['initiative_donations_var_pop_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_var_samp_fields'] = ResolversParentTypes['initiative_donations_var_samp_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Donations_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_donations_variance_fields'] = ResolversParentTypes['initiative_donations_variance_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_EditsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits'] = ResolversParentTypes['initiative_edits']> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  info?: Resolver<Maybe<ResolversTypes['initiative_info']>, ParentType, ContextType>;
  info_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  poll?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_aggregate'] = ResolversParentTypes['initiative_edits_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_edits_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_aggregate_fields'] = ResolversParentTypes['initiative_edits_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_edits_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Edits_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_edits_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_edits_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_edits_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_edits_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_edits_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_edits_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_edits_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_edits_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_edits_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_avg_fields'] = ResolversParentTypes['initiative_edits_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_max_fields'] = ResolversParentTypes['initiative_edits_max_fields']> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_min_fields'] = ResolversParentTypes['initiative_edits_min_fields']> = {
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_mutation_response'] = ResolversParentTypes['initiative_edits_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_stddev_fields'] = ResolversParentTypes['initiative_edits_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_stddev_pop_fields'] = ResolversParentTypes['initiative_edits_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_stddev_samp_fields'] = ResolversParentTypes['initiative_edits_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_sum_fields'] = ResolversParentTypes['initiative_edits_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_var_pop_fields'] = ResolversParentTypes['initiative_edits_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_var_samp_fields'] = ResolversParentTypes['initiative_edits_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Edits_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_edits_variance_fields'] = ResolversParentTypes['initiative_edits_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  info_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_ExpensesResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses'] = ResolversParentTypes['initiative_expenses']> = {
  amount?: Resolver<ResolversTypes['numeric'], ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  link?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  link_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  poll?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_aggregate'] = ResolversParentTypes['initiative_expenses_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_expenses_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_aggregate_fields'] = ResolversParentTypes['initiative_expenses_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_expenses_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Expenses_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_expenses_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_expenses_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_expenses_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_expenses_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_expenses_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_expenses_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_expenses_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_expenses_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_expenses_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_avg_fields'] = ResolversParentTypes['initiative_expenses_avg_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_max_fields'] = ResolversParentTypes['initiative_expenses_max_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  link?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  link_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_min_fields'] = ResolversParentTypes['initiative_expenses_min_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  currency?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  link?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  link_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_mutation_response'] = ResolversParentTypes['initiative_expenses_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_stddev_fields'] = ResolversParentTypes['initiative_expenses_stddev_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_stddev_pop_fields'] = ResolversParentTypes['initiative_expenses_stddev_pop_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_stddev_samp_fields'] = ResolversParentTypes['initiative_expenses_stddev_samp_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_sum_fields'] = ResolversParentTypes['initiative_expenses_sum_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_var_pop_fields'] = ResolversParentTypes['initiative_expenses_var_pop_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_var_samp_fields'] = ResolversParentTypes['initiative_expenses_var_samp_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Expenses_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_expenses_variance_fields'] = ResolversParentTypes['initiative_expenses_variance_fields']> = {
  amount?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_InfoResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info'] = ResolversParentTypes['initiative_info']> = {
  approved_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  context?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Initiative_InfoEditsArgs, never>>;
  edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<Initiative_InfoEdits_AggregateArgs, never>>;
  goal?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  modified_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  problem?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_aggregate'] = ResolversParentTypes['initiative_info_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_info_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_info']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_aggregate_fields'] = ResolversParentTypes['initiative_info_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_info_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Info_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_info_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_info_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_info_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_info_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_info_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_info_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_info_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_info_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_info_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_avg_fields'] = ResolversParentTypes['initiative_info_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_max_fields'] = ResolversParentTypes['initiative_info_max_fields']> = {
  approved_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  context?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  goal?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  problem?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_min_fields'] = ResolversParentTypes['initiative_info_min_fields']> = {
  approved_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  context?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  goal?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  problem?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_mutation_response'] = ResolversParentTypes['initiative_info_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_info']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_stddev_fields'] = ResolversParentTypes['initiative_info_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_stddev_pop_fields'] = ResolversParentTypes['initiative_info_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_stddev_samp_fields'] = ResolversParentTypes['initiative_info_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_sum_fields'] = ResolversParentTypes['initiative_info_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_var_pop_fields'] = ResolversParentTypes['initiative_info_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_var_samp_fields'] = ResolversParentTypes['initiative_info_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Info_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_info_variance_fields'] = ResolversParentTypes['initiative_info_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_MembersResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members'] = ResolversParentTypes['initiative_members']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  donations?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Initiative_MembersDonationsArgs, never>>;
  donations_aggregate?: Resolver<ResolversTypes['initiative_donations_aggregate'], ParentType, ContextType, RequireFields<Initiative_MembersDonations_AggregateArgs, never>>;
  email_notifications_permission?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  push_notifications_permission?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  tasks?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Initiative_MembersTasksArgs, never>>;
  tasks_aggregate?: Resolver<ResolversTypes['initiative_tasks_aggregate'], ParentType, ContextType, RequireFields<Initiative_MembersTasks_AggregateArgs, never>>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Initiative_MembersVolunteersArgs, never>>;
  volunteers_aggregate?: Resolver<ResolversTypes['initiative_volunteers_aggregate'], ParentType, ContextType, RequireFields<Initiative_MembersVolunteers_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_aggregate'] = ResolversParentTypes['initiative_members_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_members_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_members']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_aggregate_fields'] = ResolversParentTypes['initiative_members_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_members_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Members_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_members_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_members_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_members_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_members_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_members_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_members_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_members_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_members_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_members_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_avg_fields'] = ResolversParentTypes['initiative_members_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_max_fields'] = ResolversParentTypes['initiative_members_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_min_fields'] = ResolversParentTypes['initiative_members_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_mutation_response'] = ResolversParentTypes['initiative_members_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_members']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_stddev_fields'] = ResolversParentTypes['initiative_members_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_stddev_pop_fields'] = ResolversParentTypes['initiative_members_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_stddev_samp_fields'] = ResolversParentTypes['initiative_members_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_sum_fields'] = ResolversParentTypes['initiative_members_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_var_pop_fields'] = ResolversParentTypes['initiative_members_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_var_samp_fields'] = ResolversParentTypes['initiative_members_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Members_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_members_variance_fields'] = ResolversParentTypes['initiative_members_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_VotesResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes'] = ResolversParentTypes['initiative_poll_votes']> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  poll?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  poll_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  value?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_aggregate'] = ResolversParentTypes['initiative_poll_votes_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_aggregate_fields'] = ResolversParentTypes['initiative_poll_votes_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Poll_Votes_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_avg_fields'] = ResolversParentTypes['initiative_poll_votes_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_max_fields'] = ResolversParentTypes['initiative_poll_votes_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  value?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_min_fields'] = ResolversParentTypes['initiative_poll_votes_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  value?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_mutation_response'] = ResolversParentTypes['initiative_poll_votes_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_stddev_fields'] = ResolversParentTypes['initiative_poll_votes_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_stddev_pop_fields'] = ResolversParentTypes['initiative_poll_votes_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_stddev_samp_fields'] = ResolversParentTypes['initiative_poll_votes_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_sum_fields'] = ResolversParentTypes['initiative_poll_votes_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_var_pop_fields'] = ResolversParentTypes['initiative_poll_votes_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_var_samp_fields'] = ResolversParentTypes['initiative_poll_votes_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Poll_Votes_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_poll_votes_variance_fields'] = ResolversParentTypes['initiative_poll_votes_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_PollsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls'] = ResolversParentTypes['initiative_polls']> = {
  edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Initiative_PollsEditsArgs, never>>;
  edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<Initiative_PollsEdits_AggregateArgs, never>>;
  expenses?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Initiative_PollsExpensesArgs, never>>;
  expenses_aggregate?: Resolver<ResolversTypes['initiative_expenses_aggregate'], ParentType, ContextType, RequireFields<Initiative_PollsExpenses_AggregateArgs, never>>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  tasks?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Initiative_PollsTasksArgs, never>>;
  tasks_aggregate?: Resolver<ResolversTypes['initiative_tasks_aggregate'], ParentType, ContextType, RequireFields<Initiative_PollsTasks_AggregateArgs, never>>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  votes?: Resolver<Array<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Initiative_PollsVotesArgs, never>>;
  votes_aggregate?: Resolver<ResolversTypes['initiative_poll_votes_aggregate'], ParentType, ContextType, RequireFields<Initiative_PollsVotes_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_aggregate'] = ResolversParentTypes['initiative_polls_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_polls_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_aggregate_fields'] = ResolversParentTypes['initiative_polls_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_polls_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Polls_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_polls_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_polls_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_polls_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_polls_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_polls_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_polls_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_polls_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_polls_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_polls_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_avg_fields'] = ResolversParentTypes['initiative_polls_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_max_fields'] = ResolversParentTypes['initiative_polls_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_min_fields'] = ResolversParentTypes['initiative_polls_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_mutation_response'] = ResolversParentTypes['initiative_polls_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_stddev_fields'] = ResolversParentTypes['initiative_polls_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_stddev_pop_fields'] = ResolversParentTypes['initiative_polls_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_stddev_samp_fields'] = ResolversParentTypes['initiative_polls_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_sum_fields'] = ResolversParentTypes['initiative_polls_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_var_pop_fields'] = ResolversParentTypes['initiative_polls_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_var_samp_fields'] = ResolversParentTypes['initiative_polls_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Polls_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_polls_variance_fields'] = ResolversParentTypes['initiative_polls_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_ReactionsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions'] = ResolversParentTypes['initiative_post_reactions']> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  post?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['reactions_enum']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_aggregate'] = ResolversParentTypes['initiative_post_reactions_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_aggregate_fields'] = ResolversParentTypes['initiative_post_reactions_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Post_Reactions_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_avg_fields'] = ResolversParentTypes['initiative_post_reactions_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_max_fields'] = ResolversParentTypes['initiative_post_reactions_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_min_fields'] = ResolversParentTypes['initiative_post_reactions_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_mutation_response'] = ResolversParentTypes['initiative_post_reactions_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_stddev_fields'] = ResolversParentTypes['initiative_post_reactions_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_stddev_pop_fields'] = ResolversParentTypes['initiative_post_reactions_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_stddev_samp_fields'] = ResolversParentTypes['initiative_post_reactions_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_sum_fields'] = ResolversParentTypes['initiative_post_reactions_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_var_pop_fields'] = ResolversParentTypes['initiative_post_reactions_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_var_samp_fields'] = ResolversParentTypes['initiative_post_reactions_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Post_Reactions_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_post_reactions_variance_fields'] = ResolversParentTypes['initiative_post_reactions_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_PostsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts'] = ResolversParentTypes['initiative_posts']> = {
  comments?: Resolver<Array<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Initiative_PostsCommentsArgs, never>>;
  comments_aggregate?: Resolver<ResolversTypes['initiative_comments_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsComments_AggregateArgs, never>>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Initiative_PostsEditsArgs, never>>;
  edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsEdits_AggregateArgs, never>>;
  expenses?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Initiative_PostsExpensesArgs, never>>;
  expenses_aggregate?: Resolver<ResolversTypes['initiative_expenses_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsExpenses_AggregateArgs, never>>;
  files?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Initiative_PostsFilesArgs, never>>;
  files_aggregate?: Resolver<ResolversTypes['files_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsFiles_AggregateArgs, never>>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Initiative_PostsProjectsArgs, never>>;
  projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsProjects_AggregateArgs, never>>;
  reactions?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Initiative_PostsReactionsArgs, never>>;
  reactions_aggregate?: Resolver<ResolversTypes['initiative_post_reactions_aggregate'], ParentType, ContextType, RequireFields<Initiative_PostsReactions_AggregateArgs, never>>;
  type?: Resolver<ResolversTypes['post_types_enum'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_aggregate'] = ResolversParentTypes['initiative_posts_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_posts_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_aggregate_fields'] = ResolversParentTypes['initiative_posts_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_posts_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Posts_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_posts_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_posts_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_posts_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_posts_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_posts_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_posts_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_posts_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_posts_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_posts_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_avg_fields'] = ResolversParentTypes['initiative_posts_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_max_fields'] = ResolversParentTypes['initiative_posts_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_min_fields'] = ResolversParentTypes['initiative_posts_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  message?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_mutation_response'] = ResolversParentTypes['initiative_posts_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_stddev_fields'] = ResolversParentTypes['initiative_posts_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_stddev_pop_fields'] = ResolversParentTypes['initiative_posts_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_stddev_samp_fields'] = ResolversParentTypes['initiative_posts_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_sum_fields'] = ResolversParentTypes['initiative_posts_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_var_pop_fields'] = ResolversParentTypes['initiative_posts_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_var_samp_fields'] = ResolversParentTypes['initiative_posts_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Posts_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_posts_variance_fields'] = ResolversParentTypes['initiative_posts_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_ProjectsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects'] = ResolversParentTypes['initiative_projects']> = {
  budget?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  org?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_project?: Resolver<Maybe<ResolversTypes['org_projects']>, ParentType, ContextType>;
  post?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType>;
  post_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tender?: Resolver<ResolversTypes['tenders'], ParentType, ContextType>;
  tender_id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_aggregate'] = ResolversParentTypes['initiative_projects_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_projects_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_aggregate_fields'] = ResolversParentTypes['initiative_projects_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_projects_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Projects_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_projects_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_projects_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_projects_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_projects_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_projects_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_projects_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_projects_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_projects_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_projects_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_avg_fields'] = ResolversParentTypes['initiative_projects_avg_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_max_fields'] = ResolversParentTypes['initiative_projects_max_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_min_fields'] = ResolversParentTypes['initiative_projects_min_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_mutation_response'] = ResolversParentTypes['initiative_projects_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_stddev_fields'] = ResolversParentTypes['initiative_projects_stddev_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_stddev_pop_fields'] = ResolversParentTypes['initiative_projects_stddev_pop_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_stddev_samp_fields'] = ResolversParentTypes['initiative_projects_stddev_samp_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_sum_fields'] = ResolversParentTypes['initiative_projects_sum_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_var_pop_fields'] = ResolversParentTypes['initiative_projects_var_pop_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_var_samp_fields'] = ResolversParentTypes['initiative_projects_var_samp_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Projects_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_projects_variance_fields'] = ResolversParentTypes['initiative_projects_variance_fields']> = {
  budget?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  post_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  reference_project_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  tender_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_TagsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags'] = ResolversParentTypes['initiative_tags']> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tags?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_aggregate'] = ResolversParentTypes['initiative_tags_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_tags_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_aggregate_fields'] = ResolversParentTypes['initiative_tags_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_tags_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Tags_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_tags_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_tags_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_tags_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_tags_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_tags_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_tags_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_tags_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_tags_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_tags_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_avg_fields'] = ResolversParentTypes['initiative_tags_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_max_fields'] = ResolversParentTypes['initiative_tags_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_min_fields'] = ResolversParentTypes['initiative_tags_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_mutation_response'] = ResolversParentTypes['initiative_tags_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_stddev_fields'] = ResolversParentTypes['initiative_tags_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_stddev_pop_fields'] = ResolversParentTypes['initiative_tags_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_stddev_samp_fields'] = ResolversParentTypes['initiative_tags_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_sum_fields'] = ResolversParentTypes['initiative_tags_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_var_pop_fields'] = ResolversParentTypes['initiative_tags_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_var_samp_fields'] = ResolversParentTypes['initiative_tags_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tags_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tags_variance_fields'] = ResolversParentTypes['initiative_tags_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_TasksResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks'] = ResolversParentTypes['initiative_tasks']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  poll?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  status?: Resolver<Maybe<ResolversTypes['task_statuses_enum']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Initiative_TasksVolunteersArgs, never>>;
  volunteers_aggregate?: Resolver<ResolversTypes['initiative_volunteers_aggregate'], ParentType, ContextType, RequireFields<Initiative_TasksVolunteers_AggregateArgs, never>>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_aggregate'] = ResolversParentTypes['initiative_tasks_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_tasks_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_aggregate_fields'] = ResolversParentTypes['initiative_tasks_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_tasks_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Tasks_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_tasks_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_tasks_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_tasks_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_tasks_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_tasks_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_tasks_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_tasks_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_tasks_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_tasks_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_avg_fields'] = ResolversParentTypes['initiative_tasks_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_max_fields'] = ResolversParentTypes['initiative_tasks_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_min_fields'] = ResolversParentTypes['initiative_tasks_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_mutation_response'] = ResolversParentTypes['initiative_tasks_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_stddev_fields'] = ResolversParentTypes['initiative_tasks_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_stddev_pop_fields'] = ResolversParentTypes['initiative_tasks_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_stddev_samp_fields'] = ResolversParentTypes['initiative_tasks_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_sum_fields'] = ResolversParentTypes['initiative_tasks_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['numeric']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_var_pop_fields'] = ResolversParentTypes['initiative_tasks_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_var_samp_fields'] = ResolversParentTypes['initiative_tasks_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Tasks_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_tasks_variance_fields'] = ResolversParentTypes['initiative_tasks_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  poll_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  volunteers_needed?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_VisitsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits'] = ResolversParentTypes['initiative_visits']> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_aggregate'] = ResolversParentTypes['initiative_visits_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_visits_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_visits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_aggregate_fields'] = ResolversParentTypes['initiative_visits_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_visits_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Visits_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_visits_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_visits_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_visits_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_visits_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_visits_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_visits_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_visits_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_visits_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_visits_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_avg_fields'] = ResolversParentTypes['initiative_visits_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_max_fields'] = ResolversParentTypes['initiative_visits_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_min_fields'] = ResolversParentTypes['initiative_visits_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_mutation_response'] = ResolversParentTypes['initiative_visits_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_visits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_stddev_fields'] = ResolversParentTypes['initiative_visits_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_stddev_pop_fields'] = ResolversParentTypes['initiative_visits_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_stddev_samp_fields'] = ResolversParentTypes['initiative_visits_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_sum_fields'] = ResolversParentTypes['initiative_visits_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_var_pop_fields'] = ResolversParentTypes['initiative_visits_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_var_samp_fields'] = ResolversParentTypes['initiative_visits_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Visits_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_visits_variance_fields'] = ResolversParentTypes['initiative_visits_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_VolunteersResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers'] = ResolversParentTypes['initiative_volunteers']> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  task?: Resolver<Maybe<ResolversTypes['initiative_tasks']>, ParentType, ContextType>;
  task_id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_aggregate'] = ResolversParentTypes['initiative_volunteers_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiative_volunteers_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_aggregate_fields'] = ResolversParentTypes['initiative_volunteers_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiative_volunteers_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiative_Volunteers_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiative_volunteers_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiative_volunteers_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiative_volunteers_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiative_volunteers_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiative_volunteers_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiative_volunteers_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiative_volunteers_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiative_volunteers_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiative_volunteers_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_avg_fields'] = ResolversParentTypes['initiative_volunteers_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_max_fields'] = ResolversParentTypes['initiative_volunteers_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_min_fields'] = ResolversParentTypes['initiative_volunteers_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_mutation_response'] = ResolversParentTypes['initiative_volunteers_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_stddev_fields'] = ResolversParentTypes['initiative_volunteers_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_stddev_pop_fields'] = ResolversParentTypes['initiative_volunteers_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_stddev_samp_fields'] = ResolversParentTypes['initiative_volunteers_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_sum_fields'] = ResolversParentTypes['initiative_volunteers_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_var_pop_fields'] = ResolversParentTypes['initiative_volunteers_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_var_samp_fields'] = ResolversParentTypes['initiative_volunteers_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiative_Volunteers_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiative_volunteers_variance_fields'] = ResolversParentTypes['initiative_volunteers_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  task_id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type InitiativesResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives'] = ResolversParentTypes['initiatives']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  donations?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<InitiativesDonationsArgs, never>>;
  donations_aggregate?: Resolver<ResolversTypes['initiative_donations_aggregate'], ParentType, ContextType, RequireFields<InitiativesDonations_AggregateArgs, never>>;
  edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<InitiativesEditsArgs, never>>;
  edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<InitiativesEdits_AggregateArgs, never>>;
  expenses?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<InitiativesExpensesArgs, never>>;
  expenses_aggregate?: Resolver<ResolversTypes['initiative_expenses_aggregate'], ParentType, ContextType, RequireFields<InitiativesExpenses_AggregateArgs, never>>;
  files?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType, RequireFields<InitiativesFilesArgs, never>>;
  files_aggregate?: Resolver<ResolversTypes['files_aggregate'], ParentType, ContextType, RequireFields<InitiativesFiles_AggregateArgs, never>>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  infos?: Resolver<Array<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<InitiativesInfosArgs, never>>;
  infos_aggregate?: Resolver<ResolversTypes['initiative_info_aggregate'], ParentType, ContextType, RequireFields<InitiativesInfos_AggregateArgs, never>>;
  members?: Resolver<Array<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<InitiativesMembersArgs, never>>;
  members_aggregate?: Resolver<ResolversTypes['initiative_members_aggregate'], ParentType, ContextType, RequireFields<InitiativesMembers_AggregateArgs, never>>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  polls?: Resolver<Array<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<InitiativesPollsArgs, never>>;
  polls_aggregate?: Resolver<ResolversTypes['initiative_polls_aggregate'], ParentType, ContextType, RequireFields<InitiativesPolls_AggregateArgs, never>>;
  posts?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<InitiativesPostsArgs, never>>;
  posts_aggregate?: Resolver<ResolversTypes['initiative_posts_aggregate'], ParentType, ContextType, RequireFields<InitiativesPosts_AggregateArgs, never>>;
  projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<InitiativesProjectsArgs, never>>;
  projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<InitiativesProjects_AggregateArgs, never>>;
  tags?: Resolver<Array<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<InitiativesTagsArgs, never>>;
  tags_aggregate?: Resolver<ResolversTypes['initiative_tags_aggregate'], ParentType, ContextType, RequireFields<InitiativesTags_AggregateArgs, never>>;
  tasks?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<InitiativesTasksArgs, never>>;
  tasks_aggregate?: Resolver<ResolversTypes['initiative_tasks_aggregate'], ParentType, ContextType, RequireFields<InitiativesTasks_AggregateArgs, never>>;
  tenders?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<InitiativesTendersArgs, never>>;
  tenders_aggregate?: Resolver<ResolversTypes['tenders_aggregate'], ParentType, ContextType, RequireFields<InitiativesTenders_AggregateArgs, never>>;
  visits?: Resolver<Array<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<InitiativesVisitsArgs, never>>;
  visits_aggregate?: Resolver<ResolversTypes['initiative_visits_aggregate'], ParentType, ContextType, RequireFields<InitiativesVisits_AggregateArgs, never>>;
  volunteers?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<InitiativesVolunteersArgs, never>>;
  volunteers_aggregate?: Resolver<ResolversTypes['initiative_volunteers_aggregate'], ParentType, ContextType, RequireFields<InitiativesVolunteers_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_aggregate'] = ResolversParentTypes['initiatives_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiatives_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiatives']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_aggregate_fields'] = ResolversParentTypes['initiatives_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiatives_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiatives_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiatives_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_max_fields'] = ResolversParentTypes['initiatives_max_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_min_fields'] = ResolversParentTypes['initiatives_min_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_mutation_response'] = ResolversParentTypes['initiatives_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['initiatives']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_ViewResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view'] = ResolversParentTypes['initiatives_view']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_aggregate'] = ResolversParentTypes['initiatives_view_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['initiatives_view_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['initiatives_view']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_aggregate_fields'] = ResolversParentTypes['initiatives_view_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['initiatives_view_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Initiatives_View_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['initiatives_view_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['initiatives_view_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['initiatives_view_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['initiatives_view_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['initiatives_view_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['initiatives_view_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['initiatives_view_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['initiatives_view_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['initiatives_view_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_avg_fields'] = ResolversParentTypes['initiatives_view_avg_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_max_fields'] = ResolversParentTypes['initiatives_view_max_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_min_fields'] = ResolversParentTypes['initiatives_view_min_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_stddev_fields'] = ResolversParentTypes['initiatives_view_stddev_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_stddev_pop_fields'] = ResolversParentTypes['initiatives_view_stddev_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_stddev_samp_fields'] = ResolversParentTypes['initiatives_view_stddev_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_sum_fields'] = ResolversParentTypes['initiatives_view_sum_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_var_pop_fields'] = ResolversParentTypes['initiatives_view_var_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_var_samp_fields'] = ResolversParentTypes['initiatives_view_var_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Initiatives_View_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['initiatives_view_variance_fields'] = ResolversParentTypes['initiatives_view_variance_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface JsonbScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['jsonb'], any> {
  name: 'jsonb';
}

export type Map_EntriesResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries'] = ResolversParentTypes['map_entries']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_aggregate'] = ResolversParentTypes['map_entries_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['map_entries_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['map_entries']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_aggregate_fields'] = ResolversParentTypes['map_entries_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['map_entries_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Map_Entries_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['map_entries_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['map_entries_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['map_entries_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['map_entries_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['map_entries_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['map_entries_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['map_entries_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['map_entries_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['map_entries_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_avg_fields'] = ResolversParentTypes['map_entries_avg_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_max_fields'] = ResolversParentTypes['map_entries_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_min_fields'] = ResolversParentTypes['map_entries_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_stddev_fields'] = ResolversParentTypes['map_entries_stddev_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_stddev_pop_fields'] = ResolversParentTypes['map_entries_stddev_pop_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_stddev_samp_fields'] = ResolversParentTypes['map_entries_stddev_samp_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_sum_fields'] = ResolversParentTypes['map_entries_sum_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_var_pop_fields'] = ResolversParentTypes['map_entries_var_pop_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_var_samp_fields'] = ResolversParentTypes['map_entries_var_samp_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Map_Entries_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['map_entries_variance_fields'] = ResolversParentTypes['map_entries_variance_fields']> = {
  members?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Mutation_RootResolvers<ContextType = any, ParentType extends ResolversParentTypes['mutation_root'] = ResolversParentTypes['mutation_root']> = {
  delete_auth_account_providers?: Resolver<Maybe<ResolversTypes['auth_account_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Account_ProvidersArgs, 'where'>>;
  delete_auth_account_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Account_Providers_By_PkArgs, 'id'>>;
  delete_auth_account_roles?: Resolver<Maybe<ResolversTypes['auth_account_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Account_RolesArgs, 'where'>>;
  delete_auth_account_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Account_Roles_By_PkArgs, 'id'>>;
  delete_auth_accounts?: Resolver<Maybe<ResolversTypes['auth_accounts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_AccountsArgs, 'where'>>;
  delete_auth_accounts_by_pk?: Resolver<Maybe<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Accounts_By_PkArgs, 'id'>>;
  delete_auth_migrations?: Resolver<Maybe<ResolversTypes['auth_migrations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_MigrationsArgs, 'where'>>;
  delete_auth_migrations_by_pk?: Resolver<Maybe<ResolversTypes['auth_migrations']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Migrations_By_PkArgs, 'id'>>;
  delete_auth_providers?: Resolver<Maybe<ResolversTypes['auth_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_ProvidersArgs, 'where'>>;
  delete_auth_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_providers']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Providers_By_PkArgs, 'provider'>>;
  delete_auth_refresh_tokens?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Refresh_TokensArgs, 'where'>>;
  delete_auth_refresh_tokens_by_pk?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Refresh_Tokens_By_PkArgs, 'refresh_token'>>;
  delete_auth_roles?: Resolver<Maybe<ResolversTypes['auth_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_RolesArgs, 'where'>>;
  delete_auth_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_roles']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Auth_Roles_By_PkArgs, 'role'>>;
  delete_file_types?: Resolver<Maybe<ResolversTypes['file_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_File_TypesArgs, 'where'>>;
  delete_file_types_by_pk?: Resolver<Maybe<ResolversTypes['file_types']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_File_Types_By_PkArgs, 'type'>>;
  delete_files?: Resolver<Maybe<ResolversTypes['files_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_FilesArgs, 'where'>>;
  delete_files_by_pk?: Resolver<Maybe<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Files_By_PkArgs, 'id'>>;
  delete_geometry_columns?: Resolver<Maybe<ResolversTypes['geometry_columns_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Geometry_ColumnsArgs, 'where'>>;
  delete_i18n?: Resolver<Maybe<ResolversTypes['i18n_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_I18nArgs, 'where'>>;
  delete_i18n_by_pk?: Resolver<Maybe<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_I18n_By_PkArgs, 'id'>>;
  delete_i18n_categories?: Resolver<Maybe<ResolversTypes['i18n_categories_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_I18n_CategoriesArgs, 'where'>>;
  delete_i18n_categories_by_pk?: Resolver<Maybe<ResolversTypes['i18n_categories']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_I18n_Categories_By_PkArgs, 'category'>>;
  delete_initiative_comment_reactions?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Comment_ReactionsArgs, 'where'>>;
  delete_initiative_comment_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Comment_Reactions_By_PkArgs, 'comment_id' | 'id' | 'initiative_id' | 'post_id'>>;
  delete_initiative_comments?: Resolver<Maybe<ResolversTypes['initiative_comments_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_CommentsArgs, 'where'>>;
  delete_initiative_comments_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Comments_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  delete_initiative_donations?: Resolver<Maybe<ResolversTypes['initiative_donations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_DonationsArgs, 'where'>>;
  delete_initiative_donations_by_pk?: Resolver<Maybe<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Donations_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_edits?: Resolver<Maybe<ResolversTypes['initiative_edits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_EditsArgs, 'where'>>;
  delete_initiative_edits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Edits_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_expenses?: Resolver<Maybe<ResolversTypes['initiative_expenses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_ExpensesArgs, 'where'>>;
  delete_initiative_expenses_by_pk?: Resolver<Maybe<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Expenses_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_info?: Resolver<Maybe<ResolversTypes['initiative_info_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_InfoArgs, 'where'>>;
  delete_initiative_info_by_pk?: Resolver<Maybe<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Info_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_members?: Resolver<Maybe<ResolversTypes['initiative_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_MembersArgs, 'where'>>;
  delete_initiative_members_by_pk?: Resolver<Maybe<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Members_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_poll_votes?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Poll_VotesArgs, 'where'>>;
  delete_initiative_poll_votes_by_pk?: Resolver<Maybe<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Poll_Votes_By_PkArgs, 'id' | 'initiative_id' | 'poll_id'>>;
  delete_initiative_polls?: Resolver<Maybe<ResolversTypes['initiative_polls_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_PollsArgs, 'where'>>;
  delete_initiative_polls_by_pk?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Polls_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_post_reactions?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Post_ReactionsArgs, 'where'>>;
  delete_initiative_post_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Post_Reactions_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  delete_initiative_posts?: Resolver<Maybe<ResolversTypes['initiative_posts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_PostsArgs, 'where'>>;
  delete_initiative_posts_by_pk?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Posts_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_projects?: Resolver<Maybe<ResolversTypes['initiative_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_ProjectsArgs, 'where'>>;
  delete_initiative_projects_by_pk?: Resolver<Maybe<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Projects_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_tags?: Resolver<Maybe<ResolversTypes['initiative_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_TagsArgs, 'where'>>;
  delete_initiative_tags_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Tags_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_tasks?: Resolver<Maybe<ResolversTypes['initiative_tasks_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_TasksArgs, 'where'>>;
  delete_initiative_tasks_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Tasks_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_visits?: Resolver<Maybe<ResolversTypes['initiative_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_VisitsArgs, 'where'>>;
  delete_initiative_visits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Visits_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiative_volunteers?: Resolver<Maybe<ResolversTypes['initiative_volunteers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_VolunteersArgs, 'where'>>;
  delete_initiative_volunteers_by_pk?: Resolver<Maybe<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiative_Volunteers_By_PkArgs, 'id' | 'initiative_id'>>;
  delete_initiatives?: Resolver<Maybe<ResolversTypes['initiatives_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_InitiativesArgs, 'where'>>;
  delete_initiatives_by_pk?: Resolver<Maybe<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Initiatives_By_PkArgs, 'id'>>;
  delete_org_members?: Resolver<Maybe<ResolversTypes['org_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_MembersArgs, 'where'>>;
  delete_org_members_by_pk?: Resolver<Maybe<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_Members_By_PkArgs, 'id'>>;
  delete_org_projects?: Resolver<Maybe<ResolversTypes['org_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_ProjectsArgs, 'where'>>;
  delete_org_projects_by_pk?: Resolver<Maybe<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_Projects_By_PkArgs, 'id'>>;
  delete_org_tags?: Resolver<Maybe<ResolversTypes['org_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_TagsArgs, 'where'>>;
  delete_org_tags_by_pk?: Resolver<Maybe<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_Tags_By_PkArgs, 'id'>>;
  delete_org_visits?: Resolver<Maybe<ResolversTypes['org_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Org_VisitsArgs, 'where'>>;
  delete_orgs?: Resolver<Maybe<ResolversTypes['orgs_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_OrgsArgs, 'where'>>;
  delete_orgs_by_pk?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Orgs_By_PkArgs, 'id'>>;
  delete_post_types?: Resolver<Maybe<ResolversTypes['post_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Post_TypesArgs, 'where'>>;
  delete_post_types_by_pk?: Resolver<Maybe<ResolversTypes['post_types']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Post_Types_By_PkArgs, 'type'>>;
  delete_reactions?: Resolver<Maybe<ResolversTypes['reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_ReactionsArgs, 'where'>>;
  delete_reactions_by_pk?: Resolver<Maybe<ResolversTypes['reactions']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Reactions_By_PkArgs, 'type'>>;
  delete_spatial_ref_sys?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Spatial_Ref_SysArgs, 'where'>>;
  delete_spatial_ref_sys_by_pk?: Resolver<Maybe<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Spatial_Ref_Sys_By_PkArgs, 'srid'>>;
  delete_tags?: Resolver<Maybe<ResolversTypes['tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_TagsArgs, 'where'>>;
  delete_tags_by_pk?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Tags_By_PkArgs, 'tag'>>;
  delete_task_statuses?: Resolver<Maybe<ResolversTypes['task_statuses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Task_StatusesArgs, 'where'>>;
  delete_task_statuses_by_pk?: Resolver<Maybe<ResolversTypes['task_statuses']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Task_Statuses_By_PkArgs, 'status'>>;
  delete_tenders?: Resolver<Maybe<ResolversTypes['tenders_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_TendersArgs, 'where'>>;
  delete_tenders_by_pk?: Resolver<Maybe<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Tenders_By_PkArgs, 'id'>>;
  delete_user_settings?: Resolver<Maybe<ResolversTypes['user_settings_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_User_SettingsArgs, 'where'>>;
  delete_user_settings_by_pk?: Resolver<Maybe<ResolversTypes['user_settings']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_User_Settings_By_PkArgs, 'user_id'>>;
  delete_user_subscriptions?: Resolver<Maybe<ResolversTypes['user_subscriptions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_User_SubscriptionsArgs, 'where'>>;
  delete_user_subscriptions_by_pk?: Resolver<Maybe<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_User_Subscriptions_By_PkArgs, 'id'>>;
  delete_users?: Resolver<Maybe<ResolversTypes['users_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_UsersArgs, 'where'>>;
  delete_users_by_pk?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType, RequireFields<Mutation_RootDelete_Users_By_PkArgs, 'id'>>;
  insert_auth_account_providers?: Resolver<Maybe<ResolversTypes['auth_account_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Account_ProvidersArgs, 'objects'>>;
  insert_auth_account_providers_one?: Resolver<Maybe<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Account_Providers_OneArgs, 'object'>>;
  insert_auth_account_roles?: Resolver<Maybe<ResolversTypes['auth_account_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Account_RolesArgs, 'objects'>>;
  insert_auth_account_roles_one?: Resolver<Maybe<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Account_Roles_OneArgs, 'object'>>;
  insert_auth_accounts?: Resolver<Maybe<ResolversTypes['auth_accounts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_AccountsArgs, 'objects'>>;
  insert_auth_accounts_one?: Resolver<Maybe<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Accounts_OneArgs, 'object'>>;
  insert_auth_migrations?: Resolver<Maybe<ResolversTypes['auth_migrations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_MigrationsArgs, 'objects'>>;
  insert_auth_migrations_one?: Resolver<Maybe<ResolversTypes['auth_migrations']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Migrations_OneArgs, 'object'>>;
  insert_auth_providers?: Resolver<Maybe<ResolversTypes['auth_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_ProvidersArgs, 'objects'>>;
  insert_auth_providers_one?: Resolver<Maybe<ResolversTypes['auth_providers']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Providers_OneArgs, 'object'>>;
  insert_auth_refresh_tokens?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Refresh_TokensArgs, 'objects'>>;
  insert_auth_refresh_tokens_one?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Refresh_Tokens_OneArgs, 'object'>>;
  insert_auth_roles?: Resolver<Maybe<ResolversTypes['auth_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_RolesArgs, 'objects'>>;
  insert_auth_roles_one?: Resolver<Maybe<ResolversTypes['auth_roles']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Auth_Roles_OneArgs, 'object'>>;
  insert_file_types?: Resolver<Maybe<ResolversTypes['file_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_File_TypesArgs, 'objects'>>;
  insert_file_types_one?: Resolver<Maybe<ResolversTypes['file_types']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_File_Types_OneArgs, 'object'>>;
  insert_files?: Resolver<Maybe<ResolversTypes['files_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_FilesArgs, 'objects'>>;
  insert_files_one?: Resolver<Maybe<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Files_OneArgs, 'object'>>;
  insert_geometry_columns?: Resolver<Maybe<ResolversTypes['geometry_columns_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Geometry_ColumnsArgs, 'objects'>>;
  insert_geometry_columns_one?: Resolver<Maybe<ResolversTypes['geometry_columns']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Geometry_Columns_OneArgs, 'object'>>;
  insert_i18n?: Resolver<Maybe<ResolversTypes['i18n_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_I18nArgs, 'objects'>>;
  insert_i18n_categories?: Resolver<Maybe<ResolversTypes['i18n_categories_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_I18n_CategoriesArgs, 'objects'>>;
  insert_i18n_categories_one?: Resolver<Maybe<ResolversTypes['i18n_categories']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_I18n_Categories_OneArgs, 'object'>>;
  insert_i18n_one?: Resolver<Maybe<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_I18n_OneArgs, 'object'>>;
  insert_initiative_comment_reactions?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Comment_ReactionsArgs, 'objects'>>;
  insert_initiative_comment_reactions_one?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Comment_Reactions_OneArgs, 'object'>>;
  insert_initiative_comments?: Resolver<Maybe<ResolversTypes['initiative_comments_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_CommentsArgs, 'objects'>>;
  insert_initiative_comments_one?: Resolver<Maybe<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Comments_OneArgs, 'object'>>;
  insert_initiative_donations?: Resolver<Maybe<ResolversTypes['initiative_donations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_DonationsArgs, 'objects'>>;
  insert_initiative_donations_one?: Resolver<Maybe<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Donations_OneArgs, 'object'>>;
  insert_initiative_edits?: Resolver<Maybe<ResolversTypes['initiative_edits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_EditsArgs, 'objects'>>;
  insert_initiative_edits_one?: Resolver<Maybe<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Edits_OneArgs, 'object'>>;
  insert_initiative_expenses?: Resolver<Maybe<ResolversTypes['initiative_expenses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_ExpensesArgs, 'objects'>>;
  insert_initiative_expenses_one?: Resolver<Maybe<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Expenses_OneArgs, 'object'>>;
  insert_initiative_info?: Resolver<Maybe<ResolversTypes['initiative_info_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_InfoArgs, 'objects'>>;
  insert_initiative_info_one?: Resolver<Maybe<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Info_OneArgs, 'object'>>;
  insert_initiative_members?: Resolver<Maybe<ResolversTypes['initiative_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_MembersArgs, 'objects'>>;
  insert_initiative_members_one?: Resolver<Maybe<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Members_OneArgs, 'object'>>;
  insert_initiative_poll_votes?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Poll_VotesArgs, 'objects'>>;
  insert_initiative_poll_votes_one?: Resolver<Maybe<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Poll_Votes_OneArgs, 'object'>>;
  insert_initiative_polls?: Resolver<Maybe<ResolversTypes['initiative_polls_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_PollsArgs, 'objects'>>;
  insert_initiative_polls_one?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Polls_OneArgs, 'object'>>;
  insert_initiative_post_reactions?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Post_ReactionsArgs, 'objects'>>;
  insert_initiative_post_reactions_one?: Resolver<Maybe<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Post_Reactions_OneArgs, 'object'>>;
  insert_initiative_posts?: Resolver<Maybe<ResolversTypes['initiative_posts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_PostsArgs, 'objects'>>;
  insert_initiative_posts_one?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Posts_OneArgs, 'object'>>;
  insert_initiative_projects?: Resolver<Maybe<ResolversTypes['initiative_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_ProjectsArgs, 'objects'>>;
  insert_initiative_projects_one?: Resolver<Maybe<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Projects_OneArgs, 'object'>>;
  insert_initiative_tags?: Resolver<Maybe<ResolversTypes['initiative_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_TagsArgs, 'objects'>>;
  insert_initiative_tags_one?: Resolver<Maybe<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Tags_OneArgs, 'object'>>;
  insert_initiative_tasks?: Resolver<Maybe<ResolversTypes['initiative_tasks_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_TasksArgs, 'objects'>>;
  insert_initiative_tasks_one?: Resolver<Maybe<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Tasks_OneArgs, 'object'>>;
  insert_initiative_visits?: Resolver<Maybe<ResolversTypes['initiative_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_VisitsArgs, 'objects'>>;
  insert_initiative_visits_one?: Resolver<Maybe<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Visits_OneArgs, 'object'>>;
  insert_initiative_volunteers?: Resolver<Maybe<ResolversTypes['initiative_volunteers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_VolunteersArgs, 'objects'>>;
  insert_initiative_volunteers_one?: Resolver<Maybe<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiative_Volunteers_OneArgs, 'object'>>;
  insert_initiatives?: Resolver<Maybe<ResolversTypes['initiatives_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_InitiativesArgs, 'objects'>>;
  insert_initiatives_one?: Resolver<Maybe<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Initiatives_OneArgs, 'object'>>;
  insert_org_members?: Resolver<Maybe<ResolversTypes['org_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_MembersArgs, 'objects'>>;
  insert_org_members_one?: Resolver<Maybe<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_Members_OneArgs, 'object'>>;
  insert_org_projects?: Resolver<Maybe<ResolversTypes['org_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_ProjectsArgs, 'objects'>>;
  insert_org_projects_one?: Resolver<Maybe<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_Projects_OneArgs, 'object'>>;
  insert_org_tags?: Resolver<Maybe<ResolversTypes['org_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_TagsArgs, 'objects'>>;
  insert_org_tags_one?: Resolver<Maybe<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_Tags_OneArgs, 'object'>>;
  insert_org_visits?: Resolver<Maybe<ResolversTypes['org_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_VisitsArgs, 'objects'>>;
  insert_org_visits_one?: Resolver<Maybe<ResolversTypes['org_visits']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Org_Visits_OneArgs, 'object'>>;
  insert_orgs?: Resolver<Maybe<ResolversTypes['orgs_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_OrgsArgs, 'objects'>>;
  insert_orgs_one?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Orgs_OneArgs, 'object'>>;
  insert_post_types?: Resolver<Maybe<ResolversTypes['post_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Post_TypesArgs, 'objects'>>;
  insert_post_types_one?: Resolver<Maybe<ResolversTypes['post_types']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Post_Types_OneArgs, 'object'>>;
  insert_reactions?: Resolver<Maybe<ResolversTypes['reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_ReactionsArgs, 'objects'>>;
  insert_reactions_one?: Resolver<Maybe<ResolversTypes['reactions']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Reactions_OneArgs, 'object'>>;
  insert_spatial_ref_sys?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Spatial_Ref_SysArgs, 'objects'>>;
  insert_spatial_ref_sys_one?: Resolver<Maybe<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Spatial_Ref_Sys_OneArgs, 'object'>>;
  insert_tags?: Resolver<Maybe<ResolversTypes['tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_TagsArgs, 'objects'>>;
  insert_tags_one?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Tags_OneArgs, 'object'>>;
  insert_task_statuses?: Resolver<Maybe<ResolversTypes['task_statuses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Task_StatusesArgs, 'objects'>>;
  insert_task_statuses_one?: Resolver<Maybe<ResolversTypes['task_statuses']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Task_Statuses_OneArgs, 'object'>>;
  insert_tenders?: Resolver<Maybe<ResolversTypes['tenders_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_TendersArgs, 'objects'>>;
  insert_tenders_one?: Resolver<Maybe<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Tenders_OneArgs, 'object'>>;
  insert_user_settings?: Resolver<Maybe<ResolversTypes['user_settings_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_User_SettingsArgs, 'objects'>>;
  insert_user_settings_one?: Resolver<Maybe<ResolversTypes['user_settings']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_User_Settings_OneArgs, 'object'>>;
  insert_user_subscriptions?: Resolver<Maybe<ResolversTypes['user_subscriptions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_User_SubscriptionsArgs, 'objects'>>;
  insert_user_subscriptions_one?: Resolver<Maybe<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_User_Subscriptions_OneArgs, 'object'>>;
  insert_users?: Resolver<Maybe<ResolversTypes['users_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_UsersArgs, 'objects'>>;
  insert_users_one?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType, RequireFields<Mutation_RootInsert_Users_OneArgs, 'object'>>;
  update_auth_account_providers?: Resolver<Maybe<ResolversTypes['auth_account_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Account_ProvidersArgs, 'where'>>;
  update_auth_account_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Account_Providers_By_PkArgs, 'pk_columns'>>;
  update_auth_account_roles?: Resolver<Maybe<ResolversTypes['auth_account_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Account_RolesArgs, 'where'>>;
  update_auth_account_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Account_Roles_By_PkArgs, 'pk_columns'>>;
  update_auth_accounts?: Resolver<Maybe<ResolversTypes['auth_accounts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_AccountsArgs, 'where'>>;
  update_auth_accounts_by_pk?: Resolver<Maybe<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Accounts_By_PkArgs, 'pk_columns'>>;
  update_auth_migrations?: Resolver<Maybe<ResolversTypes['auth_migrations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_MigrationsArgs, 'where'>>;
  update_auth_migrations_by_pk?: Resolver<Maybe<ResolversTypes['auth_migrations']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Migrations_By_PkArgs, 'pk_columns'>>;
  update_auth_providers?: Resolver<Maybe<ResolversTypes['auth_providers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_ProvidersArgs, 'where'>>;
  update_auth_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_providers']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Providers_By_PkArgs, 'pk_columns'>>;
  update_auth_refresh_tokens?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Refresh_TokensArgs, 'where'>>;
  update_auth_refresh_tokens_by_pk?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Refresh_Tokens_By_PkArgs, 'pk_columns'>>;
  update_auth_roles?: Resolver<Maybe<ResolversTypes['auth_roles_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_RolesArgs, 'where'>>;
  update_auth_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_roles']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Auth_Roles_By_PkArgs, 'pk_columns'>>;
  update_file_types?: Resolver<Maybe<ResolversTypes['file_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_File_TypesArgs, 'where'>>;
  update_file_types_by_pk?: Resolver<Maybe<ResolversTypes['file_types']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_File_Types_By_PkArgs, 'pk_columns'>>;
  update_files?: Resolver<Maybe<ResolversTypes['files_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_FilesArgs, 'where'>>;
  update_files_by_pk?: Resolver<Maybe<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Files_By_PkArgs, 'pk_columns'>>;
  update_geometry_columns?: Resolver<Maybe<ResolversTypes['geometry_columns_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Geometry_ColumnsArgs, 'where'>>;
  update_i18n?: Resolver<Maybe<ResolversTypes['i18n_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_I18nArgs, 'where'>>;
  update_i18n_by_pk?: Resolver<Maybe<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_I18n_By_PkArgs, 'pk_columns'>>;
  update_i18n_categories?: Resolver<Maybe<ResolversTypes['i18n_categories_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_I18n_CategoriesArgs, 'where'>>;
  update_i18n_categories_by_pk?: Resolver<Maybe<ResolversTypes['i18n_categories']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_I18n_Categories_By_PkArgs, 'pk_columns'>>;
  update_initiative_comment_reactions?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Comment_ReactionsArgs, 'where'>>;
  update_initiative_comment_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Comment_Reactions_By_PkArgs, 'pk_columns'>>;
  update_initiative_comments?: Resolver<Maybe<ResolversTypes['initiative_comments_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_CommentsArgs, 'where'>>;
  update_initiative_comments_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Comments_By_PkArgs, 'pk_columns'>>;
  update_initiative_donations?: Resolver<Maybe<ResolversTypes['initiative_donations_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_DonationsArgs, 'where'>>;
  update_initiative_donations_by_pk?: Resolver<Maybe<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Donations_By_PkArgs, 'pk_columns'>>;
  update_initiative_edits?: Resolver<Maybe<ResolversTypes['initiative_edits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_EditsArgs, 'where'>>;
  update_initiative_edits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Edits_By_PkArgs, 'pk_columns'>>;
  update_initiative_expenses?: Resolver<Maybe<ResolversTypes['initiative_expenses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_ExpensesArgs, 'where'>>;
  update_initiative_expenses_by_pk?: Resolver<Maybe<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Expenses_By_PkArgs, 'pk_columns'>>;
  update_initiative_info?: Resolver<Maybe<ResolversTypes['initiative_info_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_InfoArgs, 'where'>>;
  update_initiative_info_by_pk?: Resolver<Maybe<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Info_By_PkArgs, 'pk_columns'>>;
  update_initiative_members?: Resolver<Maybe<ResolversTypes['initiative_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_MembersArgs, 'where'>>;
  update_initiative_members_by_pk?: Resolver<Maybe<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Members_By_PkArgs, 'pk_columns'>>;
  update_initiative_poll_votes?: Resolver<Maybe<ResolversTypes['initiative_poll_votes_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Poll_VotesArgs, 'where'>>;
  update_initiative_poll_votes_by_pk?: Resolver<Maybe<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Poll_Votes_By_PkArgs, 'pk_columns'>>;
  update_initiative_polls?: Resolver<Maybe<ResolversTypes['initiative_polls_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_PollsArgs, 'where'>>;
  update_initiative_polls_by_pk?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Polls_By_PkArgs, 'pk_columns'>>;
  update_initiative_post_reactions?: Resolver<Maybe<ResolversTypes['initiative_post_reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Post_ReactionsArgs, 'where'>>;
  update_initiative_post_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Post_Reactions_By_PkArgs, 'pk_columns'>>;
  update_initiative_posts?: Resolver<Maybe<ResolversTypes['initiative_posts_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_PostsArgs, 'where'>>;
  update_initiative_posts_by_pk?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Posts_By_PkArgs, 'pk_columns'>>;
  update_initiative_projects?: Resolver<Maybe<ResolversTypes['initiative_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_ProjectsArgs, 'where'>>;
  update_initiative_projects_by_pk?: Resolver<Maybe<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Projects_By_PkArgs, 'pk_columns'>>;
  update_initiative_tags?: Resolver<Maybe<ResolversTypes['initiative_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_TagsArgs, 'where'>>;
  update_initiative_tags_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Tags_By_PkArgs, 'pk_columns'>>;
  update_initiative_tasks?: Resolver<Maybe<ResolversTypes['initiative_tasks_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_TasksArgs, 'where'>>;
  update_initiative_tasks_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Tasks_By_PkArgs, 'pk_columns'>>;
  update_initiative_visits?: Resolver<Maybe<ResolversTypes['initiative_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_VisitsArgs, 'where'>>;
  update_initiative_visits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Visits_By_PkArgs, 'pk_columns'>>;
  update_initiative_volunteers?: Resolver<Maybe<ResolversTypes['initiative_volunteers_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_VolunteersArgs, 'where'>>;
  update_initiative_volunteers_by_pk?: Resolver<Maybe<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiative_Volunteers_By_PkArgs, 'pk_columns'>>;
  update_initiatives?: Resolver<Maybe<ResolversTypes['initiatives_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_InitiativesArgs, 'where'>>;
  update_initiatives_by_pk?: Resolver<Maybe<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Initiatives_By_PkArgs, 'pk_columns'>>;
  update_org_members?: Resolver<Maybe<ResolversTypes['org_members_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_MembersArgs, 'where'>>;
  update_org_members_by_pk?: Resolver<Maybe<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_Members_By_PkArgs, 'pk_columns'>>;
  update_org_projects?: Resolver<Maybe<ResolversTypes['org_projects_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_ProjectsArgs, 'where'>>;
  update_org_projects_by_pk?: Resolver<Maybe<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_Projects_By_PkArgs, 'pk_columns'>>;
  update_org_tags?: Resolver<Maybe<ResolversTypes['org_tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_TagsArgs, 'where'>>;
  update_org_tags_by_pk?: Resolver<Maybe<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_Tags_By_PkArgs, 'pk_columns'>>;
  update_org_visits?: Resolver<Maybe<ResolversTypes['org_visits_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Org_VisitsArgs, 'where'>>;
  update_orgs?: Resolver<Maybe<ResolversTypes['orgs_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_OrgsArgs, 'where'>>;
  update_orgs_by_pk?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Orgs_By_PkArgs, 'pk_columns'>>;
  update_post_types?: Resolver<Maybe<ResolversTypes['post_types_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Post_TypesArgs, 'where'>>;
  update_post_types_by_pk?: Resolver<Maybe<ResolversTypes['post_types']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Post_Types_By_PkArgs, 'pk_columns'>>;
  update_reactions?: Resolver<Maybe<ResolversTypes['reactions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_ReactionsArgs, 'where'>>;
  update_reactions_by_pk?: Resolver<Maybe<ResolversTypes['reactions']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Reactions_By_PkArgs, 'pk_columns'>>;
  update_spatial_ref_sys?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Spatial_Ref_SysArgs, 'where'>>;
  update_spatial_ref_sys_by_pk?: Resolver<Maybe<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Spatial_Ref_Sys_By_PkArgs, 'pk_columns'>>;
  update_tags?: Resolver<Maybe<ResolversTypes['tags_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_TagsArgs, 'where'>>;
  update_tags_by_pk?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Tags_By_PkArgs, 'pk_columns'>>;
  update_task_statuses?: Resolver<Maybe<ResolversTypes['task_statuses_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Task_StatusesArgs, 'where'>>;
  update_task_statuses_by_pk?: Resolver<Maybe<ResolversTypes['task_statuses']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Task_Statuses_By_PkArgs, 'pk_columns'>>;
  update_tenders?: Resolver<Maybe<ResolversTypes['tenders_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_TendersArgs, 'where'>>;
  update_tenders_by_pk?: Resolver<Maybe<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Tenders_By_PkArgs, 'pk_columns'>>;
  update_user_settings?: Resolver<Maybe<ResolversTypes['user_settings_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_User_SettingsArgs, 'where'>>;
  update_user_settings_by_pk?: Resolver<Maybe<ResolversTypes['user_settings']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_User_Settings_By_PkArgs, 'pk_columns'>>;
  update_user_subscriptions?: Resolver<Maybe<ResolversTypes['user_subscriptions_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_User_SubscriptionsArgs, 'where'>>;
  update_user_subscriptions_by_pk?: Resolver<Maybe<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_User_Subscriptions_By_PkArgs, 'pk_columns'>>;
  update_users?: Resolver<Maybe<ResolversTypes['users_mutation_response']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_UsersArgs, 'where'>>;
  update_users_by_pk?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType, RequireFields<Mutation_RootUpdate_Users_By_PkArgs, 'pk_columns'>>;
};

export interface NameScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['name'], any> {
  name: 'name';
}

export interface NumericScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['numeric'], any> {
  name: 'numeric';
}

export type Org_MembersResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members'] = ResolversParentTypes['org_members']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  org?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  role_description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_aggregate'] = ResolversParentTypes['org_members_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['org_members_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['org_members']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_aggregate_fields'] = ResolversParentTypes['org_members_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['org_members_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Org_Members_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['org_members_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['org_members_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['org_members_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['org_members_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['org_members_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['org_members_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['org_members_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['org_members_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['org_members_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_avg_fields'] = ResolversParentTypes['org_members_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_max_fields'] = ResolversParentTypes['org_members_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  role_description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_min_fields'] = ResolversParentTypes['org_members_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  role?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  role_description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_mutation_response'] = ResolversParentTypes['org_members_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['org_members']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_stddev_fields'] = ResolversParentTypes['org_members_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_stddev_pop_fields'] = ResolversParentTypes['org_members_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_stddev_samp_fields'] = ResolversParentTypes['org_members_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_sum_fields'] = ResolversParentTypes['org_members_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_var_pop_fields'] = ResolversParentTypes['org_members_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_var_samp_fields'] = ResolversParentTypes['org_members_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Members_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_members_variance_fields'] = ResolversParentTypes['org_members_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_ProjectsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects'] = ResolversParentTypes['org_projects']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  initiative_projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Org_ProjectsInitiative_ProjectsArgs, never>>;
  initiative_projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<Org_ProjectsInitiative_Projects_AggregateArgs, never>>;
  org?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tenders?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Org_ProjectsTendersArgs, never>>;
  tenders_aggregate?: Resolver<ResolversTypes['tenders_aggregate'], ParentType, ContextType, RequireFields<Org_ProjectsTenders_AggregateArgs, never>>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_aggregate'] = ResolversParentTypes['org_projects_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['org_projects_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['org_projects']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_aggregate_fields'] = ResolversParentTypes['org_projects_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['org_projects_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Org_Projects_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['org_projects_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['org_projects_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['org_projects_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['org_projects_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['org_projects_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['org_projects_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['org_projects_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['org_projects_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['org_projects_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_avg_fields'] = ResolversParentTypes['org_projects_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_max_fields'] = ResolversParentTypes['org_projects_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_min_fields'] = ResolversParentTypes['org_projects_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_mutation_response'] = ResolversParentTypes['org_projects_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['org_projects']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_stddev_fields'] = ResolversParentTypes['org_projects_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_stddev_pop_fields'] = ResolversParentTypes['org_projects_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_stddev_samp_fields'] = ResolversParentTypes['org_projects_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_sum_fields'] = ResolversParentTypes['org_projects_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_var_pop_fields'] = ResolversParentTypes['org_projects_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_var_samp_fields'] = ResolversParentTypes['org_projects_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Projects_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_projects_variance_fields'] = ResolversParentTypes['org_projects_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_TagsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags'] = ResolversParentTypes['org_tags']> = {
  id?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  org?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  tags?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_aggregate'] = ResolversParentTypes['org_tags_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['org_tags_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['org_tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_aggregate_fields'] = ResolversParentTypes['org_tags_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['org_tags_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Org_Tags_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['org_tags_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['org_tags_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['org_tags_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['org_tags_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['org_tags_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['org_tags_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['org_tags_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['org_tags_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['org_tags_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_avg_fields'] = ResolversParentTypes['org_tags_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_max_fields'] = ResolversParentTypes['org_tags_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_min_fields'] = ResolversParentTypes['org_tags_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_mutation_response'] = ResolversParentTypes['org_tags_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['org_tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_stddev_fields'] = ResolversParentTypes['org_tags_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_stddev_pop_fields'] = ResolversParentTypes['org_tags_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_stddev_samp_fields'] = ResolversParentTypes['org_tags_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_sum_fields'] = ResolversParentTypes['org_tags_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_var_pop_fields'] = ResolversParentTypes['org_tags_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_var_samp_fields'] = ResolversParentTypes['org_tags_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Tags_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_tags_variance_fields'] = ResolversParentTypes['org_tags_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_VisitsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits'] = ResolversParentTypes['org_visits']> = {
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_aggregate'] = ResolversParentTypes['org_visits_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['org_visits_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['org_visits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_aggregate_fields'] = ResolversParentTypes['org_visits_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['org_visits_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Org_Visits_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['org_visits_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['org_visits_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['org_visits_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['org_visits_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['org_visits_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['org_visits_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['org_visits_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['org_visits_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['org_visits_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_avg_fields'] = ResolversParentTypes['org_visits_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_max_fields'] = ResolversParentTypes['org_visits_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_min_fields'] = ResolversParentTypes['org_visits_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  visited_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_mutation_response'] = ResolversParentTypes['org_visits_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['org_visits']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_stddev_fields'] = ResolversParentTypes['org_visits_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_stddev_pop_fields'] = ResolversParentTypes['org_visits_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_stddev_samp_fields'] = ResolversParentTypes['org_visits_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_sum_fields'] = ResolversParentTypes['org_visits_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_var_pop_fields'] = ResolversParentTypes['org_visits_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_var_samp_fields'] = ResolversParentTypes['org_visits_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Org_Visits_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['org_visits_variance_fields'] = ResolversParentTypes['org_visits_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type OrgsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs'] = ResolversParentTypes['orgs']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  initiative_projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<OrgsInitiative_ProjectsArgs, never>>;
  initiative_projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<OrgsInitiative_Projects_AggregateArgs, never>>;
  members?: Resolver<Array<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<OrgsMembersArgs, never>>;
  members_aggregate?: Resolver<ResolversTypes['org_members_aggregate'], ParentType, ContextType, RequireFields<OrgsMembers_AggregateArgs, never>>;
  modified_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  projects?: Resolver<Array<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<OrgsProjectsArgs, never>>;
  projects_aggregate?: Resolver<ResolversTypes['org_projects_aggregate'], ParentType, ContextType, RequireFields<OrgsProjects_AggregateArgs, never>>;
  tags?: Resolver<Array<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<OrgsTagsArgs, never>>;
  tags_aggregate?: Resolver<ResolversTypes['org_tags_aggregate'], ParentType, ContextType, RequireFields<OrgsTags_AggregateArgs, never>>;
  tenders?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<OrgsTendersArgs, never>>;
  tenders_aggregate?: Resolver<ResolversTypes['tenders_aggregate'], ParentType, ContextType, RequireFields<OrgsTenders_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_aggregate'] = ResolversParentTypes['orgs_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['orgs_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['orgs']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_aggregate_fields'] = ResolversParentTypes['orgs_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Orgs_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['orgs_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['orgs_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_max_fields'] = ResolversParentTypes['orgs_max_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_min_fields'] = ResolversParentTypes['orgs_min_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_mutation_response'] = ResolversParentTypes['orgs_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['orgs']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_ViewResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view'] = ResolversParentTypes['orgs_view']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  geom?: Resolver<Maybe<ResolversTypes['geometry']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_aggregate'] = ResolversParentTypes['orgs_view_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['orgs_view_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['orgs_view']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_aggregate_fields'] = ResolversParentTypes['orgs_view_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['orgs_view_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Orgs_View_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['orgs_view_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['orgs_view_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['orgs_view_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['orgs_view_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['orgs_view_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['orgs_view_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['orgs_view_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['orgs_view_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['orgs_view_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_avg_fields'] = ResolversParentTypes['orgs_view_avg_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_max_fields'] = ResolversParentTypes['orgs_view_max_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_min_fields'] = ResolversParentTypes['orgs_view_min_fields']> = {
  address?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  description?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  image?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  modified_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_stddev_fields'] = ResolversParentTypes['orgs_view_stddev_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_stddev_pop_fields'] = ResolversParentTypes['orgs_view_stddev_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_stddev_samp_fields'] = ResolversParentTypes['orgs_view_stddev_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_sum_fields'] = ResolversParentTypes['orgs_view_sum_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_var_pop_fields'] = ResolversParentTypes['orgs_view_var_pop_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_var_samp_fields'] = ResolversParentTypes['orgs_view_var_samp_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Orgs_View_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['orgs_view_variance_fields'] = ResolversParentTypes['orgs_view_variance_fields']> = {
  members_count?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_TypesResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types'] = ResolversParentTypes['post_types']> = {
  initiative_posts?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Post_TypesInitiative_PostsArgs, never>>;
  initiative_posts_aggregate?: Resolver<ResolversTypes['initiative_posts_aggregate'], ParentType, ContextType, RequireFields<Post_TypesInitiative_Posts_AggregateArgs, never>>;
  type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_Types_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types_aggregate'] = ResolversParentTypes['post_types_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['post_types_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['post_types']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_Types_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types_aggregate_fields'] = ResolversParentTypes['post_types_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Post_Types_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['post_types_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['post_types_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_Types_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types_max_fields'] = ResolversParentTypes['post_types_max_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_Types_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types_min_fields'] = ResolversParentTypes['post_types_min_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Post_Types_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['post_types_mutation_response'] = ResolversParentTypes['post_types_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['post_types']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Query_RootResolvers<ContextType = any, ParentType extends ResolversParentTypes['query_root'] = ResolversParentTypes['query_root']> = {
  auth_account_providers?: Resolver<Array<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Query_RootAuth_Account_ProvidersArgs, never>>;
  auth_account_providers_aggregate?: Resolver<ResolversTypes['auth_account_providers_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Account_Providers_AggregateArgs, never>>;
  auth_account_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_providers']>, ParentType, ContextType, RequireFields<Query_RootAuth_Account_Providers_By_PkArgs, 'id'>>;
  auth_account_roles?: Resolver<Array<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Query_RootAuth_Account_RolesArgs, never>>;
  auth_account_roles_aggregate?: Resolver<ResolversTypes['auth_account_roles_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Account_Roles_AggregateArgs, never>>;
  auth_account_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_account_roles']>, ParentType, ContextType, RequireFields<Query_RootAuth_Account_Roles_By_PkArgs, 'id'>>;
  auth_accounts?: Resolver<Array<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Query_RootAuth_AccountsArgs, never>>;
  auth_accounts_aggregate?: Resolver<ResolversTypes['auth_accounts_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Accounts_AggregateArgs, never>>;
  auth_accounts_by_pk?: Resolver<Maybe<ResolversTypes['auth_accounts']>, ParentType, ContextType, RequireFields<Query_RootAuth_Accounts_By_PkArgs, 'id'>>;
  auth_migrations?: Resolver<Array<ResolversTypes['auth_migrations']>, ParentType, ContextType, RequireFields<Query_RootAuth_MigrationsArgs, never>>;
  auth_migrations_aggregate?: Resolver<ResolversTypes['auth_migrations_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Migrations_AggregateArgs, never>>;
  auth_migrations_by_pk?: Resolver<Maybe<ResolversTypes['auth_migrations']>, ParentType, ContextType, RequireFields<Query_RootAuth_Migrations_By_PkArgs, 'id'>>;
  auth_providers?: Resolver<Array<ResolversTypes['auth_providers']>, ParentType, ContextType, RequireFields<Query_RootAuth_ProvidersArgs, never>>;
  auth_providers_aggregate?: Resolver<ResolversTypes['auth_providers_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Providers_AggregateArgs, never>>;
  auth_providers_by_pk?: Resolver<Maybe<ResolversTypes['auth_providers']>, ParentType, ContextType, RequireFields<Query_RootAuth_Providers_By_PkArgs, 'provider'>>;
  auth_refresh_tokens?: Resolver<Array<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Query_RootAuth_Refresh_TokensArgs, never>>;
  auth_refresh_tokens_aggregate?: Resolver<ResolversTypes['auth_refresh_tokens_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Refresh_Tokens_AggregateArgs, never>>;
  auth_refresh_tokens_by_pk?: Resolver<Maybe<ResolversTypes['auth_refresh_tokens']>, ParentType, ContextType, RequireFields<Query_RootAuth_Refresh_Tokens_By_PkArgs, 'refresh_token'>>;
  auth_roles?: Resolver<Array<ResolversTypes['auth_roles']>, ParentType, ContextType, RequireFields<Query_RootAuth_RolesArgs, never>>;
  auth_roles_aggregate?: Resolver<ResolversTypes['auth_roles_aggregate'], ParentType, ContextType, RequireFields<Query_RootAuth_Roles_AggregateArgs, never>>;
  auth_roles_by_pk?: Resolver<Maybe<ResolversTypes['auth_roles']>, ParentType, ContextType, RequireFields<Query_RootAuth_Roles_By_PkArgs, 'role'>>;
  entries?: Resolver<Array<ResolversTypes['entries']>, ParentType, ContextType, RequireFields<Query_RootEntriesArgs, never>>;
  entries_aggregate?: Resolver<ResolversTypes['entries_aggregate'], ParentType, ContextType, RequireFields<Query_RootEntries_AggregateArgs, never>>;
  entries_nearby?: Resolver<Array<ResolversTypes['entries']>, ParentType, ContextType, RequireFields<Query_RootEntries_NearbyArgs, 'args'>>;
  entries_nearby_aggregate?: Resolver<ResolversTypes['entries_aggregate'], ParentType, ContextType, RequireFields<Query_RootEntries_Nearby_AggregateArgs, 'args'>>;
  entry_members?: Resolver<Array<ResolversTypes['entry_members']>, ParentType, ContextType, RequireFields<Query_RootEntry_MembersArgs, never>>;
  entry_members_aggregate?: Resolver<ResolversTypes['entry_members_aggregate'], ParentType, ContextType, RequireFields<Query_RootEntry_Members_AggregateArgs, never>>;
  entry_visits?: Resolver<Array<ResolversTypes['entry_visits']>, ParentType, ContextType, RequireFields<Query_RootEntry_VisitsArgs, never>>;
  entry_visits_aggregate?: Resolver<ResolversTypes['entry_visits_aggregate'], ParentType, ContextType, RequireFields<Query_RootEntry_Visits_AggregateArgs, never>>;
  file_types?: Resolver<Array<ResolversTypes['file_types']>, ParentType, ContextType, RequireFields<Query_RootFile_TypesArgs, never>>;
  file_types_aggregate?: Resolver<ResolversTypes['file_types_aggregate'], ParentType, ContextType, RequireFields<Query_RootFile_Types_AggregateArgs, never>>;
  file_types_by_pk?: Resolver<Maybe<ResolversTypes['file_types']>, ParentType, ContextType, RequireFields<Query_RootFile_Types_By_PkArgs, 'type'>>;
  files?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Query_RootFilesArgs, never>>;
  files_aggregate?: Resolver<ResolversTypes['files_aggregate'], ParentType, ContextType, RequireFields<Query_RootFiles_AggregateArgs, never>>;
  files_by_pk?: Resolver<Maybe<ResolversTypes['files']>, ParentType, ContextType, RequireFields<Query_RootFiles_By_PkArgs, 'id'>>;
  geography_columns?: Resolver<Array<ResolversTypes['geography_columns']>, ParentType, ContextType, RequireFields<Query_RootGeography_ColumnsArgs, never>>;
  geography_columns_aggregate?: Resolver<ResolversTypes['geography_columns_aggregate'], ParentType, ContextType, RequireFields<Query_RootGeography_Columns_AggregateArgs, never>>;
  geometry_columns?: Resolver<Array<ResolversTypes['geometry_columns']>, ParentType, ContextType, RequireFields<Query_RootGeometry_ColumnsArgs, never>>;
  geometry_columns_aggregate?: Resolver<ResolversTypes['geometry_columns_aggregate'], ParentType, ContextType, RequireFields<Query_RootGeometry_Columns_AggregateArgs, never>>;
  i18n?: Resolver<Array<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<Query_RootI18nArgs, never>>;
  i18n_aggregate?: Resolver<ResolversTypes['i18n_aggregate'], ParentType, ContextType, RequireFields<Query_RootI18n_AggregateArgs, never>>;
  i18n_by_pk?: Resolver<Maybe<ResolversTypes['i18n']>, ParentType, ContextType, RequireFields<Query_RootI18n_By_PkArgs, 'id'>>;
  i18n_categories?: Resolver<Array<ResolversTypes['i18n_categories']>, ParentType, ContextType, RequireFields<Query_RootI18n_CategoriesArgs, never>>;
  i18n_categories_aggregate?: Resolver<ResolversTypes['i18n_categories_aggregate'], ParentType, ContextType, RequireFields<Query_RootI18n_Categories_AggregateArgs, never>>;
  i18n_categories_by_pk?: Resolver<Maybe<ResolversTypes['i18n_categories']>, ParentType, ContextType, RequireFields<Query_RootI18n_Categories_By_PkArgs, 'category'>>;
  initiative_comment_reactions?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Comment_ReactionsArgs, never>>;
  initiative_comment_reactions_aggregate?: Resolver<ResolversTypes['initiative_comment_reactions_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Comment_Reactions_AggregateArgs, never>>;
  initiative_comment_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Comment_Reactions_By_PkArgs, 'comment_id' | 'id' | 'initiative_id' | 'post_id'>>;
  initiative_comments?: Resolver<Array<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Query_RootInitiative_CommentsArgs, never>>;
  initiative_comments_aggregate?: Resolver<ResolversTypes['initiative_comments_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Comments_AggregateArgs, never>>;
  initiative_comments_by_pk?: Resolver<Maybe<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Comments_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  initiative_donations?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Query_RootInitiative_DonationsArgs, never>>;
  initiative_donations_aggregate?: Resolver<ResolversTypes['initiative_donations_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Donations_AggregateArgs, never>>;
  initiative_donations_by_pk?: Resolver<Maybe<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Donations_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Query_RootInitiative_EditsArgs, never>>;
  initiative_edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Edits_AggregateArgs, never>>;
  initiative_edits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Edits_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_expenses?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Query_RootInitiative_ExpensesArgs, never>>;
  initiative_expenses_aggregate?: Resolver<ResolversTypes['initiative_expenses_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Expenses_AggregateArgs, never>>;
  initiative_expenses_by_pk?: Resolver<Maybe<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Expenses_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_info?: Resolver<Array<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<Query_RootInitiative_InfoArgs, never>>;
  initiative_info_aggregate?: Resolver<ResolversTypes['initiative_info_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Info_AggregateArgs, never>>;
  initiative_info_by_pk?: Resolver<Maybe<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Info_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_members?: Resolver<Array<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<Query_RootInitiative_MembersArgs, never>>;
  initiative_members_aggregate?: Resolver<ResolversTypes['initiative_members_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Members_AggregateArgs, never>>;
  initiative_members_by_pk?: Resolver<Maybe<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Members_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_poll_votes?: Resolver<Array<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Poll_VotesArgs, never>>;
  initiative_poll_votes_aggregate?: Resolver<ResolversTypes['initiative_poll_votes_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Poll_Votes_AggregateArgs, never>>;
  initiative_poll_votes_by_pk?: Resolver<Maybe<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Poll_Votes_By_PkArgs, 'id' | 'initiative_id' | 'poll_id'>>;
  initiative_polls?: Resolver<Array<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<Query_RootInitiative_PollsArgs, never>>;
  initiative_polls_aggregate?: Resolver<ResolversTypes['initiative_polls_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Polls_AggregateArgs, never>>;
  initiative_polls_by_pk?: Resolver<Maybe<ResolversTypes['initiative_polls']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Polls_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_post_reactions?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Post_ReactionsArgs, never>>;
  initiative_post_reactions_aggregate?: Resolver<ResolversTypes['initiative_post_reactions_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Post_Reactions_AggregateArgs, never>>;
  initiative_post_reactions_by_pk?: Resolver<Maybe<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Post_Reactions_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  initiative_posts?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Query_RootInitiative_PostsArgs, never>>;
  initiative_posts_aggregate?: Resolver<ResolversTypes['initiative_posts_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Posts_AggregateArgs, never>>;
  initiative_posts_by_pk?: Resolver<Maybe<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Posts_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Query_RootInitiative_ProjectsArgs, never>>;
  initiative_projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Projects_AggregateArgs, never>>;
  initiative_projects_by_pk?: Resolver<Maybe<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Projects_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_tags?: Resolver<Array<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<Query_RootInitiative_TagsArgs, never>>;
  initiative_tags_aggregate?: Resolver<ResolversTypes['initiative_tags_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Tags_AggregateArgs, never>>;
  initiative_tags_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Tags_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_tasks?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Query_RootInitiative_TasksArgs, never>>;
  initiative_tasks_aggregate?: Resolver<ResolversTypes['initiative_tasks_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Tasks_AggregateArgs, never>>;
  initiative_tasks_by_pk?: Resolver<Maybe<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Tasks_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_visits?: Resolver<Array<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<Query_RootInitiative_VisitsArgs, never>>;
  initiative_visits_aggregate?: Resolver<ResolversTypes['initiative_visits_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Visits_AggregateArgs, never>>;
  initiative_visits_by_pk?: Resolver<Maybe<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Visits_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_volunteers?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Query_RootInitiative_VolunteersArgs, never>>;
  initiative_volunteers_aggregate?: Resolver<ResolversTypes['initiative_volunteers_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiative_Volunteers_AggregateArgs, never>>;
  initiative_volunteers_by_pk?: Resolver<Maybe<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<Query_RootInitiative_Volunteers_By_PkArgs, 'id' | 'initiative_id'>>;
  initiatives?: Resolver<Array<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Query_RootInitiativesArgs, never>>;
  initiatives_aggregate?: Resolver<ResolversTypes['initiatives_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiatives_AggregateArgs, never>>;
  initiatives_by_pk?: Resolver<Maybe<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Query_RootInitiatives_By_PkArgs, 'id'>>;
  initiatives_nearby?: Resolver<Array<ResolversTypes['initiatives']>, ParentType, ContextType, RequireFields<Query_RootInitiatives_NearbyArgs, 'args'>>;
  initiatives_nearby_aggregate?: Resolver<ResolversTypes['initiatives_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiatives_Nearby_AggregateArgs, 'args'>>;
  initiatives_view?: Resolver<Array<ResolversTypes['initiatives_view']>, ParentType, ContextType, RequireFields<Query_RootInitiatives_ViewArgs, never>>;
  initiatives_view_aggregate?: Resolver<ResolversTypes['initiatives_view_aggregate'], ParentType, ContextType, RequireFields<Query_RootInitiatives_View_AggregateArgs, never>>;
  map_entries?: Resolver<Array<ResolversTypes['map_entries']>, ParentType, ContextType, RequireFields<Query_RootMap_EntriesArgs, never>>;
  map_entries_aggregate?: Resolver<ResolversTypes['map_entries_aggregate'], ParentType, ContextType, RequireFields<Query_RootMap_Entries_AggregateArgs, never>>;
  org_members?: Resolver<Array<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<Query_RootOrg_MembersArgs, never>>;
  org_members_aggregate?: Resolver<ResolversTypes['org_members_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrg_Members_AggregateArgs, never>>;
  org_members_by_pk?: Resolver<Maybe<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<Query_RootOrg_Members_By_PkArgs, 'id'>>;
  org_projects?: Resolver<Array<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<Query_RootOrg_ProjectsArgs, never>>;
  org_projects_aggregate?: Resolver<ResolversTypes['org_projects_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrg_Projects_AggregateArgs, never>>;
  org_projects_by_pk?: Resolver<Maybe<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<Query_RootOrg_Projects_By_PkArgs, 'id'>>;
  org_tags?: Resolver<Array<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<Query_RootOrg_TagsArgs, never>>;
  org_tags_aggregate?: Resolver<ResolversTypes['org_tags_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrg_Tags_AggregateArgs, never>>;
  org_tags_by_pk?: Resolver<Maybe<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<Query_RootOrg_Tags_By_PkArgs, 'id'>>;
  org_visits?: Resolver<Array<ResolversTypes['org_visits']>, ParentType, ContextType, RequireFields<Query_RootOrg_VisitsArgs, never>>;
  org_visits_aggregate?: Resolver<ResolversTypes['org_visits_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrg_Visits_AggregateArgs, never>>;
  orgs?: Resolver<Array<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Query_RootOrgsArgs, never>>;
  orgs_aggregate?: Resolver<ResolversTypes['orgs_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrgs_AggregateArgs, never>>;
  orgs_by_pk?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Query_RootOrgs_By_PkArgs, 'id'>>;
  orgs_nearby?: Resolver<Array<ResolversTypes['orgs']>, ParentType, ContextType, RequireFields<Query_RootOrgs_NearbyArgs, 'args'>>;
  orgs_nearby_aggregate?: Resolver<ResolversTypes['orgs_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrgs_Nearby_AggregateArgs, 'args'>>;
  orgs_view?: Resolver<Array<ResolversTypes['orgs_view']>, ParentType, ContextType, RequireFields<Query_RootOrgs_ViewArgs, never>>;
  orgs_view_aggregate?: Resolver<ResolversTypes['orgs_view_aggregate'], ParentType, ContextType, RequireFields<Query_RootOrgs_View_AggregateArgs, never>>;
  post_types?: Resolver<Array<ResolversTypes['post_types']>, ParentType, ContextType, RequireFields<Query_RootPost_TypesArgs, never>>;
  post_types_aggregate?: Resolver<ResolversTypes['post_types_aggregate'], ParentType, ContextType, RequireFields<Query_RootPost_Types_AggregateArgs, never>>;
  post_types_by_pk?: Resolver<Maybe<ResolversTypes['post_types']>, ParentType, ContextType, RequireFields<Query_RootPost_Types_By_PkArgs, 'type'>>;
  reactions?: Resolver<Array<ResolversTypes['reactions']>, ParentType, ContextType, RequireFields<Query_RootReactionsArgs, never>>;
  reactions_aggregate?: Resolver<ResolversTypes['reactions_aggregate'], ParentType, ContextType, RequireFields<Query_RootReactions_AggregateArgs, never>>;
  reactions_by_pk?: Resolver<Maybe<ResolversTypes['reactions']>, ParentType, ContextType, RequireFields<Query_RootReactions_By_PkArgs, 'type'>>;
  spatial_ref_sys?: Resolver<Array<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType, RequireFields<Query_RootSpatial_Ref_SysArgs, never>>;
  spatial_ref_sys_aggregate?: Resolver<ResolversTypes['spatial_ref_sys_aggregate'], ParentType, ContextType, RequireFields<Query_RootSpatial_Ref_Sys_AggregateArgs, never>>;
  spatial_ref_sys_by_pk?: Resolver<Maybe<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType, RequireFields<Query_RootSpatial_Ref_Sys_By_PkArgs, 'srid'>>;
  tags?: Resolver<Array<ResolversTypes['tags']>, ParentType, ContextType, RequireFields<Query_RootTagsArgs, never>>;
  tags_aggregate?: Resolver<ResolversTypes['tags_aggregate'], ParentType, ContextType, RequireFields<Query_RootTags_AggregateArgs, never>>;
  tags_by_pk?: Resolver<Maybe<ResolversTypes['tags']>, ParentType, ContextType, RequireFields<Query_RootTags_By_PkArgs, 'tag'>>;
  task_statuses?: Resolver<Array<ResolversTypes['task_statuses']>, ParentType, ContextType, RequireFields<Query_RootTask_StatusesArgs, never>>;
  task_statuses_aggregate?: Resolver<ResolversTypes['task_statuses_aggregate'], ParentType, ContextType, RequireFields<Query_RootTask_Statuses_AggregateArgs, never>>;
  task_statuses_by_pk?: Resolver<Maybe<ResolversTypes['task_statuses']>, ParentType, ContextType, RequireFields<Query_RootTask_Statuses_By_PkArgs, 'status'>>;
  tenders?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Query_RootTendersArgs, never>>;
  tenders_aggregate?: Resolver<ResolversTypes['tenders_aggregate'], ParentType, ContextType, RequireFields<Query_RootTenders_AggregateArgs, never>>;
  tenders_by_pk?: Resolver<Maybe<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<Query_RootTenders_By_PkArgs, 'id'>>;
  user_settings?: Resolver<Array<ResolversTypes['user_settings']>, ParentType, ContextType, RequireFields<Query_RootUser_SettingsArgs, never>>;
  user_settings_aggregate?: Resolver<ResolversTypes['user_settings_aggregate'], ParentType, ContextType, RequireFields<Query_RootUser_Settings_AggregateArgs, never>>;
  user_settings_by_pk?: Resolver<Maybe<ResolversTypes['user_settings']>, ParentType, ContextType, RequireFields<Query_RootUser_Settings_By_PkArgs, 'user_id'>>;
  user_subscriptions?: Resolver<Array<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<Query_RootUser_SubscriptionsArgs, never>>;
  user_subscriptions_aggregate?: Resolver<ResolversTypes['user_subscriptions_aggregate'], ParentType, ContextType, RequireFields<Query_RootUser_Subscriptions_AggregateArgs, never>>;
  user_subscriptions_by_pk?: Resolver<Maybe<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<Query_RootUser_Subscriptions_By_PkArgs, 'id'>>;
  users?: Resolver<Array<ResolversTypes['users']>, ParentType, ContextType, RequireFields<Query_RootUsersArgs, never>>;
  users_aggregate?: Resolver<ResolversTypes['users_aggregate'], ParentType, ContextType, RequireFields<Query_RootUsers_AggregateArgs, never>>;
  users_by_pk?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType, RequireFields<Query_RootUsers_By_PkArgs, 'id'>>;
};

export type ReactionsResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions'] = ResolversParentTypes['reactions']> = {
  initiative_comment_reactions?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<ReactionsInitiative_Comment_ReactionsArgs, never>>;
  initiative_comment_reactions_aggregate?: Resolver<ResolversTypes['initiative_comment_reactions_aggregate'], ParentType, ContextType, RequireFields<ReactionsInitiative_Comment_Reactions_AggregateArgs, never>>;
  initiative_post_reactions?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<ReactionsInitiative_Post_ReactionsArgs, never>>;
  initiative_post_reactions_aggregate?: Resolver<ResolversTypes['initiative_post_reactions_aggregate'], ParentType, ContextType, RequireFields<ReactionsInitiative_Post_Reactions_AggregateArgs, never>>;
  type?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reactions_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions_aggregate'] = ResolversParentTypes['reactions_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['reactions_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reactions_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions_aggregate_fields'] = ResolversParentTypes['reactions_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Reactions_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['reactions_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['reactions_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reactions_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions_max_fields'] = ResolversParentTypes['reactions_max_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reactions_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions_min_fields'] = ResolversParentTypes['reactions_min_fields']> = {
  type?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Reactions_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['reactions_mutation_response'] = ResolversParentTypes['reactions_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['reactions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_SysResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys'] = ResolversParentTypes['spatial_ref_sys']> = {
  auth_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  auth_srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  proj4text?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  srid?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  srtext?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_aggregate'] = ResolversParentTypes['spatial_ref_sys_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_aggregate_fields'] = ResolversParentTypes['spatial_ref_sys_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Spatial_Ref_Sys_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['spatial_ref_sys_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_avg_fields'] = ResolversParentTypes['spatial_ref_sys_avg_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_max_fields'] = ResolversParentTypes['spatial_ref_sys_max_fields']> = {
  auth_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  auth_srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  proj4text?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srtext?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_min_fields'] = ResolversParentTypes['spatial_ref_sys_min_fields']> = {
  auth_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  auth_srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  proj4text?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srtext?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_mutation_response'] = ResolversParentTypes['spatial_ref_sys_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['spatial_ref_sys']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_stddev_fields'] = ResolversParentTypes['spatial_ref_sys_stddev_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_stddev_pop_fields'] = ResolversParentTypes['spatial_ref_sys_stddev_pop_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_stddev_samp_fields'] = ResolversParentTypes['spatial_ref_sys_stddev_samp_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_sum_fields'] = ResolversParentTypes['spatial_ref_sys_sum_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_var_pop_fields'] = ResolversParentTypes['spatial_ref_sys_var_pop_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_var_samp_fields'] = ResolversParentTypes['spatial_ref_sys_var_samp_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Spatial_Ref_Sys_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['spatial_ref_sys_variance_fields'] = ResolversParentTypes['spatial_ref_sys_variance_fields']> = {
  auth_srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  srid?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Subscription_RootResolvers<ContextType = any, ParentType extends ResolversParentTypes['subscription_root'] = ResolversParentTypes['subscription_root']> = {
  auth_account_providers?: SubscriptionResolver<Array<ResolversTypes['auth_account_providers']>, "auth_account_providers", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_ProvidersArgs, never>>;
  auth_account_providers_aggregate?: SubscriptionResolver<ResolversTypes['auth_account_providers_aggregate'], "auth_account_providers_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_Providers_AggregateArgs, never>>;
  auth_account_providers_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_account_providers']>, "auth_account_providers_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_Providers_By_PkArgs, 'id'>>;
  auth_account_roles?: SubscriptionResolver<Array<ResolversTypes['auth_account_roles']>, "auth_account_roles", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_RolesArgs, never>>;
  auth_account_roles_aggregate?: SubscriptionResolver<ResolversTypes['auth_account_roles_aggregate'], "auth_account_roles_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_Roles_AggregateArgs, never>>;
  auth_account_roles_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_account_roles']>, "auth_account_roles_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Account_Roles_By_PkArgs, 'id'>>;
  auth_accounts?: SubscriptionResolver<Array<ResolversTypes['auth_accounts']>, "auth_accounts", ParentType, ContextType, RequireFields<Subscription_RootAuth_AccountsArgs, never>>;
  auth_accounts_aggregate?: SubscriptionResolver<ResolversTypes['auth_accounts_aggregate'], "auth_accounts_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Accounts_AggregateArgs, never>>;
  auth_accounts_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_accounts']>, "auth_accounts_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Accounts_By_PkArgs, 'id'>>;
  auth_migrations?: SubscriptionResolver<Array<ResolversTypes['auth_migrations']>, "auth_migrations", ParentType, ContextType, RequireFields<Subscription_RootAuth_MigrationsArgs, never>>;
  auth_migrations_aggregate?: SubscriptionResolver<ResolversTypes['auth_migrations_aggregate'], "auth_migrations_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Migrations_AggregateArgs, never>>;
  auth_migrations_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_migrations']>, "auth_migrations_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Migrations_By_PkArgs, 'id'>>;
  auth_providers?: SubscriptionResolver<Array<ResolversTypes['auth_providers']>, "auth_providers", ParentType, ContextType, RequireFields<Subscription_RootAuth_ProvidersArgs, never>>;
  auth_providers_aggregate?: SubscriptionResolver<ResolversTypes['auth_providers_aggregate'], "auth_providers_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Providers_AggregateArgs, never>>;
  auth_providers_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_providers']>, "auth_providers_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Providers_By_PkArgs, 'provider'>>;
  auth_refresh_tokens?: SubscriptionResolver<Array<ResolversTypes['auth_refresh_tokens']>, "auth_refresh_tokens", ParentType, ContextType, RequireFields<Subscription_RootAuth_Refresh_TokensArgs, never>>;
  auth_refresh_tokens_aggregate?: SubscriptionResolver<ResolversTypes['auth_refresh_tokens_aggregate'], "auth_refresh_tokens_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Refresh_Tokens_AggregateArgs, never>>;
  auth_refresh_tokens_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_refresh_tokens']>, "auth_refresh_tokens_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Refresh_Tokens_By_PkArgs, 'refresh_token'>>;
  auth_roles?: SubscriptionResolver<Array<ResolversTypes['auth_roles']>, "auth_roles", ParentType, ContextType, RequireFields<Subscription_RootAuth_RolesArgs, never>>;
  auth_roles_aggregate?: SubscriptionResolver<ResolversTypes['auth_roles_aggregate'], "auth_roles_aggregate", ParentType, ContextType, RequireFields<Subscription_RootAuth_Roles_AggregateArgs, never>>;
  auth_roles_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['auth_roles']>, "auth_roles_by_pk", ParentType, ContextType, RequireFields<Subscription_RootAuth_Roles_By_PkArgs, 'role'>>;
  entries?: SubscriptionResolver<Array<ResolversTypes['entries']>, "entries", ParentType, ContextType, RequireFields<Subscription_RootEntriesArgs, never>>;
  entries_aggregate?: SubscriptionResolver<ResolversTypes['entries_aggregate'], "entries_aggregate", ParentType, ContextType, RequireFields<Subscription_RootEntries_AggregateArgs, never>>;
  entries_nearby?: SubscriptionResolver<Array<ResolversTypes['entries']>, "entries_nearby", ParentType, ContextType, RequireFields<Subscription_RootEntries_NearbyArgs, 'args'>>;
  entries_nearby_aggregate?: SubscriptionResolver<ResolversTypes['entries_aggregate'], "entries_nearby_aggregate", ParentType, ContextType, RequireFields<Subscription_RootEntries_Nearby_AggregateArgs, 'args'>>;
  entry_members?: SubscriptionResolver<Array<ResolversTypes['entry_members']>, "entry_members", ParentType, ContextType, RequireFields<Subscription_RootEntry_MembersArgs, never>>;
  entry_members_aggregate?: SubscriptionResolver<ResolversTypes['entry_members_aggregate'], "entry_members_aggregate", ParentType, ContextType, RequireFields<Subscription_RootEntry_Members_AggregateArgs, never>>;
  entry_visits?: SubscriptionResolver<Array<ResolversTypes['entry_visits']>, "entry_visits", ParentType, ContextType, RequireFields<Subscription_RootEntry_VisitsArgs, never>>;
  entry_visits_aggregate?: SubscriptionResolver<ResolversTypes['entry_visits_aggregate'], "entry_visits_aggregate", ParentType, ContextType, RequireFields<Subscription_RootEntry_Visits_AggregateArgs, never>>;
  file_types?: SubscriptionResolver<Array<ResolversTypes['file_types']>, "file_types", ParentType, ContextType, RequireFields<Subscription_RootFile_TypesArgs, never>>;
  file_types_aggregate?: SubscriptionResolver<ResolversTypes['file_types_aggregate'], "file_types_aggregate", ParentType, ContextType, RequireFields<Subscription_RootFile_Types_AggregateArgs, never>>;
  file_types_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['file_types']>, "file_types_by_pk", ParentType, ContextType, RequireFields<Subscription_RootFile_Types_By_PkArgs, 'type'>>;
  files?: SubscriptionResolver<Array<ResolversTypes['files']>, "files", ParentType, ContextType, RequireFields<Subscription_RootFilesArgs, never>>;
  files_aggregate?: SubscriptionResolver<ResolversTypes['files_aggregate'], "files_aggregate", ParentType, ContextType, RequireFields<Subscription_RootFiles_AggregateArgs, never>>;
  files_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['files']>, "files_by_pk", ParentType, ContextType, RequireFields<Subscription_RootFiles_By_PkArgs, 'id'>>;
  geography_columns?: SubscriptionResolver<Array<ResolversTypes['geography_columns']>, "geography_columns", ParentType, ContextType, RequireFields<Subscription_RootGeography_ColumnsArgs, never>>;
  geography_columns_aggregate?: SubscriptionResolver<ResolversTypes['geography_columns_aggregate'], "geography_columns_aggregate", ParentType, ContextType, RequireFields<Subscription_RootGeography_Columns_AggregateArgs, never>>;
  geometry_columns?: SubscriptionResolver<Array<ResolversTypes['geometry_columns']>, "geometry_columns", ParentType, ContextType, RequireFields<Subscription_RootGeometry_ColumnsArgs, never>>;
  geometry_columns_aggregate?: SubscriptionResolver<ResolversTypes['geometry_columns_aggregate'], "geometry_columns_aggregate", ParentType, ContextType, RequireFields<Subscription_RootGeometry_Columns_AggregateArgs, never>>;
  i18n?: SubscriptionResolver<Array<ResolversTypes['i18n']>, "i18n", ParentType, ContextType, RequireFields<Subscription_RootI18nArgs, never>>;
  i18n_aggregate?: SubscriptionResolver<ResolversTypes['i18n_aggregate'], "i18n_aggregate", ParentType, ContextType, RequireFields<Subscription_RootI18n_AggregateArgs, never>>;
  i18n_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['i18n']>, "i18n_by_pk", ParentType, ContextType, RequireFields<Subscription_RootI18n_By_PkArgs, 'id'>>;
  i18n_categories?: SubscriptionResolver<Array<ResolversTypes['i18n_categories']>, "i18n_categories", ParentType, ContextType, RequireFields<Subscription_RootI18n_CategoriesArgs, never>>;
  i18n_categories_aggregate?: SubscriptionResolver<ResolversTypes['i18n_categories_aggregate'], "i18n_categories_aggregate", ParentType, ContextType, RequireFields<Subscription_RootI18n_Categories_AggregateArgs, never>>;
  i18n_categories_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['i18n_categories']>, "i18n_categories_by_pk", ParentType, ContextType, RequireFields<Subscription_RootI18n_Categories_By_PkArgs, 'category'>>;
  initiative_comment_reactions?: SubscriptionResolver<Array<ResolversTypes['initiative_comment_reactions']>, "initiative_comment_reactions", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Comment_ReactionsArgs, never>>;
  initiative_comment_reactions_aggregate?: SubscriptionResolver<ResolversTypes['initiative_comment_reactions_aggregate'], "initiative_comment_reactions_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Comment_Reactions_AggregateArgs, never>>;
  initiative_comment_reactions_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_comment_reactions']>, "initiative_comment_reactions_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Comment_Reactions_By_PkArgs, 'comment_id' | 'id' | 'initiative_id' | 'post_id'>>;
  initiative_comments?: SubscriptionResolver<Array<ResolversTypes['initiative_comments']>, "initiative_comments", ParentType, ContextType, RequireFields<Subscription_RootInitiative_CommentsArgs, never>>;
  initiative_comments_aggregate?: SubscriptionResolver<ResolversTypes['initiative_comments_aggregate'], "initiative_comments_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Comments_AggregateArgs, never>>;
  initiative_comments_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_comments']>, "initiative_comments_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Comments_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  initiative_donations?: SubscriptionResolver<Array<ResolversTypes['initiative_donations']>, "initiative_donations", ParentType, ContextType, RequireFields<Subscription_RootInitiative_DonationsArgs, never>>;
  initiative_donations_aggregate?: SubscriptionResolver<ResolversTypes['initiative_donations_aggregate'], "initiative_donations_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Donations_AggregateArgs, never>>;
  initiative_donations_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_donations']>, "initiative_donations_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Donations_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_edits?: SubscriptionResolver<Array<ResolversTypes['initiative_edits']>, "initiative_edits", ParentType, ContextType, RequireFields<Subscription_RootInitiative_EditsArgs, never>>;
  initiative_edits_aggregate?: SubscriptionResolver<ResolversTypes['initiative_edits_aggregate'], "initiative_edits_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Edits_AggregateArgs, never>>;
  initiative_edits_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_edits']>, "initiative_edits_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Edits_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_expenses?: SubscriptionResolver<Array<ResolversTypes['initiative_expenses']>, "initiative_expenses", ParentType, ContextType, RequireFields<Subscription_RootInitiative_ExpensesArgs, never>>;
  initiative_expenses_aggregate?: SubscriptionResolver<ResolversTypes['initiative_expenses_aggregate'], "initiative_expenses_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Expenses_AggregateArgs, never>>;
  initiative_expenses_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_expenses']>, "initiative_expenses_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Expenses_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_info?: SubscriptionResolver<Array<ResolversTypes['initiative_info']>, "initiative_info", ParentType, ContextType, RequireFields<Subscription_RootInitiative_InfoArgs, never>>;
  initiative_info_aggregate?: SubscriptionResolver<ResolversTypes['initiative_info_aggregate'], "initiative_info_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Info_AggregateArgs, never>>;
  initiative_info_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_info']>, "initiative_info_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Info_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_members?: SubscriptionResolver<Array<ResolversTypes['initiative_members']>, "initiative_members", ParentType, ContextType, RequireFields<Subscription_RootInitiative_MembersArgs, never>>;
  initiative_members_aggregate?: SubscriptionResolver<ResolversTypes['initiative_members_aggregate'], "initiative_members_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Members_AggregateArgs, never>>;
  initiative_members_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_members']>, "initiative_members_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Members_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_poll_votes?: SubscriptionResolver<Array<ResolversTypes['initiative_poll_votes']>, "initiative_poll_votes", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Poll_VotesArgs, never>>;
  initiative_poll_votes_aggregate?: SubscriptionResolver<ResolversTypes['initiative_poll_votes_aggregate'], "initiative_poll_votes_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Poll_Votes_AggregateArgs, never>>;
  initiative_poll_votes_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_poll_votes']>, "initiative_poll_votes_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Poll_Votes_By_PkArgs, 'id' | 'initiative_id' | 'poll_id'>>;
  initiative_polls?: SubscriptionResolver<Array<ResolversTypes['initiative_polls']>, "initiative_polls", ParentType, ContextType, RequireFields<Subscription_RootInitiative_PollsArgs, never>>;
  initiative_polls_aggregate?: SubscriptionResolver<ResolversTypes['initiative_polls_aggregate'], "initiative_polls_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Polls_AggregateArgs, never>>;
  initiative_polls_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_polls']>, "initiative_polls_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Polls_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_post_reactions?: SubscriptionResolver<Array<ResolversTypes['initiative_post_reactions']>, "initiative_post_reactions", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Post_ReactionsArgs, never>>;
  initiative_post_reactions_aggregate?: SubscriptionResolver<ResolversTypes['initiative_post_reactions_aggregate'], "initiative_post_reactions_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Post_Reactions_AggregateArgs, never>>;
  initiative_post_reactions_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_post_reactions']>, "initiative_post_reactions_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Post_Reactions_By_PkArgs, 'id' | 'initiative_id' | 'post_id'>>;
  initiative_posts?: SubscriptionResolver<Array<ResolversTypes['initiative_posts']>, "initiative_posts", ParentType, ContextType, RequireFields<Subscription_RootInitiative_PostsArgs, never>>;
  initiative_posts_aggregate?: SubscriptionResolver<ResolversTypes['initiative_posts_aggregate'], "initiative_posts_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Posts_AggregateArgs, never>>;
  initiative_posts_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_posts']>, "initiative_posts_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Posts_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_projects?: SubscriptionResolver<Array<ResolversTypes['initiative_projects']>, "initiative_projects", ParentType, ContextType, RequireFields<Subscription_RootInitiative_ProjectsArgs, never>>;
  initiative_projects_aggregate?: SubscriptionResolver<ResolversTypes['initiative_projects_aggregate'], "initiative_projects_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Projects_AggregateArgs, never>>;
  initiative_projects_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_projects']>, "initiative_projects_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Projects_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_tags?: SubscriptionResolver<Array<ResolversTypes['initiative_tags']>, "initiative_tags", ParentType, ContextType, RequireFields<Subscription_RootInitiative_TagsArgs, never>>;
  initiative_tags_aggregate?: SubscriptionResolver<ResolversTypes['initiative_tags_aggregate'], "initiative_tags_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Tags_AggregateArgs, never>>;
  initiative_tags_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_tags']>, "initiative_tags_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Tags_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_tasks?: SubscriptionResolver<Array<ResolversTypes['initiative_tasks']>, "initiative_tasks", ParentType, ContextType, RequireFields<Subscription_RootInitiative_TasksArgs, never>>;
  initiative_tasks_aggregate?: SubscriptionResolver<ResolversTypes['initiative_tasks_aggregate'], "initiative_tasks_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Tasks_AggregateArgs, never>>;
  initiative_tasks_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_tasks']>, "initiative_tasks_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Tasks_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_visits?: SubscriptionResolver<Array<ResolversTypes['initiative_visits']>, "initiative_visits", ParentType, ContextType, RequireFields<Subscription_RootInitiative_VisitsArgs, never>>;
  initiative_visits_aggregate?: SubscriptionResolver<ResolversTypes['initiative_visits_aggregate'], "initiative_visits_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Visits_AggregateArgs, never>>;
  initiative_visits_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_visits']>, "initiative_visits_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Visits_By_PkArgs, 'id' | 'initiative_id'>>;
  initiative_volunteers?: SubscriptionResolver<Array<ResolversTypes['initiative_volunteers']>, "initiative_volunteers", ParentType, ContextType, RequireFields<Subscription_RootInitiative_VolunteersArgs, never>>;
  initiative_volunteers_aggregate?: SubscriptionResolver<ResolversTypes['initiative_volunteers_aggregate'], "initiative_volunteers_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Volunteers_AggregateArgs, never>>;
  initiative_volunteers_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiative_volunteers']>, "initiative_volunteers_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiative_Volunteers_By_PkArgs, 'id' | 'initiative_id'>>;
  initiatives?: SubscriptionResolver<Array<ResolversTypes['initiatives']>, "initiatives", ParentType, ContextType, RequireFields<Subscription_RootInitiativesArgs, never>>;
  initiatives_aggregate?: SubscriptionResolver<ResolversTypes['initiatives_aggregate'], "initiatives_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_AggregateArgs, never>>;
  initiatives_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['initiatives']>, "initiatives_by_pk", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_By_PkArgs, 'id'>>;
  initiatives_nearby?: SubscriptionResolver<Array<ResolversTypes['initiatives']>, "initiatives_nearby", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_NearbyArgs, 'args'>>;
  initiatives_nearby_aggregate?: SubscriptionResolver<ResolversTypes['initiatives_aggregate'], "initiatives_nearby_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_Nearby_AggregateArgs, 'args'>>;
  initiatives_view?: SubscriptionResolver<Array<ResolversTypes['initiatives_view']>, "initiatives_view", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_ViewArgs, never>>;
  initiatives_view_aggregate?: SubscriptionResolver<ResolversTypes['initiatives_view_aggregate'], "initiatives_view_aggregate", ParentType, ContextType, RequireFields<Subscription_RootInitiatives_View_AggregateArgs, never>>;
  map_entries?: SubscriptionResolver<Array<ResolversTypes['map_entries']>, "map_entries", ParentType, ContextType, RequireFields<Subscription_RootMap_EntriesArgs, never>>;
  map_entries_aggregate?: SubscriptionResolver<ResolversTypes['map_entries_aggregate'], "map_entries_aggregate", ParentType, ContextType, RequireFields<Subscription_RootMap_Entries_AggregateArgs, never>>;
  org_members?: SubscriptionResolver<Array<ResolversTypes['org_members']>, "org_members", ParentType, ContextType, RequireFields<Subscription_RootOrg_MembersArgs, never>>;
  org_members_aggregate?: SubscriptionResolver<ResolversTypes['org_members_aggregate'], "org_members_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrg_Members_AggregateArgs, never>>;
  org_members_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['org_members']>, "org_members_by_pk", ParentType, ContextType, RequireFields<Subscription_RootOrg_Members_By_PkArgs, 'id'>>;
  org_projects?: SubscriptionResolver<Array<ResolversTypes['org_projects']>, "org_projects", ParentType, ContextType, RequireFields<Subscription_RootOrg_ProjectsArgs, never>>;
  org_projects_aggregate?: SubscriptionResolver<ResolversTypes['org_projects_aggregate'], "org_projects_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrg_Projects_AggregateArgs, never>>;
  org_projects_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['org_projects']>, "org_projects_by_pk", ParentType, ContextType, RequireFields<Subscription_RootOrg_Projects_By_PkArgs, 'id'>>;
  org_tags?: SubscriptionResolver<Array<ResolversTypes['org_tags']>, "org_tags", ParentType, ContextType, RequireFields<Subscription_RootOrg_TagsArgs, never>>;
  org_tags_aggregate?: SubscriptionResolver<ResolversTypes['org_tags_aggregate'], "org_tags_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrg_Tags_AggregateArgs, never>>;
  org_tags_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['org_tags']>, "org_tags_by_pk", ParentType, ContextType, RequireFields<Subscription_RootOrg_Tags_By_PkArgs, 'id'>>;
  org_visits?: SubscriptionResolver<Array<ResolversTypes['org_visits']>, "org_visits", ParentType, ContextType, RequireFields<Subscription_RootOrg_VisitsArgs, never>>;
  org_visits_aggregate?: SubscriptionResolver<ResolversTypes['org_visits_aggregate'], "org_visits_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrg_Visits_AggregateArgs, never>>;
  orgs?: SubscriptionResolver<Array<ResolversTypes['orgs']>, "orgs", ParentType, ContextType, RequireFields<Subscription_RootOrgsArgs, never>>;
  orgs_aggregate?: SubscriptionResolver<ResolversTypes['orgs_aggregate'], "orgs_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrgs_AggregateArgs, never>>;
  orgs_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['orgs']>, "orgs_by_pk", ParentType, ContextType, RequireFields<Subscription_RootOrgs_By_PkArgs, 'id'>>;
  orgs_nearby?: SubscriptionResolver<Array<ResolversTypes['orgs']>, "orgs_nearby", ParentType, ContextType, RequireFields<Subscription_RootOrgs_NearbyArgs, 'args'>>;
  orgs_nearby_aggregate?: SubscriptionResolver<ResolversTypes['orgs_aggregate'], "orgs_nearby_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrgs_Nearby_AggregateArgs, 'args'>>;
  orgs_view?: SubscriptionResolver<Array<ResolversTypes['orgs_view']>, "orgs_view", ParentType, ContextType, RequireFields<Subscription_RootOrgs_ViewArgs, never>>;
  orgs_view_aggregate?: SubscriptionResolver<ResolversTypes['orgs_view_aggregate'], "orgs_view_aggregate", ParentType, ContextType, RequireFields<Subscription_RootOrgs_View_AggregateArgs, never>>;
  post_types?: SubscriptionResolver<Array<ResolversTypes['post_types']>, "post_types", ParentType, ContextType, RequireFields<Subscription_RootPost_TypesArgs, never>>;
  post_types_aggregate?: SubscriptionResolver<ResolversTypes['post_types_aggregate'], "post_types_aggregate", ParentType, ContextType, RequireFields<Subscription_RootPost_Types_AggregateArgs, never>>;
  post_types_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['post_types']>, "post_types_by_pk", ParentType, ContextType, RequireFields<Subscription_RootPost_Types_By_PkArgs, 'type'>>;
  reactions?: SubscriptionResolver<Array<ResolversTypes['reactions']>, "reactions", ParentType, ContextType, RequireFields<Subscription_RootReactionsArgs, never>>;
  reactions_aggregate?: SubscriptionResolver<ResolversTypes['reactions_aggregate'], "reactions_aggregate", ParentType, ContextType, RequireFields<Subscription_RootReactions_AggregateArgs, never>>;
  reactions_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['reactions']>, "reactions_by_pk", ParentType, ContextType, RequireFields<Subscription_RootReactions_By_PkArgs, 'type'>>;
  spatial_ref_sys?: SubscriptionResolver<Array<ResolversTypes['spatial_ref_sys']>, "spatial_ref_sys", ParentType, ContextType, RequireFields<Subscription_RootSpatial_Ref_SysArgs, never>>;
  spatial_ref_sys_aggregate?: SubscriptionResolver<ResolversTypes['spatial_ref_sys_aggregate'], "spatial_ref_sys_aggregate", ParentType, ContextType, RequireFields<Subscription_RootSpatial_Ref_Sys_AggregateArgs, never>>;
  spatial_ref_sys_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['spatial_ref_sys']>, "spatial_ref_sys_by_pk", ParentType, ContextType, RequireFields<Subscription_RootSpatial_Ref_Sys_By_PkArgs, 'srid'>>;
  tags?: SubscriptionResolver<Array<ResolversTypes['tags']>, "tags", ParentType, ContextType, RequireFields<Subscription_RootTagsArgs, never>>;
  tags_aggregate?: SubscriptionResolver<ResolversTypes['tags_aggregate'], "tags_aggregate", ParentType, ContextType, RequireFields<Subscription_RootTags_AggregateArgs, never>>;
  tags_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['tags']>, "tags_by_pk", ParentType, ContextType, RequireFields<Subscription_RootTags_By_PkArgs, 'tag'>>;
  task_statuses?: SubscriptionResolver<Array<ResolversTypes['task_statuses']>, "task_statuses", ParentType, ContextType, RequireFields<Subscription_RootTask_StatusesArgs, never>>;
  task_statuses_aggregate?: SubscriptionResolver<ResolversTypes['task_statuses_aggregate'], "task_statuses_aggregate", ParentType, ContextType, RequireFields<Subscription_RootTask_Statuses_AggregateArgs, never>>;
  task_statuses_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['task_statuses']>, "task_statuses_by_pk", ParentType, ContextType, RequireFields<Subscription_RootTask_Statuses_By_PkArgs, 'status'>>;
  tenders?: SubscriptionResolver<Array<ResolversTypes['tenders']>, "tenders", ParentType, ContextType, RequireFields<Subscription_RootTendersArgs, never>>;
  tenders_aggregate?: SubscriptionResolver<ResolversTypes['tenders_aggregate'], "tenders_aggregate", ParentType, ContextType, RequireFields<Subscription_RootTenders_AggregateArgs, never>>;
  tenders_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['tenders']>, "tenders_by_pk", ParentType, ContextType, RequireFields<Subscription_RootTenders_By_PkArgs, 'id'>>;
  user_settings?: SubscriptionResolver<Array<ResolversTypes['user_settings']>, "user_settings", ParentType, ContextType, RequireFields<Subscription_RootUser_SettingsArgs, never>>;
  user_settings_aggregate?: SubscriptionResolver<ResolversTypes['user_settings_aggregate'], "user_settings_aggregate", ParentType, ContextType, RequireFields<Subscription_RootUser_Settings_AggregateArgs, never>>;
  user_settings_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['user_settings']>, "user_settings_by_pk", ParentType, ContextType, RequireFields<Subscription_RootUser_Settings_By_PkArgs, 'user_id'>>;
  user_subscriptions?: SubscriptionResolver<Array<ResolversTypes['user_subscriptions']>, "user_subscriptions", ParentType, ContextType, RequireFields<Subscription_RootUser_SubscriptionsArgs, never>>;
  user_subscriptions_aggregate?: SubscriptionResolver<ResolversTypes['user_subscriptions_aggregate'], "user_subscriptions_aggregate", ParentType, ContextType, RequireFields<Subscription_RootUser_Subscriptions_AggregateArgs, never>>;
  user_subscriptions_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['user_subscriptions']>, "user_subscriptions_by_pk", ParentType, ContextType, RequireFields<Subscription_RootUser_Subscriptions_By_PkArgs, 'id'>>;
  users?: SubscriptionResolver<Array<ResolversTypes['users']>, "users", ParentType, ContextType, RequireFields<Subscription_RootUsersArgs, never>>;
  users_aggregate?: SubscriptionResolver<ResolversTypes['users_aggregate'], "users_aggregate", ParentType, ContextType, RequireFields<Subscription_RootUsers_AggregateArgs, never>>;
  users_by_pk?: SubscriptionResolver<Maybe<ResolversTypes['users']>, "users_by_pk", ParentType, ContextType, RequireFields<Subscription_RootUsers_By_PkArgs, 'id'>>;
};

export type TagsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags'] = ResolversParentTypes['tags']> = {
  initiative_tags?: Resolver<Array<ResolversTypes['initiative_tags']>, ParentType, ContextType, RequireFields<TagsInitiative_TagsArgs, never>>;
  initiative_tags_aggregate?: Resolver<ResolversTypes['initiative_tags_aggregate'], ParentType, ContextType, RequireFields<TagsInitiative_Tags_AggregateArgs, never>>;
  org_tags?: Resolver<Array<ResolversTypes['org_tags']>, ParentType, ContextType, RequireFields<TagsOrg_TagsArgs, never>>;
  org_tags_aggregate?: Resolver<ResolversTypes['org_tags_aggregate'], ParentType, ContextType, RequireFields<TagsOrg_Tags_AggregateArgs, never>>;
  tag?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags_aggregate'] = ResolversParentTypes['tags_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['tags_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags_aggregate_fields'] = ResolversParentTypes['tags_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Tags_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['tags_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['tags_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags_max_fields'] = ResolversParentTypes['tags_max_fields']> = {
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags_min_fields'] = ResolversParentTypes['tags_min_fields']> = {
  tag?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tags_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['tags_mutation_response'] = ResolversParentTypes['tags_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['tags']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_StatusesResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses'] = ResolversParentTypes['task_statuses']> = {
  status?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_Statuses_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses_aggregate'] = ResolversParentTypes['task_statuses_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['task_statuses_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['task_statuses']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_Statuses_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses_aggregate_fields'] = ResolversParentTypes['task_statuses_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Task_Statuses_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['task_statuses_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['task_statuses_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_Statuses_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses_max_fields'] = ResolversParentTypes['task_statuses_max_fields']> = {
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_Statuses_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses_min_fields'] = ResolversParentTypes['task_statuses_min_fields']> = {
  status?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Task_Statuses_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['task_statuses_mutation_response'] = ResolversParentTypes['task_statuses_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['task_statuses']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type TendersResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders'] = ResolversParentTypes['tenders']> = {
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  id?: Resolver<ResolversTypes['bigint'], ParentType, ContextType>;
  initiative?: Resolver<ResolversTypes['initiatives'], ParentType, ContextType>;
  initiative_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  org?: Resolver<Maybe<ResolversTypes['orgs']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_project?: Resolver<ResolversTypes['org_projects'], ParentType, ContextType>;
  parent_project?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<TendersProjectsArgs, never>>;
  projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<TendersProjects_AggregateArgs, never>>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_aggregate'] = ResolversParentTypes['tenders_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['tenders_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_aggregate_fields'] = ResolversParentTypes['tenders_aggregate_fields']> = {
  avg?: Resolver<Maybe<ResolversTypes['tenders_avg_fields']>, ParentType, ContextType>;
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Tenders_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['tenders_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['tenders_min_fields']>, ParentType, ContextType>;
  stddev?: Resolver<Maybe<ResolversTypes['tenders_stddev_fields']>, ParentType, ContextType>;
  stddev_pop?: Resolver<Maybe<ResolversTypes['tenders_stddev_pop_fields']>, ParentType, ContextType>;
  stddev_samp?: Resolver<Maybe<ResolversTypes['tenders_stddev_samp_fields']>, ParentType, ContextType>;
  sum?: Resolver<Maybe<ResolversTypes['tenders_sum_fields']>, ParentType, ContextType>;
  var_pop?: Resolver<Maybe<ResolversTypes['tenders_var_pop_fields']>, ParentType, ContextType>;
  var_samp?: Resolver<Maybe<ResolversTypes['tenders_var_samp_fields']>, ParentType, ContextType>;
  variance?: Resolver<Maybe<ResolversTypes['tenders_variance_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Avg_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_avg_fields'] = ResolversParentTypes['tenders_avg_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_max_fields'] = ResolversParentTypes['tenders_max_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_min_fields'] = ResolversParentTypes['tenders_min_fields']> = {
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  initiative_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  org_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_mutation_response'] = ResolversParentTypes['tenders_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Stddev_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_stddev_fields'] = ResolversParentTypes['tenders_stddev_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Stddev_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_stddev_pop_fields'] = ResolversParentTypes['tenders_stddev_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Stddev_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_stddev_samp_fields'] = ResolversParentTypes['tenders_stddev_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Sum_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_sum_fields'] = ResolversParentTypes['tenders_sum_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['bigint']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Int']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Var_Pop_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_var_pop_fields'] = ResolversParentTypes['tenders_var_pop_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Var_Samp_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_var_samp_fields'] = ResolversParentTypes['tenders_var_samp_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Tenders_Variance_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['tenders_variance_fields'] = ResolversParentTypes['tenders_variance_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  parent_project?: Resolver<Maybe<ResolversTypes['Float']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface TimestampScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['timestamp'], any> {
  name: 'timestamp';
}

export interface TimestamptzScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['timestamptz'], any> {
  name: 'timestamptz';
}

export type User_SettingsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings'] = ResolversParentTypes['user_settings']> = {
  email_notifications?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  push_notifications?: Resolver<Maybe<ResolversTypes['Boolean']>, ParentType, ContextType>;
  user?: Resolver<ResolversTypes['users'], ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Settings_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings_aggregate'] = ResolversParentTypes['user_settings_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['user_settings_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['user_settings']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Settings_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings_aggregate_fields'] = ResolversParentTypes['user_settings_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<User_Settings_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['user_settings_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['user_settings_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Settings_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings_max_fields'] = ResolversParentTypes['user_settings_max_fields']> = {
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Settings_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings_min_fields'] = ResolversParentTypes['user_settings_min_fields']> = {
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Settings_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_settings_mutation_response'] = ResolversParentTypes['user_settings_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['user_settings']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_SubscriptionsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions'] = ResolversParentTypes['user_subscriptions']> = {
  id?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  platform?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  service?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subscription?: Resolver<ResolversTypes['String'], ParentType, ContextType>;
  user?: Resolver<Maybe<ResolversTypes['users']>, ParentType, ContextType>;
  user_id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Subscriptions_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions_aggregate'] = ResolversParentTypes['user_subscriptions_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['user_subscriptions_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['user_subscriptions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Subscriptions_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions_aggregate_fields'] = ResolversParentTypes['user_subscriptions_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<User_Subscriptions_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['user_subscriptions_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['user_subscriptions_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Subscriptions_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions_max_fields'] = ResolversParentTypes['user_subscriptions_max_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  platform?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  service?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subscription?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Subscriptions_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions_min_fields'] = ResolversParentTypes['user_subscriptions_min_fields']> = {
  id?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  platform?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  service?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  subscription?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  user_id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type User_Subscriptions_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['user_subscriptions_mutation_response'] = ResolversParentTypes['user_subscriptions_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['user_subscriptions']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type UsersResolvers<ContextType = any, ParentType extends ResolversParentTypes['users'] = ResolversParentTypes['users']> = {
  account?: Resolver<Maybe<ResolversTypes['auth_accounts']>, ParentType, ContextType>;
  avatar_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  comment_reactions?: Resolver<Array<ResolversTypes['initiative_comment_reactions']>, ParentType, ContextType, RequireFields<UsersComment_ReactionsArgs, never>>;
  comment_reactions_aggregate?: Resolver<ResolversTypes['initiative_comment_reactions_aggregate'], ParentType, ContextType, RequireFields<UsersComment_Reactions_AggregateArgs, never>>;
  comments?: Resolver<Array<ResolversTypes['initiative_comments']>, ParentType, ContextType, RequireFields<UsersCommentsArgs, never>>;
  comments_aggregate?: Resolver<ResolversTypes['initiative_comments_aggregate'], ParentType, ContextType, RequireFields<UsersComments_AggregateArgs, never>>;
  created_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  display_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  donations?: Resolver<Array<ResolversTypes['initiative_donations']>, ParentType, ContextType, RequireFields<UsersDonationsArgs, never>>;
  donations_aggregate?: Resolver<ResolversTypes['initiative_donations_aggregate'], ParentType, ContextType, RequireFields<UsersDonations_AggregateArgs, never>>;
  edits?: Resolver<Array<ResolversTypes['initiative_edits']>, ParentType, ContextType, RequireFields<UsersEditsArgs, never>>;
  edits_aggregate?: Resolver<ResolversTypes['initiative_edits_aggregate'], ParentType, ContextType, RequireFields<UsersEdits_AggregateArgs, never>>;
  expenses?: Resolver<Array<ResolversTypes['initiative_expenses']>, ParentType, ContextType, RequireFields<UsersExpensesArgs, never>>;
  expenses_aggregate?: Resolver<ResolversTypes['initiative_expenses_aggregate'], ParentType, ContextType, RequireFields<UsersExpenses_AggregateArgs, never>>;
  files?: Resolver<Array<ResolversTypes['files']>, ParentType, ContextType, RequireFields<UsersFilesArgs, never>>;
  files_aggregate?: Resolver<ResolversTypes['files_aggregate'], ParentType, ContextType, RequireFields<UsersFiles_AggregateArgs, never>>;
  id?: Resolver<ResolversTypes['uuid'], ParentType, ContextType>;
  initiative_infos?: Resolver<Array<ResolversTypes['initiative_info']>, ParentType, ContextType, RequireFields<UsersInitiative_InfosArgs, never>>;
  initiative_infos_aggregate?: Resolver<ResolversTypes['initiative_info_aggregate'], ParentType, ContextType, RequireFields<UsersInitiative_Infos_AggregateArgs, never>>;
  initiative_members?: Resolver<Array<ResolversTypes['initiative_members']>, ParentType, ContextType, RequireFields<UsersInitiative_MembersArgs, never>>;
  initiative_members_aggregate?: Resolver<ResolversTypes['initiative_members_aggregate'], ParentType, ContextType, RequireFields<UsersInitiative_Members_AggregateArgs, never>>;
  initiative_visits?: Resolver<Array<ResolversTypes['initiative_visits']>, ParentType, ContextType, RequireFields<UsersInitiative_VisitsArgs, never>>;
  initiative_visits_aggregate?: Resolver<ResolversTypes['initiative_visits_aggregate'], ParentType, ContextType, RequireFields<UsersInitiative_Visits_AggregateArgs, never>>;
  initiative_volunteers?: Resolver<Array<ResolversTypes['initiative_volunteers']>, ParentType, ContextType, RequireFields<UsersInitiative_VolunteersArgs, never>>;
  initiative_volunteers_aggregate?: Resolver<ResolversTypes['initiative_volunteers_aggregate'], ParentType, ContextType, RequireFields<UsersInitiative_Volunteers_AggregateArgs, never>>;
  org_members?: Resolver<Array<ResolversTypes['org_members']>, ParentType, ContextType, RequireFields<UsersOrg_MembersArgs, never>>;
  org_members_aggregate?: Resolver<ResolversTypes['org_members_aggregate'], ParentType, ContextType, RequireFields<UsersOrg_Members_AggregateArgs, never>>;
  org_projects?: Resolver<Array<ResolversTypes['org_projects']>, ParentType, ContextType, RequireFields<UsersOrg_ProjectsArgs, never>>;
  org_projects_aggregate?: Resolver<ResolversTypes['org_projects_aggregate'], ParentType, ContextType, RequireFields<UsersOrg_Projects_AggregateArgs, never>>;
  post_reactions?: Resolver<Array<ResolversTypes['initiative_post_reactions']>, ParentType, ContextType, RequireFields<UsersPost_ReactionsArgs, never>>;
  post_reactions_aggregate?: Resolver<ResolversTypes['initiative_post_reactions_aggregate'], ParentType, ContextType, RequireFields<UsersPost_Reactions_AggregateArgs, never>>;
  posts?: Resolver<Array<ResolversTypes['initiative_posts']>, ParentType, ContextType, RequireFields<UsersPostsArgs, never>>;
  posts_aggregate?: Resolver<ResolversTypes['initiative_posts_aggregate'], ParentType, ContextType, RequireFields<UsersPosts_AggregateArgs, never>>;
  projects?: Resolver<Array<ResolversTypes['initiative_projects']>, ParentType, ContextType, RequireFields<UsersProjectsArgs, never>>;
  projects_aggregate?: Resolver<ResolversTypes['initiative_projects_aggregate'], ParentType, ContextType, RequireFields<UsersProjects_AggregateArgs, never>>;
  settings?: Resolver<Maybe<ResolversTypes['user_settings']>, ParentType, ContextType>;
  subscriptions?: Resolver<Array<ResolversTypes['user_subscriptions']>, ParentType, ContextType, RequireFields<UsersSubscriptionsArgs, never>>;
  subscriptions_aggregate?: Resolver<ResolversTypes['user_subscriptions_aggregate'], ParentType, ContextType, RequireFields<UsersSubscriptions_AggregateArgs, never>>;
  tasks?: Resolver<Array<ResolversTypes['initiative_tasks']>, ParentType, ContextType, RequireFields<UsersTasksArgs, never>>;
  tasks_aggregate?: Resolver<ResolversTypes['initiative_tasks_aggregate'], ParentType, ContextType, RequireFields<UsersTasks_AggregateArgs, never>>;
  tenders?: Resolver<Array<ResolversTypes['tenders']>, ParentType, ContextType, RequireFields<UsersTendersArgs, never>>;
  tenders_aggregate?: Resolver<ResolversTypes['tenders_aggregate'], ParentType, ContextType, RequireFields<UsersTenders_AggregateArgs, never>>;
  updated_at?: Resolver<ResolversTypes['timestamptz'], ParentType, ContextType>;
  votes?: Resolver<Array<ResolversTypes['initiative_poll_votes']>, ParentType, ContextType, RequireFields<UsersVotesArgs, never>>;
  votes_aggregate?: Resolver<ResolversTypes['initiative_poll_votes_aggregate'], ParentType, ContextType, RequireFields<UsersVotes_AggregateArgs, never>>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_AggregateResolvers<ContextType = any, ParentType extends ResolversParentTypes['users_aggregate'] = ResolversParentTypes['users_aggregate']> = {
  aggregate?: Resolver<Maybe<ResolversTypes['users_aggregate_fields']>, ParentType, ContextType>;
  nodes?: Resolver<Array<ResolversTypes['users']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_Aggregate_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['users_aggregate_fields'] = ResolversParentTypes['users_aggregate_fields']> = {
  count?: Resolver<ResolversTypes['Int'], ParentType, ContextType, RequireFields<Users_Aggregate_FieldsCountArgs, never>>;
  max?: Resolver<Maybe<ResolversTypes['users_max_fields']>, ParentType, ContextType>;
  min?: Resolver<Maybe<ResolversTypes['users_min_fields']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_Max_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['users_max_fields'] = ResolversParentTypes['users_max_fields']> = {
  avatar_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  display_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_Min_FieldsResolvers<ContextType = any, ParentType extends ResolversParentTypes['users_min_fields'] = ResolversParentTypes['users_min_fields']> = {
  avatar_url?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  created_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  display_name?: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;
  id?: Resolver<Maybe<ResolversTypes['uuid']>, ParentType, ContextType>;
  updated_at?: Resolver<Maybe<ResolversTypes['timestamptz']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export type Users_Mutation_ResponseResolvers<ContextType = any, ParentType extends ResolversParentTypes['users_mutation_response'] = ResolversParentTypes['users_mutation_response']> = {
  affected_rows?: Resolver<ResolversTypes['Int'], ParentType, ContextType>;
  returning?: Resolver<Array<ResolversTypes['users']>, ParentType, ContextType>;
  __isTypeOf?: IsTypeOfResolverFn<ParentType, ContextType>;
};

export interface UuidScalarConfig extends GraphQLScalarTypeConfig<ResolversTypes['uuid'], any> {
  name: 'uuid';
}

export type Resolvers<ContextType = any> = {
  auth_account_providers?: Auth_Account_ProvidersResolvers<ContextType>;
  auth_account_providers_aggregate?: Auth_Account_Providers_AggregateResolvers<ContextType>;
  auth_account_providers_aggregate_fields?: Auth_Account_Providers_Aggregate_FieldsResolvers<ContextType>;
  auth_account_providers_max_fields?: Auth_Account_Providers_Max_FieldsResolvers<ContextType>;
  auth_account_providers_min_fields?: Auth_Account_Providers_Min_FieldsResolvers<ContextType>;
  auth_account_providers_mutation_response?: Auth_Account_Providers_Mutation_ResponseResolvers<ContextType>;
  auth_account_roles?: Auth_Account_RolesResolvers<ContextType>;
  auth_account_roles_aggregate?: Auth_Account_Roles_AggregateResolvers<ContextType>;
  auth_account_roles_aggregate_fields?: Auth_Account_Roles_Aggregate_FieldsResolvers<ContextType>;
  auth_account_roles_max_fields?: Auth_Account_Roles_Max_FieldsResolvers<ContextType>;
  auth_account_roles_min_fields?: Auth_Account_Roles_Min_FieldsResolvers<ContextType>;
  auth_account_roles_mutation_response?: Auth_Account_Roles_Mutation_ResponseResolvers<ContextType>;
  auth_accounts?: Auth_AccountsResolvers<ContextType>;
  auth_accounts_aggregate?: Auth_Accounts_AggregateResolvers<ContextType>;
  auth_accounts_aggregate_fields?: Auth_Accounts_Aggregate_FieldsResolvers<ContextType>;
  auth_accounts_max_fields?: Auth_Accounts_Max_FieldsResolvers<ContextType>;
  auth_accounts_min_fields?: Auth_Accounts_Min_FieldsResolvers<ContextType>;
  auth_accounts_mutation_response?: Auth_Accounts_Mutation_ResponseResolvers<ContextType>;
  auth_migrations?: Auth_MigrationsResolvers<ContextType>;
  auth_migrations_aggregate?: Auth_Migrations_AggregateResolvers<ContextType>;
  auth_migrations_aggregate_fields?: Auth_Migrations_Aggregate_FieldsResolvers<ContextType>;
  auth_migrations_avg_fields?: Auth_Migrations_Avg_FieldsResolvers<ContextType>;
  auth_migrations_max_fields?: Auth_Migrations_Max_FieldsResolvers<ContextType>;
  auth_migrations_min_fields?: Auth_Migrations_Min_FieldsResolvers<ContextType>;
  auth_migrations_mutation_response?: Auth_Migrations_Mutation_ResponseResolvers<ContextType>;
  auth_migrations_stddev_fields?: Auth_Migrations_Stddev_FieldsResolvers<ContextType>;
  auth_migrations_stddev_pop_fields?: Auth_Migrations_Stddev_Pop_FieldsResolvers<ContextType>;
  auth_migrations_stddev_samp_fields?: Auth_Migrations_Stddev_Samp_FieldsResolvers<ContextType>;
  auth_migrations_sum_fields?: Auth_Migrations_Sum_FieldsResolvers<ContextType>;
  auth_migrations_var_pop_fields?: Auth_Migrations_Var_Pop_FieldsResolvers<ContextType>;
  auth_migrations_var_samp_fields?: Auth_Migrations_Var_Samp_FieldsResolvers<ContextType>;
  auth_migrations_variance_fields?: Auth_Migrations_Variance_FieldsResolvers<ContextType>;
  auth_providers?: Auth_ProvidersResolvers<ContextType>;
  auth_providers_aggregate?: Auth_Providers_AggregateResolvers<ContextType>;
  auth_providers_aggregate_fields?: Auth_Providers_Aggregate_FieldsResolvers<ContextType>;
  auth_providers_max_fields?: Auth_Providers_Max_FieldsResolvers<ContextType>;
  auth_providers_min_fields?: Auth_Providers_Min_FieldsResolvers<ContextType>;
  auth_providers_mutation_response?: Auth_Providers_Mutation_ResponseResolvers<ContextType>;
  auth_refresh_tokens?: Auth_Refresh_TokensResolvers<ContextType>;
  auth_refresh_tokens_aggregate?: Auth_Refresh_Tokens_AggregateResolvers<ContextType>;
  auth_refresh_tokens_aggregate_fields?: Auth_Refresh_Tokens_Aggregate_FieldsResolvers<ContextType>;
  auth_refresh_tokens_max_fields?: Auth_Refresh_Tokens_Max_FieldsResolvers<ContextType>;
  auth_refresh_tokens_min_fields?: Auth_Refresh_Tokens_Min_FieldsResolvers<ContextType>;
  auth_refresh_tokens_mutation_response?: Auth_Refresh_Tokens_Mutation_ResponseResolvers<ContextType>;
  auth_roles?: Auth_RolesResolvers<ContextType>;
  auth_roles_aggregate?: Auth_Roles_AggregateResolvers<ContextType>;
  auth_roles_aggregate_fields?: Auth_Roles_Aggregate_FieldsResolvers<ContextType>;
  auth_roles_max_fields?: Auth_Roles_Max_FieldsResolvers<ContextType>;
  auth_roles_min_fields?: Auth_Roles_Min_FieldsResolvers<ContextType>;
  auth_roles_mutation_response?: Auth_Roles_Mutation_ResponseResolvers<ContextType>;
  bigint?: GraphQLScalarType;
  citext?: GraphQLScalarType;
  entries?: EntriesResolvers<ContextType>;
  entries_aggregate?: Entries_AggregateResolvers<ContextType>;
  entries_aggregate_fields?: Entries_Aggregate_FieldsResolvers<ContextType>;
  entries_avg_fields?: Entries_Avg_FieldsResolvers<ContextType>;
  entries_max_fields?: Entries_Max_FieldsResolvers<ContextType>;
  entries_min_fields?: Entries_Min_FieldsResolvers<ContextType>;
  entries_stddev_fields?: Entries_Stddev_FieldsResolvers<ContextType>;
  entries_stddev_pop_fields?: Entries_Stddev_Pop_FieldsResolvers<ContextType>;
  entries_stddev_samp_fields?: Entries_Stddev_Samp_FieldsResolvers<ContextType>;
  entries_sum_fields?: Entries_Sum_FieldsResolvers<ContextType>;
  entries_var_pop_fields?: Entries_Var_Pop_FieldsResolvers<ContextType>;
  entries_var_samp_fields?: Entries_Var_Samp_FieldsResolvers<ContextType>;
  entries_variance_fields?: Entries_Variance_FieldsResolvers<ContextType>;
  entry_members?: Entry_MembersResolvers<ContextType>;
  entry_members_aggregate?: Entry_Members_AggregateResolvers<ContextType>;
  entry_members_aggregate_fields?: Entry_Members_Aggregate_FieldsResolvers<ContextType>;
  entry_members_avg_fields?: Entry_Members_Avg_FieldsResolvers<ContextType>;
  entry_members_max_fields?: Entry_Members_Max_FieldsResolvers<ContextType>;
  entry_members_min_fields?: Entry_Members_Min_FieldsResolvers<ContextType>;
  entry_members_stddev_fields?: Entry_Members_Stddev_FieldsResolvers<ContextType>;
  entry_members_stddev_pop_fields?: Entry_Members_Stddev_Pop_FieldsResolvers<ContextType>;
  entry_members_stddev_samp_fields?: Entry_Members_Stddev_Samp_FieldsResolvers<ContextType>;
  entry_members_sum_fields?: Entry_Members_Sum_FieldsResolvers<ContextType>;
  entry_members_var_pop_fields?: Entry_Members_Var_Pop_FieldsResolvers<ContextType>;
  entry_members_var_samp_fields?: Entry_Members_Var_Samp_FieldsResolvers<ContextType>;
  entry_members_variance_fields?: Entry_Members_Variance_FieldsResolvers<ContextType>;
  entry_visits?: Entry_VisitsResolvers<ContextType>;
  entry_visits_aggregate?: Entry_Visits_AggregateResolvers<ContextType>;
  entry_visits_aggregate_fields?: Entry_Visits_Aggregate_FieldsResolvers<ContextType>;
  entry_visits_avg_fields?: Entry_Visits_Avg_FieldsResolvers<ContextType>;
  entry_visits_max_fields?: Entry_Visits_Max_FieldsResolvers<ContextType>;
  entry_visits_min_fields?: Entry_Visits_Min_FieldsResolvers<ContextType>;
  entry_visits_stddev_fields?: Entry_Visits_Stddev_FieldsResolvers<ContextType>;
  entry_visits_stddev_pop_fields?: Entry_Visits_Stddev_Pop_FieldsResolvers<ContextType>;
  entry_visits_stddev_samp_fields?: Entry_Visits_Stddev_Samp_FieldsResolvers<ContextType>;
  entry_visits_sum_fields?: Entry_Visits_Sum_FieldsResolvers<ContextType>;
  entry_visits_var_pop_fields?: Entry_Visits_Var_Pop_FieldsResolvers<ContextType>;
  entry_visits_var_samp_fields?: Entry_Visits_Var_Samp_FieldsResolvers<ContextType>;
  entry_visits_variance_fields?: Entry_Visits_Variance_FieldsResolvers<ContextType>;
  file_types?: File_TypesResolvers<ContextType>;
  file_types_aggregate?: File_Types_AggregateResolvers<ContextType>;
  file_types_aggregate_fields?: File_Types_Aggregate_FieldsResolvers<ContextType>;
  file_types_max_fields?: File_Types_Max_FieldsResolvers<ContextType>;
  file_types_min_fields?: File_Types_Min_FieldsResolvers<ContextType>;
  file_types_mutation_response?: File_Types_Mutation_ResponseResolvers<ContextType>;
  files?: FilesResolvers<ContextType>;
  files_aggregate?: Files_AggregateResolvers<ContextType>;
  files_aggregate_fields?: Files_Aggregate_FieldsResolvers<ContextType>;
  files_avg_fields?: Files_Avg_FieldsResolvers<ContextType>;
  files_max_fields?: Files_Max_FieldsResolvers<ContextType>;
  files_min_fields?: Files_Min_FieldsResolvers<ContextType>;
  files_mutation_response?: Files_Mutation_ResponseResolvers<ContextType>;
  files_stddev_fields?: Files_Stddev_FieldsResolvers<ContextType>;
  files_stddev_pop_fields?: Files_Stddev_Pop_FieldsResolvers<ContextType>;
  files_stddev_samp_fields?: Files_Stddev_Samp_FieldsResolvers<ContextType>;
  files_sum_fields?: Files_Sum_FieldsResolvers<ContextType>;
  files_var_pop_fields?: Files_Var_Pop_FieldsResolvers<ContextType>;
  files_var_samp_fields?: Files_Var_Samp_FieldsResolvers<ContextType>;
  files_variance_fields?: Files_Variance_FieldsResolvers<ContextType>;
  float8?: GraphQLScalarType;
  geography?: GraphQLScalarType;
  geography_columns?: Geography_ColumnsResolvers<ContextType>;
  geography_columns_aggregate?: Geography_Columns_AggregateResolvers<ContextType>;
  geography_columns_aggregate_fields?: Geography_Columns_Aggregate_FieldsResolvers<ContextType>;
  geography_columns_avg_fields?: Geography_Columns_Avg_FieldsResolvers<ContextType>;
  geography_columns_max_fields?: Geography_Columns_Max_FieldsResolvers<ContextType>;
  geography_columns_min_fields?: Geography_Columns_Min_FieldsResolvers<ContextType>;
  geography_columns_stddev_fields?: Geography_Columns_Stddev_FieldsResolvers<ContextType>;
  geography_columns_stddev_pop_fields?: Geography_Columns_Stddev_Pop_FieldsResolvers<ContextType>;
  geography_columns_stddev_samp_fields?: Geography_Columns_Stddev_Samp_FieldsResolvers<ContextType>;
  geography_columns_sum_fields?: Geography_Columns_Sum_FieldsResolvers<ContextType>;
  geography_columns_var_pop_fields?: Geography_Columns_Var_Pop_FieldsResolvers<ContextType>;
  geography_columns_var_samp_fields?: Geography_Columns_Var_Samp_FieldsResolvers<ContextType>;
  geography_columns_variance_fields?: Geography_Columns_Variance_FieldsResolvers<ContextType>;
  geometry?: GraphQLScalarType;
  geometry_columns?: Geometry_ColumnsResolvers<ContextType>;
  geometry_columns_aggregate?: Geometry_Columns_AggregateResolvers<ContextType>;
  geometry_columns_aggregate_fields?: Geometry_Columns_Aggregate_FieldsResolvers<ContextType>;
  geometry_columns_avg_fields?: Geometry_Columns_Avg_FieldsResolvers<ContextType>;
  geometry_columns_max_fields?: Geometry_Columns_Max_FieldsResolvers<ContextType>;
  geometry_columns_min_fields?: Geometry_Columns_Min_FieldsResolvers<ContextType>;
  geometry_columns_mutation_response?: Geometry_Columns_Mutation_ResponseResolvers<ContextType>;
  geometry_columns_stddev_fields?: Geometry_Columns_Stddev_FieldsResolvers<ContextType>;
  geometry_columns_stddev_pop_fields?: Geometry_Columns_Stddev_Pop_FieldsResolvers<ContextType>;
  geometry_columns_stddev_samp_fields?: Geometry_Columns_Stddev_Samp_FieldsResolvers<ContextType>;
  geometry_columns_sum_fields?: Geometry_Columns_Sum_FieldsResolvers<ContextType>;
  geometry_columns_var_pop_fields?: Geometry_Columns_Var_Pop_FieldsResolvers<ContextType>;
  geometry_columns_var_samp_fields?: Geometry_Columns_Var_Samp_FieldsResolvers<ContextType>;
  geometry_columns_variance_fields?: Geometry_Columns_Variance_FieldsResolvers<ContextType>;
  i18n?: I18nResolvers<ContextType>;
  i18n_aggregate?: I18n_AggregateResolvers<ContextType>;
  i18n_aggregate_fields?: I18n_Aggregate_FieldsResolvers<ContextType>;
  i18n_avg_fields?: I18n_Avg_FieldsResolvers<ContextType>;
  i18n_categories?: I18n_CategoriesResolvers<ContextType>;
  i18n_categories_aggregate?: I18n_Categories_AggregateResolvers<ContextType>;
  i18n_categories_aggregate_fields?: I18n_Categories_Aggregate_FieldsResolvers<ContextType>;
  i18n_categories_max_fields?: I18n_Categories_Max_FieldsResolvers<ContextType>;
  i18n_categories_min_fields?: I18n_Categories_Min_FieldsResolvers<ContextType>;
  i18n_categories_mutation_response?: I18n_Categories_Mutation_ResponseResolvers<ContextType>;
  i18n_max_fields?: I18n_Max_FieldsResolvers<ContextType>;
  i18n_min_fields?: I18n_Min_FieldsResolvers<ContextType>;
  i18n_mutation_response?: I18n_Mutation_ResponseResolvers<ContextType>;
  i18n_stddev_fields?: I18n_Stddev_FieldsResolvers<ContextType>;
  i18n_stddev_pop_fields?: I18n_Stddev_Pop_FieldsResolvers<ContextType>;
  i18n_stddev_samp_fields?: I18n_Stddev_Samp_FieldsResolvers<ContextType>;
  i18n_sum_fields?: I18n_Sum_FieldsResolvers<ContextType>;
  i18n_var_pop_fields?: I18n_Var_Pop_FieldsResolvers<ContextType>;
  i18n_var_samp_fields?: I18n_Var_Samp_FieldsResolvers<ContextType>;
  i18n_variance_fields?: I18n_Variance_FieldsResolvers<ContextType>;
  initiative_comment_reactions?: Initiative_Comment_ReactionsResolvers<ContextType>;
  initiative_comment_reactions_aggregate?: Initiative_Comment_Reactions_AggregateResolvers<ContextType>;
  initiative_comment_reactions_aggregate_fields?: Initiative_Comment_Reactions_Aggregate_FieldsResolvers<ContextType>;
  initiative_comment_reactions_avg_fields?: Initiative_Comment_Reactions_Avg_FieldsResolvers<ContextType>;
  initiative_comment_reactions_max_fields?: Initiative_Comment_Reactions_Max_FieldsResolvers<ContextType>;
  initiative_comment_reactions_min_fields?: Initiative_Comment_Reactions_Min_FieldsResolvers<ContextType>;
  initiative_comment_reactions_mutation_response?: Initiative_Comment_Reactions_Mutation_ResponseResolvers<ContextType>;
  initiative_comment_reactions_stddev_fields?: Initiative_Comment_Reactions_Stddev_FieldsResolvers<ContextType>;
  initiative_comment_reactions_stddev_pop_fields?: Initiative_Comment_Reactions_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_comment_reactions_stddev_samp_fields?: Initiative_Comment_Reactions_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_comment_reactions_sum_fields?: Initiative_Comment_Reactions_Sum_FieldsResolvers<ContextType>;
  initiative_comment_reactions_var_pop_fields?: Initiative_Comment_Reactions_Var_Pop_FieldsResolvers<ContextType>;
  initiative_comment_reactions_var_samp_fields?: Initiative_Comment_Reactions_Var_Samp_FieldsResolvers<ContextType>;
  initiative_comment_reactions_variance_fields?: Initiative_Comment_Reactions_Variance_FieldsResolvers<ContextType>;
  initiative_comments?: Initiative_CommentsResolvers<ContextType>;
  initiative_comments_aggregate?: Initiative_Comments_AggregateResolvers<ContextType>;
  initiative_comments_aggregate_fields?: Initiative_Comments_Aggregate_FieldsResolvers<ContextType>;
  initiative_comments_avg_fields?: Initiative_Comments_Avg_FieldsResolvers<ContextType>;
  initiative_comments_max_fields?: Initiative_Comments_Max_FieldsResolvers<ContextType>;
  initiative_comments_min_fields?: Initiative_Comments_Min_FieldsResolvers<ContextType>;
  initiative_comments_mutation_response?: Initiative_Comments_Mutation_ResponseResolvers<ContextType>;
  initiative_comments_stddev_fields?: Initiative_Comments_Stddev_FieldsResolvers<ContextType>;
  initiative_comments_stddev_pop_fields?: Initiative_Comments_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_comments_stddev_samp_fields?: Initiative_Comments_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_comments_sum_fields?: Initiative_Comments_Sum_FieldsResolvers<ContextType>;
  initiative_comments_var_pop_fields?: Initiative_Comments_Var_Pop_FieldsResolvers<ContextType>;
  initiative_comments_var_samp_fields?: Initiative_Comments_Var_Samp_FieldsResolvers<ContextType>;
  initiative_comments_variance_fields?: Initiative_Comments_Variance_FieldsResolvers<ContextType>;
  initiative_donations?: Initiative_DonationsResolvers<ContextType>;
  initiative_donations_aggregate?: Initiative_Donations_AggregateResolvers<ContextType>;
  initiative_donations_aggregate_fields?: Initiative_Donations_Aggregate_FieldsResolvers<ContextType>;
  initiative_donations_avg_fields?: Initiative_Donations_Avg_FieldsResolvers<ContextType>;
  initiative_donations_max_fields?: Initiative_Donations_Max_FieldsResolvers<ContextType>;
  initiative_donations_min_fields?: Initiative_Donations_Min_FieldsResolvers<ContextType>;
  initiative_donations_mutation_response?: Initiative_Donations_Mutation_ResponseResolvers<ContextType>;
  initiative_donations_stddev_fields?: Initiative_Donations_Stddev_FieldsResolvers<ContextType>;
  initiative_donations_stddev_pop_fields?: Initiative_Donations_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_donations_stddev_samp_fields?: Initiative_Donations_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_donations_sum_fields?: Initiative_Donations_Sum_FieldsResolvers<ContextType>;
  initiative_donations_var_pop_fields?: Initiative_Donations_Var_Pop_FieldsResolvers<ContextType>;
  initiative_donations_var_samp_fields?: Initiative_Donations_Var_Samp_FieldsResolvers<ContextType>;
  initiative_donations_variance_fields?: Initiative_Donations_Variance_FieldsResolvers<ContextType>;
  initiative_edits?: Initiative_EditsResolvers<ContextType>;
  initiative_edits_aggregate?: Initiative_Edits_AggregateResolvers<ContextType>;
  initiative_edits_aggregate_fields?: Initiative_Edits_Aggregate_FieldsResolvers<ContextType>;
  initiative_edits_avg_fields?: Initiative_Edits_Avg_FieldsResolvers<ContextType>;
  initiative_edits_max_fields?: Initiative_Edits_Max_FieldsResolvers<ContextType>;
  initiative_edits_min_fields?: Initiative_Edits_Min_FieldsResolvers<ContextType>;
  initiative_edits_mutation_response?: Initiative_Edits_Mutation_ResponseResolvers<ContextType>;
  initiative_edits_stddev_fields?: Initiative_Edits_Stddev_FieldsResolvers<ContextType>;
  initiative_edits_stddev_pop_fields?: Initiative_Edits_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_edits_stddev_samp_fields?: Initiative_Edits_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_edits_sum_fields?: Initiative_Edits_Sum_FieldsResolvers<ContextType>;
  initiative_edits_var_pop_fields?: Initiative_Edits_Var_Pop_FieldsResolvers<ContextType>;
  initiative_edits_var_samp_fields?: Initiative_Edits_Var_Samp_FieldsResolvers<ContextType>;
  initiative_edits_variance_fields?: Initiative_Edits_Variance_FieldsResolvers<ContextType>;
  initiative_expenses?: Initiative_ExpensesResolvers<ContextType>;
  initiative_expenses_aggregate?: Initiative_Expenses_AggregateResolvers<ContextType>;
  initiative_expenses_aggregate_fields?: Initiative_Expenses_Aggregate_FieldsResolvers<ContextType>;
  initiative_expenses_avg_fields?: Initiative_Expenses_Avg_FieldsResolvers<ContextType>;
  initiative_expenses_max_fields?: Initiative_Expenses_Max_FieldsResolvers<ContextType>;
  initiative_expenses_min_fields?: Initiative_Expenses_Min_FieldsResolvers<ContextType>;
  initiative_expenses_mutation_response?: Initiative_Expenses_Mutation_ResponseResolvers<ContextType>;
  initiative_expenses_stddev_fields?: Initiative_Expenses_Stddev_FieldsResolvers<ContextType>;
  initiative_expenses_stddev_pop_fields?: Initiative_Expenses_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_expenses_stddev_samp_fields?: Initiative_Expenses_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_expenses_sum_fields?: Initiative_Expenses_Sum_FieldsResolvers<ContextType>;
  initiative_expenses_var_pop_fields?: Initiative_Expenses_Var_Pop_FieldsResolvers<ContextType>;
  initiative_expenses_var_samp_fields?: Initiative_Expenses_Var_Samp_FieldsResolvers<ContextType>;
  initiative_expenses_variance_fields?: Initiative_Expenses_Variance_FieldsResolvers<ContextType>;
  initiative_info?: Initiative_InfoResolvers<ContextType>;
  initiative_info_aggregate?: Initiative_Info_AggregateResolvers<ContextType>;
  initiative_info_aggregate_fields?: Initiative_Info_Aggregate_FieldsResolvers<ContextType>;
  initiative_info_avg_fields?: Initiative_Info_Avg_FieldsResolvers<ContextType>;
  initiative_info_max_fields?: Initiative_Info_Max_FieldsResolvers<ContextType>;
  initiative_info_min_fields?: Initiative_Info_Min_FieldsResolvers<ContextType>;
  initiative_info_mutation_response?: Initiative_Info_Mutation_ResponseResolvers<ContextType>;
  initiative_info_stddev_fields?: Initiative_Info_Stddev_FieldsResolvers<ContextType>;
  initiative_info_stddev_pop_fields?: Initiative_Info_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_info_stddev_samp_fields?: Initiative_Info_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_info_sum_fields?: Initiative_Info_Sum_FieldsResolvers<ContextType>;
  initiative_info_var_pop_fields?: Initiative_Info_Var_Pop_FieldsResolvers<ContextType>;
  initiative_info_var_samp_fields?: Initiative_Info_Var_Samp_FieldsResolvers<ContextType>;
  initiative_info_variance_fields?: Initiative_Info_Variance_FieldsResolvers<ContextType>;
  initiative_members?: Initiative_MembersResolvers<ContextType>;
  initiative_members_aggregate?: Initiative_Members_AggregateResolvers<ContextType>;
  initiative_members_aggregate_fields?: Initiative_Members_Aggregate_FieldsResolvers<ContextType>;
  initiative_members_avg_fields?: Initiative_Members_Avg_FieldsResolvers<ContextType>;
  initiative_members_max_fields?: Initiative_Members_Max_FieldsResolvers<ContextType>;
  initiative_members_min_fields?: Initiative_Members_Min_FieldsResolvers<ContextType>;
  initiative_members_mutation_response?: Initiative_Members_Mutation_ResponseResolvers<ContextType>;
  initiative_members_stddev_fields?: Initiative_Members_Stddev_FieldsResolvers<ContextType>;
  initiative_members_stddev_pop_fields?: Initiative_Members_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_members_stddev_samp_fields?: Initiative_Members_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_members_sum_fields?: Initiative_Members_Sum_FieldsResolvers<ContextType>;
  initiative_members_var_pop_fields?: Initiative_Members_Var_Pop_FieldsResolvers<ContextType>;
  initiative_members_var_samp_fields?: Initiative_Members_Var_Samp_FieldsResolvers<ContextType>;
  initiative_members_variance_fields?: Initiative_Members_Variance_FieldsResolvers<ContextType>;
  initiative_poll_votes?: Initiative_Poll_VotesResolvers<ContextType>;
  initiative_poll_votes_aggregate?: Initiative_Poll_Votes_AggregateResolvers<ContextType>;
  initiative_poll_votes_aggregate_fields?: Initiative_Poll_Votes_Aggregate_FieldsResolvers<ContextType>;
  initiative_poll_votes_avg_fields?: Initiative_Poll_Votes_Avg_FieldsResolvers<ContextType>;
  initiative_poll_votes_max_fields?: Initiative_Poll_Votes_Max_FieldsResolvers<ContextType>;
  initiative_poll_votes_min_fields?: Initiative_Poll_Votes_Min_FieldsResolvers<ContextType>;
  initiative_poll_votes_mutation_response?: Initiative_Poll_Votes_Mutation_ResponseResolvers<ContextType>;
  initiative_poll_votes_stddev_fields?: Initiative_Poll_Votes_Stddev_FieldsResolvers<ContextType>;
  initiative_poll_votes_stddev_pop_fields?: Initiative_Poll_Votes_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_poll_votes_stddev_samp_fields?: Initiative_Poll_Votes_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_poll_votes_sum_fields?: Initiative_Poll_Votes_Sum_FieldsResolvers<ContextType>;
  initiative_poll_votes_var_pop_fields?: Initiative_Poll_Votes_Var_Pop_FieldsResolvers<ContextType>;
  initiative_poll_votes_var_samp_fields?: Initiative_Poll_Votes_Var_Samp_FieldsResolvers<ContextType>;
  initiative_poll_votes_variance_fields?: Initiative_Poll_Votes_Variance_FieldsResolvers<ContextType>;
  initiative_polls?: Initiative_PollsResolvers<ContextType>;
  initiative_polls_aggregate?: Initiative_Polls_AggregateResolvers<ContextType>;
  initiative_polls_aggregate_fields?: Initiative_Polls_Aggregate_FieldsResolvers<ContextType>;
  initiative_polls_avg_fields?: Initiative_Polls_Avg_FieldsResolvers<ContextType>;
  initiative_polls_max_fields?: Initiative_Polls_Max_FieldsResolvers<ContextType>;
  initiative_polls_min_fields?: Initiative_Polls_Min_FieldsResolvers<ContextType>;
  initiative_polls_mutation_response?: Initiative_Polls_Mutation_ResponseResolvers<ContextType>;
  initiative_polls_stddev_fields?: Initiative_Polls_Stddev_FieldsResolvers<ContextType>;
  initiative_polls_stddev_pop_fields?: Initiative_Polls_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_polls_stddev_samp_fields?: Initiative_Polls_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_polls_sum_fields?: Initiative_Polls_Sum_FieldsResolvers<ContextType>;
  initiative_polls_var_pop_fields?: Initiative_Polls_Var_Pop_FieldsResolvers<ContextType>;
  initiative_polls_var_samp_fields?: Initiative_Polls_Var_Samp_FieldsResolvers<ContextType>;
  initiative_polls_variance_fields?: Initiative_Polls_Variance_FieldsResolvers<ContextType>;
  initiative_post_reactions?: Initiative_Post_ReactionsResolvers<ContextType>;
  initiative_post_reactions_aggregate?: Initiative_Post_Reactions_AggregateResolvers<ContextType>;
  initiative_post_reactions_aggregate_fields?: Initiative_Post_Reactions_Aggregate_FieldsResolvers<ContextType>;
  initiative_post_reactions_avg_fields?: Initiative_Post_Reactions_Avg_FieldsResolvers<ContextType>;
  initiative_post_reactions_max_fields?: Initiative_Post_Reactions_Max_FieldsResolvers<ContextType>;
  initiative_post_reactions_min_fields?: Initiative_Post_Reactions_Min_FieldsResolvers<ContextType>;
  initiative_post_reactions_mutation_response?: Initiative_Post_Reactions_Mutation_ResponseResolvers<ContextType>;
  initiative_post_reactions_stddev_fields?: Initiative_Post_Reactions_Stddev_FieldsResolvers<ContextType>;
  initiative_post_reactions_stddev_pop_fields?: Initiative_Post_Reactions_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_post_reactions_stddev_samp_fields?: Initiative_Post_Reactions_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_post_reactions_sum_fields?: Initiative_Post_Reactions_Sum_FieldsResolvers<ContextType>;
  initiative_post_reactions_var_pop_fields?: Initiative_Post_Reactions_Var_Pop_FieldsResolvers<ContextType>;
  initiative_post_reactions_var_samp_fields?: Initiative_Post_Reactions_Var_Samp_FieldsResolvers<ContextType>;
  initiative_post_reactions_variance_fields?: Initiative_Post_Reactions_Variance_FieldsResolvers<ContextType>;
  initiative_posts?: Initiative_PostsResolvers<ContextType>;
  initiative_posts_aggregate?: Initiative_Posts_AggregateResolvers<ContextType>;
  initiative_posts_aggregate_fields?: Initiative_Posts_Aggregate_FieldsResolvers<ContextType>;
  initiative_posts_avg_fields?: Initiative_Posts_Avg_FieldsResolvers<ContextType>;
  initiative_posts_max_fields?: Initiative_Posts_Max_FieldsResolvers<ContextType>;
  initiative_posts_min_fields?: Initiative_Posts_Min_FieldsResolvers<ContextType>;
  initiative_posts_mutation_response?: Initiative_Posts_Mutation_ResponseResolvers<ContextType>;
  initiative_posts_stddev_fields?: Initiative_Posts_Stddev_FieldsResolvers<ContextType>;
  initiative_posts_stddev_pop_fields?: Initiative_Posts_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_posts_stddev_samp_fields?: Initiative_Posts_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_posts_sum_fields?: Initiative_Posts_Sum_FieldsResolvers<ContextType>;
  initiative_posts_var_pop_fields?: Initiative_Posts_Var_Pop_FieldsResolvers<ContextType>;
  initiative_posts_var_samp_fields?: Initiative_Posts_Var_Samp_FieldsResolvers<ContextType>;
  initiative_posts_variance_fields?: Initiative_Posts_Variance_FieldsResolvers<ContextType>;
  initiative_projects?: Initiative_ProjectsResolvers<ContextType>;
  initiative_projects_aggregate?: Initiative_Projects_AggregateResolvers<ContextType>;
  initiative_projects_aggregate_fields?: Initiative_Projects_Aggregate_FieldsResolvers<ContextType>;
  initiative_projects_avg_fields?: Initiative_Projects_Avg_FieldsResolvers<ContextType>;
  initiative_projects_max_fields?: Initiative_Projects_Max_FieldsResolvers<ContextType>;
  initiative_projects_min_fields?: Initiative_Projects_Min_FieldsResolvers<ContextType>;
  initiative_projects_mutation_response?: Initiative_Projects_Mutation_ResponseResolvers<ContextType>;
  initiative_projects_stddev_fields?: Initiative_Projects_Stddev_FieldsResolvers<ContextType>;
  initiative_projects_stddev_pop_fields?: Initiative_Projects_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_projects_stddev_samp_fields?: Initiative_Projects_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_projects_sum_fields?: Initiative_Projects_Sum_FieldsResolvers<ContextType>;
  initiative_projects_var_pop_fields?: Initiative_Projects_Var_Pop_FieldsResolvers<ContextType>;
  initiative_projects_var_samp_fields?: Initiative_Projects_Var_Samp_FieldsResolvers<ContextType>;
  initiative_projects_variance_fields?: Initiative_Projects_Variance_FieldsResolvers<ContextType>;
  initiative_tags?: Initiative_TagsResolvers<ContextType>;
  initiative_tags_aggregate?: Initiative_Tags_AggregateResolvers<ContextType>;
  initiative_tags_aggregate_fields?: Initiative_Tags_Aggregate_FieldsResolvers<ContextType>;
  initiative_tags_avg_fields?: Initiative_Tags_Avg_FieldsResolvers<ContextType>;
  initiative_tags_max_fields?: Initiative_Tags_Max_FieldsResolvers<ContextType>;
  initiative_tags_min_fields?: Initiative_Tags_Min_FieldsResolvers<ContextType>;
  initiative_tags_mutation_response?: Initiative_Tags_Mutation_ResponseResolvers<ContextType>;
  initiative_tags_stddev_fields?: Initiative_Tags_Stddev_FieldsResolvers<ContextType>;
  initiative_tags_stddev_pop_fields?: Initiative_Tags_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_tags_stddev_samp_fields?: Initiative_Tags_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_tags_sum_fields?: Initiative_Tags_Sum_FieldsResolvers<ContextType>;
  initiative_tags_var_pop_fields?: Initiative_Tags_Var_Pop_FieldsResolvers<ContextType>;
  initiative_tags_var_samp_fields?: Initiative_Tags_Var_Samp_FieldsResolvers<ContextType>;
  initiative_tags_variance_fields?: Initiative_Tags_Variance_FieldsResolvers<ContextType>;
  initiative_tasks?: Initiative_TasksResolvers<ContextType>;
  initiative_tasks_aggregate?: Initiative_Tasks_AggregateResolvers<ContextType>;
  initiative_tasks_aggregate_fields?: Initiative_Tasks_Aggregate_FieldsResolvers<ContextType>;
  initiative_tasks_avg_fields?: Initiative_Tasks_Avg_FieldsResolvers<ContextType>;
  initiative_tasks_max_fields?: Initiative_Tasks_Max_FieldsResolvers<ContextType>;
  initiative_tasks_min_fields?: Initiative_Tasks_Min_FieldsResolvers<ContextType>;
  initiative_tasks_mutation_response?: Initiative_Tasks_Mutation_ResponseResolvers<ContextType>;
  initiative_tasks_stddev_fields?: Initiative_Tasks_Stddev_FieldsResolvers<ContextType>;
  initiative_tasks_stddev_pop_fields?: Initiative_Tasks_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_tasks_stddev_samp_fields?: Initiative_Tasks_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_tasks_sum_fields?: Initiative_Tasks_Sum_FieldsResolvers<ContextType>;
  initiative_tasks_var_pop_fields?: Initiative_Tasks_Var_Pop_FieldsResolvers<ContextType>;
  initiative_tasks_var_samp_fields?: Initiative_Tasks_Var_Samp_FieldsResolvers<ContextType>;
  initiative_tasks_variance_fields?: Initiative_Tasks_Variance_FieldsResolvers<ContextType>;
  initiative_visits?: Initiative_VisitsResolvers<ContextType>;
  initiative_visits_aggregate?: Initiative_Visits_AggregateResolvers<ContextType>;
  initiative_visits_aggregate_fields?: Initiative_Visits_Aggregate_FieldsResolvers<ContextType>;
  initiative_visits_avg_fields?: Initiative_Visits_Avg_FieldsResolvers<ContextType>;
  initiative_visits_max_fields?: Initiative_Visits_Max_FieldsResolvers<ContextType>;
  initiative_visits_min_fields?: Initiative_Visits_Min_FieldsResolvers<ContextType>;
  initiative_visits_mutation_response?: Initiative_Visits_Mutation_ResponseResolvers<ContextType>;
  initiative_visits_stddev_fields?: Initiative_Visits_Stddev_FieldsResolvers<ContextType>;
  initiative_visits_stddev_pop_fields?: Initiative_Visits_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_visits_stddev_samp_fields?: Initiative_Visits_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_visits_sum_fields?: Initiative_Visits_Sum_FieldsResolvers<ContextType>;
  initiative_visits_var_pop_fields?: Initiative_Visits_Var_Pop_FieldsResolvers<ContextType>;
  initiative_visits_var_samp_fields?: Initiative_Visits_Var_Samp_FieldsResolvers<ContextType>;
  initiative_visits_variance_fields?: Initiative_Visits_Variance_FieldsResolvers<ContextType>;
  initiative_volunteers?: Initiative_VolunteersResolvers<ContextType>;
  initiative_volunteers_aggregate?: Initiative_Volunteers_AggregateResolvers<ContextType>;
  initiative_volunteers_aggregate_fields?: Initiative_Volunteers_Aggregate_FieldsResolvers<ContextType>;
  initiative_volunteers_avg_fields?: Initiative_Volunteers_Avg_FieldsResolvers<ContextType>;
  initiative_volunteers_max_fields?: Initiative_Volunteers_Max_FieldsResolvers<ContextType>;
  initiative_volunteers_min_fields?: Initiative_Volunteers_Min_FieldsResolvers<ContextType>;
  initiative_volunteers_mutation_response?: Initiative_Volunteers_Mutation_ResponseResolvers<ContextType>;
  initiative_volunteers_stddev_fields?: Initiative_Volunteers_Stddev_FieldsResolvers<ContextType>;
  initiative_volunteers_stddev_pop_fields?: Initiative_Volunteers_Stddev_Pop_FieldsResolvers<ContextType>;
  initiative_volunteers_stddev_samp_fields?: Initiative_Volunteers_Stddev_Samp_FieldsResolvers<ContextType>;
  initiative_volunteers_sum_fields?: Initiative_Volunteers_Sum_FieldsResolvers<ContextType>;
  initiative_volunteers_var_pop_fields?: Initiative_Volunteers_Var_Pop_FieldsResolvers<ContextType>;
  initiative_volunteers_var_samp_fields?: Initiative_Volunteers_Var_Samp_FieldsResolvers<ContextType>;
  initiative_volunteers_variance_fields?: Initiative_Volunteers_Variance_FieldsResolvers<ContextType>;
  initiatives?: InitiativesResolvers<ContextType>;
  initiatives_aggregate?: Initiatives_AggregateResolvers<ContextType>;
  initiatives_aggregate_fields?: Initiatives_Aggregate_FieldsResolvers<ContextType>;
  initiatives_max_fields?: Initiatives_Max_FieldsResolvers<ContextType>;
  initiatives_min_fields?: Initiatives_Min_FieldsResolvers<ContextType>;
  initiatives_mutation_response?: Initiatives_Mutation_ResponseResolvers<ContextType>;
  initiatives_view?: Initiatives_ViewResolvers<ContextType>;
  initiatives_view_aggregate?: Initiatives_View_AggregateResolvers<ContextType>;
  initiatives_view_aggregate_fields?: Initiatives_View_Aggregate_FieldsResolvers<ContextType>;
  initiatives_view_avg_fields?: Initiatives_View_Avg_FieldsResolvers<ContextType>;
  initiatives_view_max_fields?: Initiatives_View_Max_FieldsResolvers<ContextType>;
  initiatives_view_min_fields?: Initiatives_View_Min_FieldsResolvers<ContextType>;
  initiatives_view_stddev_fields?: Initiatives_View_Stddev_FieldsResolvers<ContextType>;
  initiatives_view_stddev_pop_fields?: Initiatives_View_Stddev_Pop_FieldsResolvers<ContextType>;
  initiatives_view_stddev_samp_fields?: Initiatives_View_Stddev_Samp_FieldsResolvers<ContextType>;
  initiatives_view_sum_fields?: Initiatives_View_Sum_FieldsResolvers<ContextType>;
  initiatives_view_var_pop_fields?: Initiatives_View_Var_Pop_FieldsResolvers<ContextType>;
  initiatives_view_var_samp_fields?: Initiatives_View_Var_Samp_FieldsResolvers<ContextType>;
  initiatives_view_variance_fields?: Initiatives_View_Variance_FieldsResolvers<ContextType>;
  jsonb?: GraphQLScalarType;
  map_entries?: Map_EntriesResolvers<ContextType>;
  map_entries_aggregate?: Map_Entries_AggregateResolvers<ContextType>;
  map_entries_aggregate_fields?: Map_Entries_Aggregate_FieldsResolvers<ContextType>;
  map_entries_avg_fields?: Map_Entries_Avg_FieldsResolvers<ContextType>;
  map_entries_max_fields?: Map_Entries_Max_FieldsResolvers<ContextType>;
  map_entries_min_fields?: Map_Entries_Min_FieldsResolvers<ContextType>;
  map_entries_stddev_fields?: Map_Entries_Stddev_FieldsResolvers<ContextType>;
  map_entries_stddev_pop_fields?: Map_Entries_Stddev_Pop_FieldsResolvers<ContextType>;
  map_entries_stddev_samp_fields?: Map_Entries_Stddev_Samp_FieldsResolvers<ContextType>;
  map_entries_sum_fields?: Map_Entries_Sum_FieldsResolvers<ContextType>;
  map_entries_var_pop_fields?: Map_Entries_Var_Pop_FieldsResolvers<ContextType>;
  map_entries_var_samp_fields?: Map_Entries_Var_Samp_FieldsResolvers<ContextType>;
  map_entries_variance_fields?: Map_Entries_Variance_FieldsResolvers<ContextType>;
  mutation_root?: Mutation_RootResolvers<ContextType>;
  name?: GraphQLScalarType;
  numeric?: GraphQLScalarType;
  org_members?: Org_MembersResolvers<ContextType>;
  org_members_aggregate?: Org_Members_AggregateResolvers<ContextType>;
  org_members_aggregate_fields?: Org_Members_Aggregate_FieldsResolvers<ContextType>;
  org_members_avg_fields?: Org_Members_Avg_FieldsResolvers<ContextType>;
  org_members_max_fields?: Org_Members_Max_FieldsResolvers<ContextType>;
  org_members_min_fields?: Org_Members_Min_FieldsResolvers<ContextType>;
  org_members_mutation_response?: Org_Members_Mutation_ResponseResolvers<ContextType>;
  org_members_stddev_fields?: Org_Members_Stddev_FieldsResolvers<ContextType>;
  org_members_stddev_pop_fields?: Org_Members_Stddev_Pop_FieldsResolvers<ContextType>;
  org_members_stddev_samp_fields?: Org_Members_Stddev_Samp_FieldsResolvers<ContextType>;
  org_members_sum_fields?: Org_Members_Sum_FieldsResolvers<ContextType>;
  org_members_var_pop_fields?: Org_Members_Var_Pop_FieldsResolvers<ContextType>;
  org_members_var_samp_fields?: Org_Members_Var_Samp_FieldsResolvers<ContextType>;
  org_members_variance_fields?: Org_Members_Variance_FieldsResolvers<ContextType>;
  org_projects?: Org_ProjectsResolvers<ContextType>;
  org_projects_aggregate?: Org_Projects_AggregateResolvers<ContextType>;
  org_projects_aggregate_fields?: Org_Projects_Aggregate_FieldsResolvers<ContextType>;
  org_projects_avg_fields?: Org_Projects_Avg_FieldsResolvers<ContextType>;
  org_projects_max_fields?: Org_Projects_Max_FieldsResolvers<ContextType>;
  org_projects_min_fields?: Org_Projects_Min_FieldsResolvers<ContextType>;
  org_projects_mutation_response?: Org_Projects_Mutation_ResponseResolvers<ContextType>;
  org_projects_stddev_fields?: Org_Projects_Stddev_FieldsResolvers<ContextType>;
  org_projects_stddev_pop_fields?: Org_Projects_Stddev_Pop_FieldsResolvers<ContextType>;
  org_projects_stddev_samp_fields?: Org_Projects_Stddev_Samp_FieldsResolvers<ContextType>;
  org_projects_sum_fields?: Org_Projects_Sum_FieldsResolvers<ContextType>;
  org_projects_var_pop_fields?: Org_Projects_Var_Pop_FieldsResolvers<ContextType>;
  org_projects_var_samp_fields?: Org_Projects_Var_Samp_FieldsResolvers<ContextType>;
  org_projects_variance_fields?: Org_Projects_Variance_FieldsResolvers<ContextType>;
  org_tags?: Org_TagsResolvers<ContextType>;
  org_tags_aggregate?: Org_Tags_AggregateResolvers<ContextType>;
  org_tags_aggregate_fields?: Org_Tags_Aggregate_FieldsResolvers<ContextType>;
  org_tags_avg_fields?: Org_Tags_Avg_FieldsResolvers<ContextType>;
  org_tags_max_fields?: Org_Tags_Max_FieldsResolvers<ContextType>;
  org_tags_min_fields?: Org_Tags_Min_FieldsResolvers<ContextType>;
  org_tags_mutation_response?: Org_Tags_Mutation_ResponseResolvers<ContextType>;
  org_tags_stddev_fields?: Org_Tags_Stddev_FieldsResolvers<ContextType>;
  org_tags_stddev_pop_fields?: Org_Tags_Stddev_Pop_FieldsResolvers<ContextType>;
  org_tags_stddev_samp_fields?: Org_Tags_Stddev_Samp_FieldsResolvers<ContextType>;
  org_tags_sum_fields?: Org_Tags_Sum_FieldsResolvers<ContextType>;
  org_tags_var_pop_fields?: Org_Tags_Var_Pop_FieldsResolvers<ContextType>;
  org_tags_var_samp_fields?: Org_Tags_Var_Samp_FieldsResolvers<ContextType>;
  org_tags_variance_fields?: Org_Tags_Variance_FieldsResolvers<ContextType>;
  org_visits?: Org_VisitsResolvers<ContextType>;
  org_visits_aggregate?: Org_Visits_AggregateResolvers<ContextType>;
  org_visits_aggregate_fields?: Org_Visits_Aggregate_FieldsResolvers<ContextType>;
  org_visits_avg_fields?: Org_Visits_Avg_FieldsResolvers<ContextType>;
  org_visits_max_fields?: Org_Visits_Max_FieldsResolvers<ContextType>;
  org_visits_min_fields?: Org_Visits_Min_FieldsResolvers<ContextType>;
  org_visits_mutation_response?: Org_Visits_Mutation_ResponseResolvers<ContextType>;
  org_visits_stddev_fields?: Org_Visits_Stddev_FieldsResolvers<ContextType>;
  org_visits_stddev_pop_fields?: Org_Visits_Stddev_Pop_FieldsResolvers<ContextType>;
  org_visits_stddev_samp_fields?: Org_Visits_Stddev_Samp_FieldsResolvers<ContextType>;
  org_visits_sum_fields?: Org_Visits_Sum_FieldsResolvers<ContextType>;
  org_visits_var_pop_fields?: Org_Visits_Var_Pop_FieldsResolvers<ContextType>;
  org_visits_var_samp_fields?: Org_Visits_Var_Samp_FieldsResolvers<ContextType>;
  org_visits_variance_fields?: Org_Visits_Variance_FieldsResolvers<ContextType>;
  orgs?: OrgsResolvers<ContextType>;
  orgs_aggregate?: Orgs_AggregateResolvers<ContextType>;
  orgs_aggregate_fields?: Orgs_Aggregate_FieldsResolvers<ContextType>;
  orgs_max_fields?: Orgs_Max_FieldsResolvers<ContextType>;
  orgs_min_fields?: Orgs_Min_FieldsResolvers<ContextType>;
  orgs_mutation_response?: Orgs_Mutation_ResponseResolvers<ContextType>;
  orgs_view?: Orgs_ViewResolvers<ContextType>;
  orgs_view_aggregate?: Orgs_View_AggregateResolvers<ContextType>;
  orgs_view_aggregate_fields?: Orgs_View_Aggregate_FieldsResolvers<ContextType>;
  orgs_view_avg_fields?: Orgs_View_Avg_FieldsResolvers<ContextType>;
  orgs_view_max_fields?: Orgs_View_Max_FieldsResolvers<ContextType>;
  orgs_view_min_fields?: Orgs_View_Min_FieldsResolvers<ContextType>;
  orgs_view_stddev_fields?: Orgs_View_Stddev_FieldsResolvers<ContextType>;
  orgs_view_stddev_pop_fields?: Orgs_View_Stddev_Pop_FieldsResolvers<ContextType>;
  orgs_view_stddev_samp_fields?: Orgs_View_Stddev_Samp_FieldsResolvers<ContextType>;
  orgs_view_sum_fields?: Orgs_View_Sum_FieldsResolvers<ContextType>;
  orgs_view_var_pop_fields?: Orgs_View_Var_Pop_FieldsResolvers<ContextType>;
  orgs_view_var_samp_fields?: Orgs_View_Var_Samp_FieldsResolvers<ContextType>;
  orgs_view_variance_fields?: Orgs_View_Variance_FieldsResolvers<ContextType>;
  post_types?: Post_TypesResolvers<ContextType>;
  post_types_aggregate?: Post_Types_AggregateResolvers<ContextType>;
  post_types_aggregate_fields?: Post_Types_Aggregate_FieldsResolvers<ContextType>;
  post_types_max_fields?: Post_Types_Max_FieldsResolvers<ContextType>;
  post_types_min_fields?: Post_Types_Min_FieldsResolvers<ContextType>;
  post_types_mutation_response?: Post_Types_Mutation_ResponseResolvers<ContextType>;
  query_root?: Query_RootResolvers<ContextType>;
  reactions?: ReactionsResolvers<ContextType>;
  reactions_aggregate?: Reactions_AggregateResolvers<ContextType>;
  reactions_aggregate_fields?: Reactions_Aggregate_FieldsResolvers<ContextType>;
  reactions_max_fields?: Reactions_Max_FieldsResolvers<ContextType>;
  reactions_min_fields?: Reactions_Min_FieldsResolvers<ContextType>;
  reactions_mutation_response?: Reactions_Mutation_ResponseResolvers<ContextType>;
  spatial_ref_sys?: Spatial_Ref_SysResolvers<ContextType>;
  spatial_ref_sys_aggregate?: Spatial_Ref_Sys_AggregateResolvers<ContextType>;
  spatial_ref_sys_aggregate_fields?: Spatial_Ref_Sys_Aggregate_FieldsResolvers<ContextType>;
  spatial_ref_sys_avg_fields?: Spatial_Ref_Sys_Avg_FieldsResolvers<ContextType>;
  spatial_ref_sys_max_fields?: Spatial_Ref_Sys_Max_FieldsResolvers<ContextType>;
  spatial_ref_sys_min_fields?: Spatial_Ref_Sys_Min_FieldsResolvers<ContextType>;
  spatial_ref_sys_mutation_response?: Spatial_Ref_Sys_Mutation_ResponseResolvers<ContextType>;
  spatial_ref_sys_stddev_fields?: Spatial_Ref_Sys_Stddev_FieldsResolvers<ContextType>;
  spatial_ref_sys_stddev_pop_fields?: Spatial_Ref_Sys_Stddev_Pop_FieldsResolvers<ContextType>;
  spatial_ref_sys_stddev_samp_fields?: Spatial_Ref_Sys_Stddev_Samp_FieldsResolvers<ContextType>;
  spatial_ref_sys_sum_fields?: Spatial_Ref_Sys_Sum_FieldsResolvers<ContextType>;
  spatial_ref_sys_var_pop_fields?: Spatial_Ref_Sys_Var_Pop_FieldsResolvers<ContextType>;
  spatial_ref_sys_var_samp_fields?: Spatial_Ref_Sys_Var_Samp_FieldsResolvers<ContextType>;
  spatial_ref_sys_variance_fields?: Spatial_Ref_Sys_Variance_FieldsResolvers<ContextType>;
  subscription_root?: Subscription_RootResolvers<ContextType>;
  tags?: TagsResolvers<ContextType>;
  tags_aggregate?: Tags_AggregateResolvers<ContextType>;
  tags_aggregate_fields?: Tags_Aggregate_FieldsResolvers<ContextType>;
  tags_max_fields?: Tags_Max_FieldsResolvers<ContextType>;
  tags_min_fields?: Tags_Min_FieldsResolvers<ContextType>;
  tags_mutation_response?: Tags_Mutation_ResponseResolvers<ContextType>;
  task_statuses?: Task_StatusesResolvers<ContextType>;
  task_statuses_aggregate?: Task_Statuses_AggregateResolvers<ContextType>;
  task_statuses_aggregate_fields?: Task_Statuses_Aggregate_FieldsResolvers<ContextType>;
  task_statuses_max_fields?: Task_Statuses_Max_FieldsResolvers<ContextType>;
  task_statuses_min_fields?: Task_Statuses_Min_FieldsResolvers<ContextType>;
  task_statuses_mutation_response?: Task_Statuses_Mutation_ResponseResolvers<ContextType>;
  tenders?: TendersResolvers<ContextType>;
  tenders_aggregate?: Tenders_AggregateResolvers<ContextType>;
  tenders_aggregate_fields?: Tenders_Aggregate_FieldsResolvers<ContextType>;
  tenders_avg_fields?: Tenders_Avg_FieldsResolvers<ContextType>;
  tenders_max_fields?: Tenders_Max_FieldsResolvers<ContextType>;
  tenders_min_fields?: Tenders_Min_FieldsResolvers<ContextType>;
  tenders_mutation_response?: Tenders_Mutation_ResponseResolvers<ContextType>;
  tenders_stddev_fields?: Tenders_Stddev_FieldsResolvers<ContextType>;
  tenders_stddev_pop_fields?: Tenders_Stddev_Pop_FieldsResolvers<ContextType>;
  tenders_stddev_samp_fields?: Tenders_Stddev_Samp_FieldsResolvers<ContextType>;
  tenders_sum_fields?: Tenders_Sum_FieldsResolvers<ContextType>;
  tenders_var_pop_fields?: Tenders_Var_Pop_FieldsResolvers<ContextType>;
  tenders_var_samp_fields?: Tenders_Var_Samp_FieldsResolvers<ContextType>;
  tenders_variance_fields?: Tenders_Variance_FieldsResolvers<ContextType>;
  timestamp?: GraphQLScalarType;
  timestamptz?: GraphQLScalarType;
  user_settings?: User_SettingsResolvers<ContextType>;
  user_settings_aggregate?: User_Settings_AggregateResolvers<ContextType>;
  user_settings_aggregate_fields?: User_Settings_Aggregate_FieldsResolvers<ContextType>;
  user_settings_max_fields?: User_Settings_Max_FieldsResolvers<ContextType>;
  user_settings_min_fields?: User_Settings_Min_FieldsResolvers<ContextType>;
  user_settings_mutation_response?: User_Settings_Mutation_ResponseResolvers<ContextType>;
  user_subscriptions?: User_SubscriptionsResolvers<ContextType>;
  user_subscriptions_aggregate?: User_Subscriptions_AggregateResolvers<ContextType>;
  user_subscriptions_aggregate_fields?: User_Subscriptions_Aggregate_FieldsResolvers<ContextType>;
  user_subscriptions_max_fields?: User_Subscriptions_Max_FieldsResolvers<ContextType>;
  user_subscriptions_min_fields?: User_Subscriptions_Min_FieldsResolvers<ContextType>;
  user_subscriptions_mutation_response?: User_Subscriptions_Mutation_ResponseResolvers<ContextType>;
  users?: UsersResolvers<ContextType>;
  users_aggregate?: Users_AggregateResolvers<ContextType>;
  users_aggregate_fields?: Users_Aggregate_FieldsResolvers<ContextType>;
  users_max_fields?: Users_Max_FieldsResolvers<ContextType>;
  users_min_fields?: Users_Min_FieldsResolvers<ContextType>;
  users_mutation_response?: Users_Mutation_ResponseResolvers<ContextType>;
  uuid?: GraphQLScalarType;
};

export type DirectiveResolvers<ContextType = any> = {
  cached?: CachedDirectiveResolver<any, any, ContextType>;
};


export const DeleteSubscription = gql`
    mutation deleteSubscription($id: String!) {
  delete_user_subscriptions_by_pk(id: $id) {
    id
  }
}
    `;
export const DeleteWebSubscription = gql`
    mutation deleteWebSubscription($subscription_id: String!) {
  delete_user_subscriptions_by_pk(id: $subscription_id) {
    id
  }
}
    `;
export const SubscribedMembers = gql`
    query subscribedMembers($initiative_id: uuid!) {
  initiative_members(
    where: {_and: [{initiative_id: {_eq: $initiative_id}}, {_or: [{email_notifications_permission: {_eq: true}}, {push_notifications_permission: {_eq: true}}]}]}
  ) {
    initiative {
      name
    }
    initiative_id
    push_notifications_permission
    email_notifications_permission
    user {
      id
      subscriptions {
        id
        subscription
        service
        platform
      }
      display_name
      account {
        email
      }
    }
  }
}
    `;
export const User = gql`
    query user($id: uuid!) {
  user: users_by_pk(id: $id) {
    id
    display_name
    avatar_url
    account {
      email
    }
  }
}
    `;
export type DeleteSubscriptionMutationVariables = Exact<{
  id: Scalars['String'];
}>;


export type DeleteSubscriptionMutation = { delete_user_subscriptions_by_pk?: { id: string } | null | undefined };

export type DeleteWebSubscriptionMutationVariables = Exact<{
  subscription_id: Scalars['String'];
}>;


export type DeleteWebSubscriptionMutation = { delete_user_subscriptions_by_pk?: { id: string } | null | undefined };

export type SubscribedMembersQueryVariables = Exact<{
  initiative_id: Scalars['uuid'];
}>;


export type SubscribedMembersQuery = { initiative_members: Array<{ initiative_id: any, push_notifications_permission?: boolean | null | undefined, email_notifications_permission?: boolean | null | undefined, initiative: { name?: string | null | undefined }, user?: { id: any, display_name?: string | null | undefined, subscriptions: Array<{ id: string, subscription: string, service?: string | null | undefined, platform?: string | null | undefined }>, account?: { email?: any | null | undefined } | null | undefined } | null | undefined }> };

export type UserQueryVariables = Exact<{
  id: Scalars['uuid'];
}>;


export type UserQuery = { user?: { id: any, display_name?: string | null | undefined, avatar_url?: string | null | undefined, account?: { email?: any | null | undefined } | null | undefined } | null | undefined };


export const DeleteSubscriptionDocument = gql`
    mutation deleteSubscription($id: String!) {
  delete_user_subscriptions_by_pk(id: $id) {
    id
  }
}
    `;
export const DeleteWebSubscriptionDocument = gql`
    mutation deleteWebSubscription($subscription_id: String!) {
  delete_user_subscriptions_by_pk(id: $subscription_id) {
    id
  }
}
    `;
export const SubscribedMembersDocument = gql`
    query subscribedMembers($initiative_id: uuid!) {
  initiative_members(
    where: {_and: [{initiative_id: {_eq: $initiative_id}}, {_or: [{email_notifications_permission: {_eq: true}}, {push_notifications_permission: {_eq: true}}]}]}
  ) {
    initiative {
      name
    }
    initiative_id
    push_notifications_permission
    email_notifications_permission
    user {
      id
      subscriptions {
        id
        subscription
        service
        platform
      }
      display_name
      account {
        email
      }
    }
  }
}
    `;
export const UserDocument = gql`
    query user($id: uuid!) {
  user: users_by_pk(id: $id) {
    id
    display_name
    avatar_url
    account {
      email
    }
  }
}
    `;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
  return {
    deleteSubscription(variables: DeleteSubscriptionMutationVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<DeleteSubscriptionMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<DeleteSubscriptionMutation>(DeleteSubscriptionDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'deleteSubscription');
    },
    deleteWebSubscription(variables: DeleteWebSubscriptionMutationVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<DeleteWebSubscriptionMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<DeleteWebSubscriptionMutation>(DeleteWebSubscriptionDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'deleteWebSubscription');
    },
    subscribedMembers(variables: SubscribedMembersQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<SubscribedMembersQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<SubscribedMembersQuery>(SubscribedMembersDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'subscribedMembers');
    },
    user(variables: UserQueryVariables, requestHeaders?: Dom.RequestInit["headers"]): Promise<UserQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<UserQuery>(UserDocument, variables, {...requestHeaders, ...wrappedRequestHeaders}), 'user');
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;

      export interface PossibleTypesResultData {
        possibleTypes: {
          [key: string]: string[]
        }
      }
      const result: PossibleTypesResultData = {
  "possibleTypes": {}
};
      export default result;
    